import{S as we,i as Ee,s as ye,e as n,k as h,w as ds,t,M as $e,c as l,d as e,m as d,a as i,x as fs,h as o,b as r,G as s,g as m,y as ms,q as _s,o as bs,B as gs,v as Pe}from"../chunks/vendor-hf-doc-builder.js";import{T as xe}from"../chunks/Tip-hf-doc-builder.js";import{D as Ce}from"../chunks/Docstring-hf-doc-builder.js";import{C as je}from"../chunks/CodeBlock-hf-doc-builder.js";import{I as qe}from"../chunks/IconCopyLink-hf-doc-builder.js";function Oe(Ds){let u,$,g,j,w,E,N,y,U,M,q,B,G,v,A,P;return{c(){u=n("p"),$=n("code"),g=t("hmp_opt_level"),j=t(", "),w=n("code"),E=t("hmp_is_verbose"),N=t(", "),y=n("code"),U=t("hmp_bf16_ops"),M=t(" and "),q=n("code"),B=t("hmp_fp32_ops"),G=t(" will not be used if "),v=n("code"),A=t("use_habana_mixed_precision"),P=t(" is false.")},l(k){u=l(k,"P",{});var f=i(u);$=l(f,"CODE",{});var c=i($);g=o(c,"hmp_opt_level"),c.forEach(e),j=o(f,", "),w=l(f,"CODE",{});var _=i(w);E=o(_,"hmp_is_verbose"),_.forEach(e),N=o(f,", "),y=l(f,"CODE",{});var D=i(y);U=o(D,"hmp_bf16_ops"),D.forEach(e),M=o(f," and "),q=l(f,"CODE",{});var rs=i(q);B=o(rs,"hmp_fp32_ops"),rs.forEach(e),G=o(f," will not be used if "),v=l(f,"CODE",{});var ps=i(v);A=o(ps,"use_habana_mixed_precision"),ps.forEach(e),P=o(f," is false."),f.forEach(e)},m(k,f){m(k,u,f),s(u,$),s($,g),s(u,j),s(u,w),s(w,E),s(u,N),s(u,y),s(y,U),s(u,M),s(u,q),s(q,B),s(u,G),s(u,v),s(v,A),s(u,P)},d(k){k&&e(u)}}}function ke(Ds){let u,$,g,j,w,E,N,y,U,M,q,B,G,v,A,P,k,f,c,_,D,rs,ps,vs,Js,Rs,js,Vs,Ks,F,Qs,Ws,Xs,J,qs,Zs,sa,R,us,ws,aa,ea,ta,cs,Es,oa,na,la,I,ys,ia,ra,V,pa,ua,ca,L,$s,ha,da,K,fa,ma,_a,Y,Ps,ba,ga,Q,va,ja,qa,x,xs,wa,Ea,Cs,ya,$a,W,Pa,xa,Ca,C,Os,Oa,ka,ks,Ta,Ha,X,Ma,Ga,Is,S,Ls,O,Aa,Z,Da,Ia,ss,La,Ya,Ys,as,Ss,T,z,Ts,es,Sa,Hs,za,zs,ts,os,Ns;return E=new qe({}),v=new je({props:{code:`{
  "use_habana_mixed_precision": true/false,
  "hmp_opt_level": "O1"/"O2",
  "hmp_is_verbose": true/false,
  "use_fused_adam": true/false,
  "use_fused_clip_norm": true/false,
  "hmp_bf16_ops": [
    "torch operator to compute in bf16",
    "..."
  ],
  "hmp_fp32_ops": [
    "torch operator to compute in fp32",
    "..."
  ]
}`,highlighted:`<span class="hljs-punctuation">{</span>
  <span class="hljs-attr">&quot;use_habana_mixed_precision&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>/<span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_opt_level&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;O1&quot;</span>/<span class="hljs-string">&quot;O2&quot;</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_is_verbose&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>/<span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;use_fused_adam&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>/<span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;use_fused_clip_norm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span>/<span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_bf16_ops&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-string">&quot;torch operator to compute in bf16&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;...&quot;</span>
  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_fp32_ops&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-string">&quot;torch operator to compute in fp32&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;...&quot;</span>
  <span class="hljs-punctuation">]</span>
<span class="hljs-punctuation">}</span>`}}),S=new xe({props:{warning:!0,$$slots:{default:[Oe]},$$scope:{ctx:Ds}}}),as=new je({props:{code:`{
  "use_habana_mixed_precision": true,
  "hmp_opt_level": "O1",
  "hmp_is_verbose": false,
  "use_fused_adam": true,
  "use_fused_clip_norm": true,
  "hmp_bf16_ops": [
    "add",
    "addmm",
    "bmm",
    "div",
    "dropout",
    "gelu",
    "iadd",
    "linear",
    "layer_norm",
    "matmul",
    "mm",
    "rsub",
    "softmax",
    "truediv"
  ],
  "hmp_fp32_ops": [
    "embedding",
    "nll_loss",
    "log_softmax"
  ]
}`,highlighted:`<span class="hljs-punctuation">{</span>
  <span class="hljs-attr">&quot;use_habana_mixed_precision&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_opt_level&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;O1&quot;</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_is_verbose&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;use_fused_adam&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;use_fused_clip_norm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_bf16_ops&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-string">&quot;add&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;addmm&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;bmm&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;div&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;dropout&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;gelu&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;iadd&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;linear&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;layer_norm&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;matmul&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;mm&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;rsub&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;softmax&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;truediv&quot;</span>
  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;hmp_fp32_ops&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-string">&quot;embedding&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;nll_loss&quot;</span><span class="hljs-punctuation">,</span>
    <span class="hljs-string">&quot;log_softmax&quot;</span>
  <span class="hljs-punctuation">]</span>
<span class="hljs-punctuation">}</span>`}}),es=new qe({}),os=new Ce({props:{name:"class optimum.habana.GaudiConfig",anchor:"optimum.habana.GaudiConfig",parameters:[{name:"**kwargs",val:""}],source:"https://github.com/huggingface/optimum.habana/blob/vr_89/src/optimum/habana/gaudi_configuration.py#L48"}}),{c(){u=n("meta"),$=h(),g=n("h1"),j=n("a"),w=n("span"),ds(E.$$.fragment),N=h(),y=n("span"),U=t("Gaudi Configuration"),M=h(),q=n("p"),B=t(`In order to make the most of Gaudi, it is advised to rely on advanced features such as Habana Mixed Precision or optimized operators.
You can specify which features to use in a Gaudi configuration, which will take the form of a JSON file following this template:`),G=h(),ds(v.$$.fragment),A=h(),P=n("p"),k=t("Here is a description of each configuration parameter:"),f=h(),c=n("ul"),_=n("li"),D=n("code"),rs=t("use_habana_mixed_precision"),ps=t(" enables to decide whether or not Habana Mixed Precision (HMP) should be used. HMP allows to mix "),vs=n("em"),Js=t("fp32"),Rs=t(" and "),js=n("em"),Vs=t("bf16"),Ks=t(" operations. You can find more information "),F=n("a"),Qs=t("here"),Ws=t("."),Xs=h(),J=n("li"),qs=n("code"),Zs=t("hmp_opt_level"),sa=t(" enables to specify the optimization level to use for HMP such as:"),R=n("ul"),us=n("li"),ws=n("code"),aa=t('"O1"'),ea=t(", which is the default and recommended mode of operation,"),ta=h(),cs=n("li"),Es=n("code"),oa=t('"O2"'),na=t(", which can be used for debugging convergence issues as well as for initial iterations of converting a new model to run with mixed precision."),la=h(),I=n("li"),ys=n("code"),ia=t("hmp_is_verbose"),ra=t(" enables to decide whether to log precision decisions for each operation for debugging purposes. It is disabled by default. You can find an example of such log "),V=n("a"),pa=t("here"),ua=t("."),ca=h(),L=n("li"),$s=n("code"),ha=t("use_fused_adam"),da=t(" enables to decide whether to use the "),K=n("a"),fa=t("custom fused implementation of the ADAM optimizer provided by Habana"),ma=t("."),_a=h(),Y=n("li"),Ps=n("code"),ba=t("use_fused_clip_norm"),ga=t(" enables to decide whether to use the "),Q=n("a"),va=t("custom fused implementation of gradient norm clipping provided by Habana"),ja=t("."),qa=h(),x=n("li"),xs=n("code"),wa=t("hmp_bf16_ops"),Ea=t(" enables to specify the Torch operations that should be computed in "),Cs=n("em"),ya=t("bf16"),$a=t(". You can find more information about casting rules "),W=n("a"),Pa=t("here"),xa=t("."),Ca=h(),C=n("li"),Os=n("code"),Oa=t("hmp_fp32_ops"),ka=t(" enables to specify the Torch operations that should be computed in "),ks=n("em"),Ta=t("fp32"),Ha=t(". You can find more information about casting rules "),X=n("a"),Ma=t("here"),Ga=t("."),Is=h(),ds(S.$$.fragment),Ls=h(),O=n("p"),Aa=t("You can find examples of Gaudi configurations in the "),Z=n("a"),Da=t("Habana model repository on the Hugging Face Hub"),Ia=t(". For instance, "),ss=n("a"),La=t("for BERT Large we have"),Ya=t(":"),Ys=h(),ds(as.$$.fragment),Ss=h(),T=n("h2"),z=n("a"),Ts=n("span"),ds(es.$$.fragment),Sa=h(),Hs=n("span"),za=t("GaudiConfig"),zs=h(),ts=n("div"),ds(os.$$.fragment),this.h()},l(a){const p=$e('[data-svelte="svelte-1phssyn"]',document.head);u=l(p,"META",{name:!0,content:!0}),p.forEach(e),$=d(a),g=l(a,"H1",{class:!0});var ns=i(g);j=l(ns,"A",{id:!0,class:!0,href:!0});var Ba=i(j);w=l(Ba,"SPAN",{});var Fa=i(w);fs(E.$$.fragment,Fa),Fa.forEach(e),Ba.forEach(e),N=d(ns),y=l(ns,"SPAN",{});var Ja=i(y);U=o(Ja,"Gaudi Configuration"),Ja.forEach(e),ns.forEach(e),M=d(a),q=l(a,"P",{});var Ra=i(q);B=o(Ra,`In order to make the most of Gaudi, it is advised to rely on advanced features such as Habana Mixed Precision or optimized operators.
You can specify which features to use in a Gaudi configuration, which will take the form of a JSON file following this template:`),Ra.forEach(e),G=d(a),fs(v.$$.fragment,a),A=d(a),P=l(a,"P",{});var Va=i(P);k=o(Va,"Here is a description of each configuration parameter:"),Va.forEach(e),f=d(a),c=l(a,"UL",{});var b=i(c);_=l(b,"LI",{});var H=i(_);D=l(H,"CODE",{});var Ka=i(D);rs=o(Ka,"use_habana_mixed_precision"),Ka.forEach(e),ps=o(H," enables to decide whether or not Habana Mixed Precision (HMP) should be used. HMP allows to mix "),vs=l(H,"EM",{});var Qa=i(vs);Js=o(Qa,"fp32"),Qa.forEach(e),Rs=o(H," and "),js=l(H,"EM",{});var Wa=i(js);Vs=o(Wa,"bf16"),Wa.forEach(e),Ks=o(H," operations. You can find more information "),F=l(H,"A",{href:!0,rel:!0});var Xa=i(F);Qs=o(Xa,"here"),Xa.forEach(e),Ws=o(H,"."),H.forEach(e),Xs=d(b),J=l(b,"LI",{});var Us=i(J);qs=l(Us,"CODE",{});var Za=i(qs);Zs=o(Za,"hmp_opt_level"),Za.forEach(e),sa=o(Us," enables to specify the optimization level to use for HMP such as:"),R=l(Us,"UL",{});var Bs=i(R);us=l(Bs,"LI",{});var Na=i(us);ws=l(Na,"CODE",{});var se=i(ws);aa=o(se,'"O1"'),se.forEach(e),ea=o(Na,", which is the default and recommended mode of operation,"),Na.forEach(e),ta=d(Bs),cs=l(Bs,"LI",{});var Ua=i(cs);Es=l(Ua,"CODE",{});var ae=i(Es);oa=o(ae,'"O2"'),ae.forEach(e),na=o(Ua,", which can be used for debugging convergence issues as well as for initial iterations of converting a new model to run with mixed precision."),Ua.forEach(e),Bs.forEach(e),Us.forEach(e),la=d(b),I=l(b,"LI",{});var Ms=i(I);ys=l(Ms,"CODE",{});var ee=i(ys);ia=o(ee,"hmp_is_verbose"),ee.forEach(e),ra=o(Ms," enables to decide whether to log precision decisions for each operation for debugging purposes. It is disabled by default. You can find an example of such log "),V=l(Ms,"A",{href:!0,rel:!0});var te=i(V);pa=o(te,"here"),te.forEach(e),ua=o(Ms,"."),Ms.forEach(e),ca=d(b),L=l(b,"LI",{});var Gs=i(L);$s=l(Gs,"CODE",{});var oe=i($s);ha=o(oe,"use_fused_adam"),oe.forEach(e),da=o(Gs," enables to decide whether to use the "),K=l(Gs,"A",{href:!0,rel:!0});var ne=i(K);fa=o(ne,"custom fused implementation of the ADAM optimizer provided by Habana"),ne.forEach(e),ma=o(Gs,"."),Gs.forEach(e),_a=d(b),Y=l(b,"LI",{});var As=i(Y);Ps=l(As,"CODE",{});var le=i(Ps);ba=o(le,"use_fused_clip_norm"),le.forEach(e),ga=o(As," enables to decide whether to use the "),Q=l(As,"A",{href:!0,rel:!0});var ie=i(Q);va=o(ie,"custom fused implementation of gradient norm clipping provided by Habana"),ie.forEach(e),ja=o(As,"."),As.forEach(e),qa=d(b),x=l(b,"LI",{});var ls=i(x);xs=l(ls,"CODE",{});var re=i(xs);wa=o(re,"hmp_bf16_ops"),re.forEach(e),Ea=o(ls," enables to specify the Torch operations that should be computed in "),Cs=l(ls,"EM",{});var pe=i(Cs);ya=o(pe,"bf16"),pe.forEach(e),$a=o(ls,". You can find more information about casting rules "),W=l(ls,"A",{href:!0,rel:!0});var ue=i(W);Pa=o(ue,"here"),ue.forEach(e),xa=o(ls,"."),ls.forEach(e),Ca=d(b),C=l(b,"LI",{});var is=i(C);Os=l(is,"CODE",{});var ce=i(Os);Oa=o(ce,"hmp_fp32_ops"),ce.forEach(e),ka=o(is," enables to specify the Torch operations that should be computed in "),ks=l(is,"EM",{});var he=i(ks);Ta=o(he,"fp32"),he.forEach(e),Ha=o(is,". You can find more information about casting rules "),X=l(is,"A",{href:!0,rel:!0});var de=i(X);Ma=o(de,"here"),de.forEach(e),Ga=o(is,"."),is.forEach(e),b.forEach(e),Is=d(a),fs(S.$$.fragment,a),Ls=d(a),O=l(a,"P",{});var hs=i(O);Aa=o(hs,"You can find examples of Gaudi configurations in the "),Z=l(hs,"A",{href:!0,rel:!0});var fe=i(Z);Da=o(fe,"Habana model repository on the Hugging Face Hub"),fe.forEach(e),Ia=o(hs,". For instance, "),ss=l(hs,"A",{href:!0,rel:!0});var me=i(ss);La=o(me,"for BERT Large we have"),me.forEach(e),Ya=o(hs,":"),hs.forEach(e),Ys=d(a),fs(as.$$.fragment,a),Ss=d(a),T=l(a,"H2",{class:!0});var Fs=i(T);z=l(Fs,"A",{id:!0,class:!0,href:!0});var _e=i(z);Ts=l(_e,"SPAN",{});var be=i(Ts);fs(es.$$.fragment,be),be.forEach(e),_e.forEach(e),Sa=d(Fs),Hs=l(Fs,"SPAN",{});var ge=i(Hs);za=o(ge,"GaudiConfig"),ge.forEach(e),Fs.forEach(e),zs=d(a),ts=l(a,"DIV",{class:!0});var ve=i(ts);fs(os.$$.fragment,ve),ve.forEach(e),this.h()},h(){r(u,"name","hf:doc:metadata"),r(u,"content",JSON.stringify(Te)),r(j,"id","gaudi-configuration"),r(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(j,"href","#gaudi-configuration"),r(g,"class","relative group"),r(F,"href","https://docs.habana.ai/en/latest/PyTorch/PyTorch_User_Guide/PT_Mixed_Precision.html"),r(F,"rel","nofollow"),r(V,"href","https://docs.habana.ai/en/latest/PyTorch/PyTorch_User_Guide/PT_Mixed_Precision.html#hmp-logs"),r(V,"rel","nofollow"),r(K,"href","https://docs.habana.ai/en/latest/PyTorch/Model_Optimization_PyTorch/Custom_Ops_PyTorch.html#custom-optimizers"),r(K,"rel","nofollow"),r(Q,"href","https://docs.habana.ai/en/latest/PyTorch/Model_Optimization_PyTorch/Custom_Ops_PyTorch.html#other-custom-ops"),r(Q,"rel","nofollow"),r(W,"href","https://docs.habana.ai/en/latest/PyTorch/PyTorch_User_Guide/PT_Mixed_Precision.html#basic-design-rules"),r(W,"rel","nofollow"),r(X,"href","https://docs.habana.ai/en/latest/PyTorch/PyTorch_User_Guide/PT_Mixed_Precision.html#basic-design-rules"),r(X,"rel","nofollow"),r(Z,"href","https://huggingface.co/habana"),r(Z,"rel","nofollow"),r(ss,"href","https://huggingface.co/Habana/bert-large-uncased-whole-word-masking/blob/main/gaudi_config.json"),r(ss,"rel","nofollow"),r(z,"id","optimum.habana.GaudiConfig"),r(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),r(z,"href","#optimum.habana.GaudiConfig"),r(T,"class","relative group"),r(ts,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(a,p){s(document.head,u),m(a,$,p),m(a,g,p),s(g,j),s(j,w),ms(E,w,null),s(g,N),s(g,y),s(y,U),m(a,M,p),m(a,q,p),s(q,B),m(a,G,p),ms(v,a,p),m(a,A,p),m(a,P,p),s(P,k),m(a,f,p),m(a,c,p),s(c,_),s(_,D),s(D,rs),s(_,ps),s(_,vs),s(vs,Js),s(_,Rs),s(_,js),s(js,Vs),s(_,Ks),s(_,F),s(F,Qs),s(_,Ws),s(c,Xs),s(c,J),s(J,qs),s(qs,Zs),s(J,sa),s(J,R),s(R,us),s(us,ws),s(ws,aa),s(us,ea),s(R,ta),s(R,cs),s(cs,Es),s(Es,oa),s(cs,na),s(c,la),s(c,I),s(I,ys),s(ys,ia),s(I,ra),s(I,V),s(V,pa),s(I,ua),s(c,ca),s(c,L),s(L,$s),s($s,ha),s(L,da),s(L,K),s(K,fa),s(L,ma),s(c,_a),s(c,Y),s(Y,Ps),s(Ps,ba),s(Y,ga),s(Y,Q),s(Q,va),s(Y,ja),s(c,qa),s(c,x),s(x,xs),s(xs,wa),s(x,Ea),s(x,Cs),s(Cs,ya),s(x,$a),s(x,W),s(W,Pa),s(x,xa),s(c,Ca),s(c,C),s(C,Os),s(Os,Oa),s(C,ka),s(C,ks),s(ks,Ta),s(C,Ha),s(C,X),s(X,Ma),s(C,Ga),m(a,Is,p),ms(S,a,p),m(a,Ls,p),m(a,O,p),s(O,Aa),s(O,Z),s(Z,Da),s(O,Ia),s(O,ss),s(ss,La),s(O,Ya),m(a,Ys,p),ms(as,a,p),m(a,Ss,p),m(a,T,p),s(T,z),s(z,Ts),ms(es,Ts,null),s(T,Sa),s(T,Hs),s(Hs,za),m(a,zs,p),m(a,ts,p),ms(os,ts,null),Ns=!0},p(a,[p]){const ns={};p&2&&(ns.$$scope={dirty:p,ctx:a}),S.$set(ns)},i(a){Ns||(_s(E.$$.fragment,a),_s(v.$$.fragment,a),_s(S.$$.fragment,a),_s(as.$$.fragment,a),_s(es.$$.fragment,a),_s(os.$$.fragment,a),Ns=!0)},o(a){bs(E.$$.fragment,a),bs(v.$$.fragment,a),bs(S.$$.fragment,a),bs(as.$$.fragment,a),bs(es.$$.fragment,a),bs(os.$$.fragment,a),Ns=!1},d(a){e(u),a&&e($),a&&e(g),gs(E),a&&e(M),a&&e(q),a&&e(G),gs(v,a),a&&e(A),a&&e(P),a&&e(f),a&&e(c),a&&e(Is),gs(S,a),a&&e(Ls),a&&e(O),a&&e(Ys),gs(as,a),a&&e(Ss),a&&e(T),gs(es),a&&e(zs),a&&e(ts),gs(os)}}}const Te={local:"gaudi-configuration",sections:[{local:"optimum.habana.GaudiConfig",title:"GaudiConfig"}],title:"Gaudi Configuration"};function He(Ds){return Pe(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Le extends we{constructor(u){super();Ee(this,u,He,ke,ye,{})}}export{Le as default,Te as metadata};
