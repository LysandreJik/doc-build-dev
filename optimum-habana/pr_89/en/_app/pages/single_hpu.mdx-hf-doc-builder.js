import{S as xa,i as Aa,s as La,e as r,k as f,w as Ia,t as n,M as Pa,c as o,d as a,m as h,a as l,x as Sa,h as i,b as s,G as e,g,y as $a,L as Ua,q as Ca,o as Ga,B as Ha,v as ka}from"../chunks/vendor-hf-doc-builder.js";import{I as za}from"../chunks/IconCopyLink-hf-doc-builder.js";function Oa(ra){let p,ee,_,w,j,y,se,F,ce,ae,C,fe,te,b,v,he,T,K,ue,me,G,de,ge,pe,d,_e,x,Q,ve,Ee,V,we,be,E,H,W,ye,Te,xe,k,X,Ae,Le,Ie,z,Z,Pe,Se,re,O,$e,oe,c,q,A,Ue,Ce,Ge,D,L,He,ke,ze,Y,I,Oe,qe,De,M,P,Ye,Me,Ne,N,S,Be,Je,Re,B,$,je,Fe,le;return y=new za({}),{c(){p=r("meta"),ee=f(),_=r("h1"),w=r("a"),j=r("span"),Ia(y.$$.fragment),se=f(),F=r("span"),ce=n("Single-HPU Training"),ae=f(),C=r("p"),fe=n("Training on a single device is as simple as in Transformers:"),te=f(),b=r("ul"),v=r("li"),he=n("You need to replace the Transformers\u2019 "),T=r("a"),K=r("code"),ue=n("Trainer"),me=n(" class by the "),G=r("a"),de=n("GaudiTrainer"),ge=n(" class,"),pe=f(),d=r("li"),_e=n("You need to replace the Transformers\u2019 "),x=r("a"),Q=r("code"),ve=n("TrainingArguments"),Ee=n(" class by the "),V=r("code"),we=n("GaudiTrainingArguments"),be=n(" class and add the following arguments:"),E=r("ul"),H=r("li"),W=r("code"),ye=n("use_habana"),Te=n(" to execute your script on a HPU,"),xe=f(),k=r("li"),X=r("code"),Ae=n("use_lazy_mode"),Le=n(" to use lazy mode or not (i.e. eager mode),"),Ie=f(),z=r("li"),Z=r("code"),Pe=n("gaudi_config_name"),Se=n(" to give the name of (Hub) or the path to (local) your Gaudi configuration file."),re=f(),O=r("p"),$e=n("You can find several examples in the official repository for the following tasks:"),oe=f(),c=r("ul"),q=r("li"),A=r("a"),Ue=n("language modeling"),Ce=n(","),Ge=f(),D=r("li"),L=r("a"),He=n("question answering"),ke=n(","),ze=f(),Y=r("li"),I=r("a"),Oe=n("summarization"),qe=n(","),De=f(),M=r("li"),P=r("a"),Ye=n("text classification"),Me=n(","),Ne=f(),N=r("li"),S=r("a"),Be=n("translation"),Je=n(","),Re=f(),B=r("li"),$=r("a"),je=n("image classification"),Fe=n("."),this.h()},l(t){const u=Pa('[data-svelte="svelte-1phssyn"]',document.head);p=o(u,"META",{name:!0,content:!0}),u.forEach(a),ee=h(t),_=o(t,"H1",{class:!0});var ne=l(_);w=o(ne,"A",{id:!0,class:!0,href:!0});var oa=l(w);j=o(oa,"SPAN",{});var la=l(j);Sa(y.$$.fragment,la),la.forEach(a),oa.forEach(a),se=h(ne),F=o(ne,"SPAN",{});var na=l(F);ce=i(na,"Single-HPU Training"),na.forEach(a),ne.forEach(a),ae=h(t),C=o(t,"P",{});var ia=l(C);fe=i(ia,"Training on a single device is as simple as in Transformers:"),ia.forEach(a),te=h(t),b=o(t,"UL",{});var ie=l(b);v=o(ie,"LI",{});var J=l(v);he=i(J,"You need to replace the Transformers\u2019 "),T=o(J,"A",{href:!0,rel:!0});var sa=l(T);K=o(sa,"CODE",{});var ca=l(K);ue=i(ca,"Trainer"),ca.forEach(a),sa.forEach(a),me=i(J," class by the "),G=o(J,"A",{href:!0});var fa=l(G);de=i(fa,"GaudiTrainer"),fa.forEach(a),ge=i(J," class,"),J.forEach(a),pe=h(ie),d=o(ie,"LI",{});var U=l(d);_e=i(U,"You need to replace the Transformers\u2019 "),x=o(U,"A",{href:!0,rel:!0});var ha=l(x);Q=o(ha,"CODE",{});var ua=l(Q);ve=i(ua,"TrainingArguments"),ua.forEach(a),ha.forEach(a),Ee=i(U," class by the "),V=o(U,"CODE",{});var ma=l(V);we=i(ma,"GaudiTrainingArguments"),ma.forEach(a),be=i(U," class and add the following arguments:"),E=o(U,"UL",{});var R=l(E);H=o(R,"LI",{});var Ke=l(H);W=o(Ke,"CODE",{});var da=l(W);ye=i(da,"use_habana"),da.forEach(a),Te=i(Ke," to execute your script on a HPU,"),Ke.forEach(a),xe=h(R),k=o(R,"LI",{});var Qe=l(k);X=o(Qe,"CODE",{});var ga=l(X);Ae=i(ga,"use_lazy_mode"),ga.forEach(a),Le=i(Qe," to use lazy mode or not (i.e. eager mode),"),Qe.forEach(a),Ie=h(R),z=o(R,"LI",{});var Ve=l(z);Z=o(Ve,"CODE",{});var pa=l(Z);Pe=i(pa,"gaudi_config_name"),pa.forEach(a),Se=i(Ve," to give the name of (Hub) or the path to (local) your Gaudi configuration file."),Ve.forEach(a),R.forEach(a),U.forEach(a),ie.forEach(a),re=h(t),O=o(t,"P",{});var _a=l(O);$e=i(_a,"You can find several examples in the official repository for the following tasks:"),_a.forEach(a),oe=h(t),c=o(t,"UL",{});var m=l(c);q=o(m,"LI",{});var We=l(q);A=o(We,"A",{href:!0,rel:!0});var va=l(A);Ue=i(va,"language modeling"),va.forEach(a),Ce=i(We,","),We.forEach(a),Ge=h(m),D=o(m,"LI",{});var Xe=l(D);L=o(Xe,"A",{href:!0,rel:!0});var Ea=l(L);He=i(Ea,"question answering"),Ea.forEach(a),ke=i(Xe,","),Xe.forEach(a),ze=h(m),Y=o(m,"LI",{});var Ze=l(Y);I=o(Ze,"A",{href:!0,rel:!0});var wa=l(I);Oe=i(wa,"summarization"),wa.forEach(a),qe=i(Ze,","),Ze.forEach(a),De=h(m),M=o(m,"LI",{});var ea=l(M);P=o(ea,"A",{href:!0,rel:!0});var ba=l(P);Ye=i(ba,"text classification"),ba.forEach(a),Me=i(ea,","),ea.forEach(a),Ne=h(m),N=o(m,"LI",{});var aa=l(N);S=o(aa,"A",{href:!0,rel:!0});var ya=l(S);Be=i(ya,"translation"),ya.forEach(a),Je=i(aa,","),aa.forEach(a),Re=h(m),B=o(m,"LI",{});var ta=l(B);$=o(ta,"A",{href:!0,rel:!0});var Ta=l($);je=i(Ta,"image classification"),Ta.forEach(a),Fe=i(ta,"."),ta.forEach(a),m.forEach(a),this.h()},h(){s(p,"name","hf:doc:metadata"),s(p,"content",JSON.stringify(qa)),s(w,"id","singlehpu-training"),s(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(w,"href","#singlehpu-training"),s(_,"class","relative group"),s(T,"href","https://huggingface.co/docs/transformers/main_classes/trainer"),s(T,"rel","nofollow"),s(G,"href","/docs/optimum.habana/pr_89/en/trainer#optimum.habana.GaudiTrainer"),s(x,"href","https://huggingface.co/docs/transformers/main_classes/trainer#transformers.TrainingArguments"),s(x,"rel","nofollow"),s(A,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/language-modeling"),s(A,"rel","nofollow"),s(L,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/question-answering"),s(L,"rel","nofollow"),s(I,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/summarization"),s(I,"rel","nofollow"),s(P,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/text-classification"),s(P,"rel","nofollow"),s(S,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/translation"),s(S,"rel","nofollow"),s($,"href","https://github.com/huggingface/optimum-habana/tree/main/examples/image-classification"),s($,"rel","nofollow")},m(t,u){e(document.head,p),g(t,ee,u),g(t,_,u),e(_,w),e(w,j),$a(y,j,null),e(_,se),e(_,F),e(F,ce),g(t,ae,u),g(t,C,u),e(C,fe),g(t,te,u),g(t,b,u),e(b,v),e(v,he),e(v,T),e(T,K),e(K,ue),e(v,me),e(v,G),e(G,de),e(v,ge),e(b,pe),e(b,d),e(d,_e),e(d,x),e(x,Q),e(Q,ve),e(d,Ee),e(d,V),e(V,we),e(d,be),e(d,E),e(E,H),e(H,W),e(W,ye),e(H,Te),e(E,xe),e(E,k),e(k,X),e(X,Ae),e(k,Le),e(E,Ie),e(E,z),e(z,Z),e(Z,Pe),e(z,Se),g(t,re,u),g(t,O,u),e(O,$e),g(t,oe,u),g(t,c,u),e(c,q),e(q,A),e(A,Ue),e(q,Ce),e(c,Ge),e(c,D),e(D,L),e(L,He),e(D,ke),e(c,ze),e(c,Y),e(Y,I),e(I,Oe),e(Y,qe),e(c,De),e(c,M),e(M,P),e(P,Ye),e(M,Me),e(c,Ne),e(c,N),e(N,S),e(S,Be),e(N,Je),e(c,Re),e(c,B),e(B,$),e($,je),e(B,Fe),le=!0},p:Ua,i(t){le||(Ca(y.$$.fragment,t),le=!0)},o(t){Ga(y.$$.fragment,t),le=!1},d(t){a(p),t&&a(ee),t&&a(_),Ha(y),t&&a(ae),t&&a(C),t&&a(te),t&&a(b),t&&a(re),t&&a(O),t&&a(oe),t&&a(c)}}}const qa={local:"singlehpu-training",title:"Single-HPU Training"};function Da(ra){return ka(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Na extends xa{constructor(p){super();Aa(this,p,Da,Oa,La,{})}}export{Na as default,qa as metadata};
