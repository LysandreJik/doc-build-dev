import{S as co,i as po,s as fo,e as r,k as c,w as h,t as b,M as mo,c as a,d as t,m as p,x as $,a as l,h as w,b as n,G as o,g as u,y as v,o as f,p as ho,q as m,B as g,v as $o,n as vo}from"../../chunks/vendor-hf-doc-builder.js";import{I as Q}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as go}from"../../chunks/CourseFloatingBanner-hf-doc-builder.js";import{Q as T}from"../../chunks/Question-hf-doc-builder.js";import{F as _o}from"../../chunks/FrameworkSwitchCourse-hf-doc-builder.js";function bo(V){let d,_;return d=new T({props:{choices:[{text:"Un tokenizer",explain:"Corretto! Tutti i tokenizers hanno il metodo <code>push_to_hub</code>, che carica tutti i file del tokenizer (vocabolario, architettura del tokenizer, ecc.) su un repository specificatoo. Questa non \xE8 l'unica risposta giusta per\xF2!",correct:!0},{text:"La configurazione di un modello",explain:"Vero! Gli oggetti di contennti la configurazione di tutti i modelli hanno il metodo <code>push_to_hub</code>, che li carica su un repository specificato. Cosa altro si pu\xF2 condividere?",correct:!0},{text:"Un modello",explain:"Corretto! Tutti i modelli hanno il metodo <code>push_to_hub</code>, e utilizzandolo si possono caricare, insieme ai loro file di configurazione, su un repository specificato. Si possono condividere anche altre cose.",correct:!0},{text:"Tutti i precedenti, usando una callback dedicata",explain:"Giusto \u2014 la callback <code>PushToHubCallback</code> caricher\xE0 tutti questi oggetti su un repository regolarmente durante l'addestramento.",correct:!0}]}}),{c(){h(d.$$.fragment)},l(s){$(d.$$.fragment,s)},m(s,z){v(d,s,z),_=!0},i(s){_||(m(d.$$.fragment,s),_=!0)},o(s){f(d.$$.fragment,s),_=!1},d(s){g(d,s)}}}function wo(V){let d,_;return d=new T({props:{choices:[{text:"Un tokenizer",explain:"Corretto! Tutti i tokenizers hanno il metodo <code>push_to_hub</code>, che carica tutti i file del tokenizer (vocabolario, architettura del tokenizer, ecc.) su un repository specificatoo. Questa non \xE8 l'unica risposta giusta per\xF2!",correct:!0},{text:"La configurazione di un modello",explain:"Vero! Gli oggetti di contennti la configurazione di tutti i modelli hanno il metodo <code>push_to_hub</code>, che li carica su un repository specificato. Cosa altro si pu\xF2 condividere?",correct:!0},{text:"Un modello",explain:"Corretto! Tutti i modelli hanno il metodo <code>push_to_hub</code>, e utilizzandolo si possono caricare, insieme ai loro file di configurazione, su un repository specificato. Si possono condividere anche altre cose.",correct:!0},{text:"Un Trainer",explain:"Giusto \u2014 l'oggetto <code>Trainer</code> implementa il metodo <code>push_to_hub</code>, e utilizzandolo, si possono caricare modello, configurazione, tokenizer, e cartellino su un repository specificato. Prova un'altra risposta!",correct:!0}]}}),{c(){h(d.$$.fragment)},l(s){$(d.$$.fragment,s)},m(s,z){v(d,s,z),_=!0},i(s){_||(m(d.$$.fragment,s),_=!0)},o(s){f(d.$$.fragment,s),_=!1},d(s){g(d,s)}}}function xo(V){let d,_,s,z,y,U,ve,B,ct,ge,pt,Te,J,Ue,me,dt,Me,E,M,_e,j,ft,be,mt,Ie,K,Ge,q,I,we,W,ht,xe,$t,Fe,X,Le,C,G,ke,Y,vt,ze,gt,Oe,Z,De,A,F,ye,ee,_t,Ee,bt,Re,te,Ve,H,L,qe,oe,wt,ie,xt,Ce,kt,zt,Be,x,k,he,P,O,Ae,re,yt,ae,Et,He,qt,Ct,Je,le,je,S,D,Pe,ne,At,Se,Ht,Ke,se,We,N,R,Ne,ue,Pt,ce,St,Qe,Nt,Qt,Xe,pe,Ye;s=new _o({props:{fw:V[0]}}),B=new Q({}),J=new go({props:{chapter:4,classNames:"absolute z-10 right-0 top-0"}}),j=new Q({}),K=new T({props:{choices:[{text:"Modelli dalla libreria \u{1F917} Transformers.",explain:"I modelli della libreria \u{1F917} Transformers sono supportati dall'Hub di Hugging Face, ma non sono gli unici!"},{text:"Tutti i modelli con una interfaccia simile ai \u{1F917} Transformers.",explain:"Non ci sono requisiti relativi all'interfaccia quando si carica un modello sull'Hub di Hugging Face. "},{text:"Non ci sono limiti.",explain:"Esatto! Non ci sono limiti quando si carica un modello sull'Hub.",correct:!0},{text:"Modelli che sono in qualche modo relativi all'NLP.",explain:"Non ci sono requisiti relativi al campo di applicazione!"}]}}),W=new Q({}),X=new T({props:{choices:[{text:"Attraverso un account GCP.",explain:"Sbagliato!"},{text:"Attraverso un sistema di distribuzione peer-to-peer.",explain:"Sbagliato!"},{text:"Attraverso git e git-lfs.",explain:"Corretto! I modelli sull'Hub sono semplici repository Git, che usano <code>git-lfs</code> per i file di grandi dimensioni.",correct:!0}]}}),Y=new Q({}),Z=new T({props:{choices:[{text:"Effettuare un fork di un repository esistente.",explain:"Non \xE8 possibile effettuare fork di repository sull'Hugging Face Hub."},{text:"Creare un nuvo repository di un modello.",explain:"Corretto! Per\xF2 si pu\xF2 fare anche altro.",correct:!0},{text:"Gestire ed editare file.",explain:"Corretto! Ma non \xE8 l'unica risposta giusta.",correct:!0},{text:"Caricare file.",explain:"Giusto! Ma non \xE8 tutto.",correct:!0},{text:"Visualizzare le differenze tra le versioni.",explain:"Corretto! Per\xF2 si pu\xF2 fare anche altro.",correct:!0}]}}),ee=new Q({}),te=new T({props:{choices:[{text:"Una descrizione approssimativa del modello, e pertanto meno importante dei file del modello e del tokenizer.",explain:"\xC8 effettivamente una descrizione del modello, ma \xE8 molto importante: se incompleto o mancante, l'utilit\xE0 del modello \xE8 ridotta drasticamente."},{text:"Un modo per assicurare riproducibilit\xE0, riutilizzo, e correttezza.",explain:"Corretto! Condividere le informazioni giuste sul cartellino aiuter\xE0 gli utenti a utilizzare il vostro modello ed essere a conoscenza dei suoi limiti e bias.",correct:!0},{text:"Un file Python che pu\xF2 essere eseguito per ottenere informazioni sul modello.",explain:"I cartellini sono semplici file Markdown."}]}}),oe=new Q({});const Tt=[wo,bo],de=[];function Ut(e,i){return e[0]==="pt"?0:1}return x=Ut(V),k=de[x]=Tt[x](V),re=new Q({}),le=new T({props:{choices:[{text:"Log in sul sito web.",explain:"Questo non vi sar\xE0 utile mentre lavorate sulla vostra macchina locale."},{text:"Eseguire 'huggingface-cli login' in un terminale.",explain:"Corretto \u2014 questo scaricher\xE0 e salver\xE0 in una cartella di cache il vostro token di autenticazione personale.",correct:!0},{text:"Eseguire 'notebook_login()' in un notebook.",explain:"Corretto \u2014 questo mostrer\xE0 un widget che permette di autenticarsi.",correct:!0}]}}),ne=new Q({}),se=new T({props:{choices:[{text:"Usando direttamente il metodo push_to_hub su modello e tokenizer.",explain:"Corretto!",correct:!0},{text:"All'interno di un runtime di Python, facendo wrapping di entrambi con l'utility <code>huggingface_hub</code>.",explain:"Modelli e tokenizer beneficiano gi\xE0 delle utilities di <code>huggingface_hub</code>: non c'\xE8 bisogno di wrapping addizionale!"},{text:"Salvandoli su disco e invocando il comando <code>transformers-cli upload-model</code>",explain:"Il commando <code>upload-model</code> non esiste."}]}}),ue=new Q({}),pe=new T({props:{choices:[{text:"git commit.",explain:"Corretto, il metodo <code>git_commit()</code> \xE8 li per questo.",correct:!0},{text:"git pull",explain:"Questa \xE8 la funzione del metodo <code>git_pull()</code>.",correct:!0},{text:"git push",explain:"Il metodo <code>git_push()</code> fa esattamente questo.",correct:!0},{text:"git merge",explain:"No, questa operazione non \xE8 possibile con questa API."}]}}),{c(){d=r("meta"),_=c(),h(s.$$.fragment),z=c(),y=r("h1"),U=r("a"),ve=r("span"),h(B.$$.fragment),ct=c(),ge=r("span"),pt=b("Quiz di fine capitolo"),Te=c(),h(J.$$.fragment),Ue=c(),me=r("p"),dt=b("Mettiamo alla prova quello che avete imparato in questo capitolo!"),Me=c(),E=r("h3"),M=r("a"),_e=r("span"),h(j.$$.fragment),ft=c(),be=r("span"),mt=b("1. Quali modelli si possono caricare sull\u2019Hub?"),Ie=c(),h(K.$$.fragment),Ge=c(),q=r("h3"),I=r("a"),we=r("span"),h(W.$$.fragment),ht=c(),xe=r("span"),$t=b("2. Come si gestisce un modello sull\u2019Hub?"),Fe=c(),h(X.$$.fragment),Le=c(),C=r("h3"),G=r("a"),ke=r("span"),h(Y.$$.fragment),vt=c(),ze=r("span"),gt=b("3. Cosa si pu\xF2 fare attraverso l\u2019interfacca web di Hugging Face Hub?"),Oe=c(),h(Z.$$.fragment),De=c(),A=r("h3"),F=r("a"),ye=r("span"),h(ee.$$.fragment),_t=c(),Ee=r("span"),bt=b("4. Cos\u2019\xE8 il cartellino del modello?"),Re=c(),h(te.$$.fragment),Ve=c(),H=r("h3"),L=r("a"),qe=r("span"),h(oe.$$.fragment),wt=c(),ie=r("span"),xt=b("5. QUali di questi oggetti della libreria \u{1F917} Transformers pu\xF2 essere direttamente condiviso sull\u2019Hub con "),Ce=r("code"),kt=b("push_to_hub()"),zt=b("?"),Be=c(),k.c(),he=c(),P=r("h3"),O=r("a"),Ae=r("span"),h(re.$$.fragment),yt=c(),ae=r("span"),Et=b("6. Qual \xE8 il primo passo da fare quando si usano il metodo "),He=r("code"),qt=b("push_to_hub()"),Ct=b(" o gli strumenti da riga di comando (CLI)?"),Je=c(),h(le.$$.fragment),je=c(),S=r("h3"),D=r("a"),Pe=r("span"),h(ne.$$.fragment),At=c(),Se=r("span"),Ht=b("7. Se state usando un modello e un tokenizer \u2014 come li caricate sull\u2019Hub?"),Ke=c(),h(se.$$.fragment),We=c(),N=r("h3"),R=r("a"),Ne=r("span"),h(ue.$$.fragment),Pt=c(),ce=r("span"),St=b("8. Quali operazioni di git si possono fare con la classe "),Qe=r("code"),Nt=b("Repository"),Qt=b("?"),Xe=c(),h(pe.$$.fragment),this.h()},l(e){const i=mo('[data-svelte="svelte-1phssyn"]',document.head);d=a(i,"META",{name:!0,content:!0}),i.forEach(t),_=p(e),$(s.$$.fragment,e),z=p(e),y=a(e,"H1",{class:!0});var fe=l(y);U=a(fe,"A",{id:!0,class:!0,href:!0});var $e=l(U);ve=a($e,"SPAN",{});var Mt=l(ve);$(B.$$.fragment,Mt),Mt.forEach(t),$e.forEach(t),ct=p(fe),ge=a(fe,"SPAN",{});var It=l(ge);pt=w(It,"Quiz di fine capitolo"),It.forEach(t),fe.forEach(t),Te=p(e),$(J.$$.fragment,e),Ue=p(e),me=a(e,"P",{});var Gt=l(me);dt=w(Gt,"Mettiamo alla prova quello che avete imparato in questo capitolo!"),Gt.forEach(t),Me=p(e),E=a(e,"H3",{class:!0});var Ze=l(E);M=a(Ze,"A",{id:!0,class:!0,href:!0});var Ft=l(M);_e=a(Ft,"SPAN",{});var Lt=l(_e);$(j.$$.fragment,Lt),Lt.forEach(t),Ft.forEach(t),ft=p(Ze),be=a(Ze,"SPAN",{});var Ot=l(be);mt=w(Ot,"1. Quali modelli si possono caricare sull\u2019Hub?"),Ot.forEach(t),Ze.forEach(t),Ie=p(e),$(K.$$.fragment,e),Ge=p(e),q=a(e,"H3",{class:!0});var et=l(q);I=a(et,"A",{id:!0,class:!0,href:!0});var Dt=l(I);we=a(Dt,"SPAN",{});var Rt=l(we);$(W.$$.fragment,Rt),Rt.forEach(t),Dt.forEach(t),ht=p(et),xe=a(et,"SPAN",{});var Vt=l(xe);$t=w(Vt,"2. Come si gestisce un modello sull\u2019Hub?"),Vt.forEach(t),et.forEach(t),Fe=p(e),$(X.$$.fragment,e),Le=p(e),C=a(e,"H3",{class:!0});var tt=l(C);G=a(tt,"A",{id:!0,class:!0,href:!0});var Bt=l(G);ke=a(Bt,"SPAN",{});var Jt=l(ke);$(Y.$$.fragment,Jt),Jt.forEach(t),Bt.forEach(t),vt=p(tt),ze=a(tt,"SPAN",{});var jt=l(ze);gt=w(jt,"3. Cosa si pu\xF2 fare attraverso l\u2019interfacca web di Hugging Face Hub?"),jt.forEach(t),tt.forEach(t),Oe=p(e),$(Z.$$.fragment,e),De=p(e),A=a(e,"H3",{class:!0});var ot=l(A);F=a(ot,"A",{id:!0,class:!0,href:!0});var Kt=l(F);ye=a(Kt,"SPAN",{});var Wt=l(ye);$(ee.$$.fragment,Wt),Wt.forEach(t),Kt.forEach(t),_t=p(ot),Ee=a(ot,"SPAN",{});var Xt=l(Ee);bt=w(Xt,"4. Cos\u2019\xE8 il cartellino del modello?"),Xt.forEach(t),ot.forEach(t),Re=p(e),$(te.$$.fragment,e),Ve=p(e),H=a(e,"H3",{class:!0});var it=l(H);L=a(it,"A",{id:!0,class:!0,href:!0});var Yt=l(L);qe=a(Yt,"SPAN",{});var Zt=l(qe);$(oe.$$.fragment,Zt),Zt.forEach(t),Yt.forEach(t),wt=p(it),ie=a(it,"SPAN",{});var rt=l(ie);xt=w(rt,"5. QUali di questi oggetti della libreria \u{1F917} Transformers pu\xF2 essere direttamente condiviso sull\u2019Hub con "),Ce=a(rt,"CODE",{});var eo=l(Ce);kt=w(eo,"push_to_hub()"),eo.forEach(t),zt=w(rt,"?"),rt.forEach(t),it.forEach(t),Be=p(e),k.l(e),he=p(e),P=a(e,"H3",{class:!0});var at=l(P);O=a(at,"A",{id:!0,class:!0,href:!0});var to=l(O);Ae=a(to,"SPAN",{});var oo=l(Ae);$(re.$$.fragment,oo),oo.forEach(t),to.forEach(t),yt=p(at),ae=a(at,"SPAN",{});var lt=l(ae);Et=w(lt,"6. Qual \xE8 il primo passo da fare quando si usano il metodo "),He=a(lt,"CODE",{});var io=l(He);qt=w(io,"push_to_hub()"),io.forEach(t),Ct=w(lt," o gli strumenti da riga di comando (CLI)?"),lt.forEach(t),at.forEach(t),Je=p(e),$(le.$$.fragment,e),je=p(e),S=a(e,"H3",{class:!0});var nt=l(S);D=a(nt,"A",{id:!0,class:!0,href:!0});var ro=l(D);Pe=a(ro,"SPAN",{});var ao=l(Pe);$(ne.$$.fragment,ao),ao.forEach(t),ro.forEach(t),At=p(nt),Se=a(nt,"SPAN",{});var lo=l(Se);Ht=w(lo,"7. Se state usando un modello e un tokenizer \u2014 come li caricate sull\u2019Hub?"),lo.forEach(t),nt.forEach(t),Ke=p(e),$(se.$$.fragment,e),We=p(e),N=a(e,"H3",{class:!0});var st=l(N);R=a(st,"A",{id:!0,class:!0,href:!0});var no=l(R);Ne=a(no,"SPAN",{});var so=l(Ne);$(ue.$$.fragment,so),so.forEach(t),no.forEach(t),Pt=p(st),ce=a(st,"SPAN",{});var ut=l(ce);St=w(ut,"8. Quali operazioni di git si possono fare con la classe "),Qe=a(ut,"CODE",{});var uo=l(Qe);Nt=w(uo,"Repository"),uo.forEach(t),Qt=w(ut,"?"),ut.forEach(t),st.forEach(t),Xe=p(e),$(pe.$$.fragment,e),this.h()},h(){n(d,"name","hf:doc:metadata"),n(d,"content",JSON.stringify(ko)),n(U,"id","quiz-di-fine-capitolo"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#quiz-di-fine-capitolo"),n(y,"class","relative group"),n(M,"id","1.-quali-modelli-si-possono-caricare-sull\u2019hub?"),n(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(M,"href","#1.-quali-modelli-si-possono-caricare-sull\u2019hub?"),n(E,"class","relative group"),n(I,"id","2.-come-si-gestisce-un-modello-sull\u2019hub?"),n(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(I,"href","#2.-come-si-gestisce-un-modello-sull\u2019hub?"),n(q,"class","relative group"),n(G,"id","3.-cosa-si-pu\xF2-fare-attraverso-l\u2019interfacca-web-di-hugging-face-hub?"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#3.-cosa-si-pu\xF2-fare-attraverso-l\u2019interfacca-web-di-hugging-face-hub?"),n(C,"class","relative group"),n(F,"id","4.-cos\u2019\xE8-il-cartellino-del-modello?"),n(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(F,"href","#4.-cos\u2019\xE8-il-cartellino-del-modello?"),n(A,"class","relative group"),n(L,"id","5.-quali-di-questi-oggetti-della-libreria-\u{1F917}-transformers-pu\xF2-essere-direttamente-condiviso-sull\u2019hub-con-<code>push_to_hub()</code>?"),n(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(L,"href","#5.-quali-di-questi-oggetti-della-libreria-\u{1F917}-transformers-pu\xF2-essere-direttamente-condiviso-sull\u2019hub-con-<code>push_to_hub()</code>?"),n(H,"class","relative group"),n(O,"id","6.-qual-\xE8-il-primo-passo-da-fare-quando-si-usano-il-metodo-<code>push_to_hub()</code>-o-gli-strumenti-da-riga-di-comando-(cli)?"),n(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(O,"href","#6.-qual-\xE8-il-primo-passo-da-fare-quando-si-usano-il-metodo-<code>push_to_hub()</code>-o-gli-strumenti-da-riga-di-comando-(cli)?"),n(P,"class","relative group"),n(D,"id","7.-se-state-usando-un-modello-e-un-tokenizer-\u2014-come-li-caricate-sull\u2019hub?"),n(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(D,"href","#7.-se-state-usando-un-modello-e-un-tokenizer-\u2014-come-li-caricate-sull\u2019hub?"),n(S,"class","relative group"),n(R,"id","8.-quali-operazioni-di-git-si-possono-fare-con-la-classe-<code>repository</code>?"),n(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(R,"href","#8.-quali-operazioni-di-git-si-possono-fare-con-la-classe-<code>repository</code>?"),n(N,"class","relative group")},m(e,i){o(document.head,d),u(e,_,i),v(s,e,i),u(e,z,i),u(e,y,i),o(y,U),o(U,ve),v(B,ve,null),o(y,ct),o(y,ge),o(ge,pt),u(e,Te,i),v(J,e,i),u(e,Ue,i),u(e,me,i),o(me,dt),u(e,Me,i),u(e,E,i),o(E,M),o(M,_e),v(j,_e,null),o(E,ft),o(E,be),o(be,mt),u(e,Ie,i),v(K,e,i),u(e,Ge,i),u(e,q,i),o(q,I),o(I,we),v(W,we,null),o(q,ht),o(q,xe),o(xe,$t),u(e,Fe,i),v(X,e,i),u(e,Le,i),u(e,C,i),o(C,G),o(G,ke),v(Y,ke,null),o(C,vt),o(C,ze),o(ze,gt),u(e,Oe,i),v(Z,e,i),u(e,De,i),u(e,A,i),o(A,F),o(F,ye),v(ee,ye,null),o(A,_t),o(A,Ee),o(Ee,bt),u(e,Re,i),v(te,e,i),u(e,Ve,i),u(e,H,i),o(H,L),o(L,qe),v(oe,qe,null),o(H,wt),o(H,ie),o(ie,xt),o(ie,Ce),o(Ce,kt),o(ie,zt),u(e,Be,i),de[x].m(e,i),u(e,he,i),u(e,P,i),o(P,O),o(O,Ae),v(re,Ae,null),o(P,yt),o(P,ae),o(ae,Et),o(ae,He),o(He,qt),o(ae,Ct),u(e,Je,i),v(le,e,i),u(e,je,i),u(e,S,i),o(S,D),o(D,Pe),v(ne,Pe,null),o(S,At),o(S,Se),o(Se,Ht),u(e,Ke,i),v(se,e,i),u(e,We,i),u(e,N,i),o(N,R),o(R,Ne),v(ue,Ne,null),o(N,Pt),o(N,ce),o(ce,St),o(ce,Qe),o(Qe,Nt),o(ce,Qt),u(e,Xe,i),v(pe,e,i),Ye=!0},p(e,[i]){const fe={};i&1&&(fe.fw=e[0]),s.$set(fe);let $e=x;x=Ut(e),x!==$e&&(vo(),f(de[$e],1,1,()=>{de[$e]=null}),ho(),k=de[x],k||(k=de[x]=Tt[x](e),k.c()),m(k,1),k.m(he.parentNode,he))},i(e){Ye||(m(s.$$.fragment,e),m(B.$$.fragment,e),m(J.$$.fragment,e),m(j.$$.fragment,e),m(K.$$.fragment,e),m(W.$$.fragment,e),m(X.$$.fragment,e),m(Y.$$.fragment,e),m(Z.$$.fragment,e),m(ee.$$.fragment,e),m(te.$$.fragment,e),m(oe.$$.fragment,e),m(k),m(re.$$.fragment,e),m(le.$$.fragment,e),m(ne.$$.fragment,e),m(se.$$.fragment,e),m(ue.$$.fragment,e),m(pe.$$.fragment,e),Ye=!0)},o(e){f(s.$$.fragment,e),f(B.$$.fragment,e),f(J.$$.fragment,e),f(j.$$.fragment,e),f(K.$$.fragment,e),f(W.$$.fragment,e),f(X.$$.fragment,e),f(Y.$$.fragment,e),f(Z.$$.fragment,e),f(ee.$$.fragment,e),f(te.$$.fragment,e),f(oe.$$.fragment,e),f(k),f(re.$$.fragment,e),f(le.$$.fragment,e),f(ne.$$.fragment,e),f(se.$$.fragment,e),f(ue.$$.fragment,e),f(pe.$$.fragment,e),Ye=!1},d(e){t(d),e&&t(_),g(s,e),e&&t(z),e&&t(y),g(B),e&&t(Te),g(J,e),e&&t(Ue),e&&t(me),e&&t(Me),e&&t(E),g(j),e&&t(Ie),g(K,e),e&&t(Ge),e&&t(q),g(W),e&&t(Fe),g(X,e),e&&t(Le),e&&t(C),g(Y),e&&t(Oe),g(Z,e),e&&t(De),e&&t(A),g(ee),e&&t(Re),g(te,e),e&&t(Ve),e&&t(H),g(oe),e&&t(Be),de[x].d(e),e&&t(he),e&&t(P),g(re),e&&t(Je),g(le,e),e&&t(je),e&&t(S),g(ne),e&&t(Ke),g(se,e),e&&t(We),e&&t(N),g(ue),e&&t(Xe),g(pe,e)}}}const ko={local:"quiz-di-fine-capitolo",title:"Quiz di fine capitolo"};function zo(V,d,_){let s="pt";return $o(()=>{const z=new URLSearchParams(window.location.search);_(0,s=z.get("fw")||"pt")}),[s]}class Ho extends co{constructor(d){super();po(this,d,zo,xo,fo,{})}}export{Ho as default,ko as metadata};
