import{S as wo,i as vo,s as yo,e as a,k as u,w as Ee,t as n,M as bo,c as o,d as r,m as f,a as i,x as ke,h as s,b as l,N as mo,G as t,g as c,y as Pe,L as _o,q as Le,o as Ae,B as He,v as Eo}from"../../chunks/vendor-hf-doc-builder.js";import{Y as ko}from"../../chunks/Youtube-hf-doc-builder.js";import{I as Ct}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Po}from"../../chunks/CourseFloatingBanner-hf-doc-builder.js";function Lo(wa){let y,rt,b,$,Te,x,Gt,Ne,Mt,at,C,ot,_,S,$e,G,Rt,Se,Ot,it,M,nt,g,qt,R,zt,Bt,O,Wt,Ut,q,Yt,jt,z,Jt,Kt,B,Vt,Qt,W,Xt,Zt,st,E,I,Ie,U,er,De,tr,lt,pe,rr,ht,k,Y,va,ar,j,ya,ct,d,J,or,K,ir,nr,sr,Fe,lr,hr,xe,cr,ut,de,ur,ft,m,Ce,fr,gr,w,pr,V,dr,mr,Q,wr,vr,X,yr,br,P,_r,Z,Er,kr,ee,Pr,Lr,gt,D,Ar,te,Hr,Tr,pt,L,F,Ge,re,Nr,Me,$r,dt,me,Sr,mt,A,Re,Ir,Dr,ae,Fr,xr,wt,oe,Oe,Cr,Gr,vt,ie,qe,Mr,Rr,yt,H,ze,Or,qr,Be,ne,zr,Br,bt,se,We,Wr,Ur,_t,le,Ue,Yr,jr,Et,he,Ye,Jr,Kr,kt,T,je,Vr,Qr,ce,Xr,Zr,Pt,N,Je,ea,ta,ue,ra,aa,Lt,we,oa,At,v,fe,ia,Ke,na,sa,la,Ve,ha,ca,Qe,ua,Ht;return x=new Ct({}),C=new Po({props:{chapter:1,classNames:"absolute z-10 right-0 top-0"}}),G=new Ct({}),M=new ko({props:{id:"00GKzGyWFEs"}}),U=new Ct({}),re=new Ct({}),{c(){y=a("meta"),rt=u(),b=a("h1"),$=a("a"),Te=a("span"),Ee(x.$$.fragment),Gt=u(),Ne=a("span"),Mt=n("Introduction"),at=u(),Ee(C.$$.fragment),ot=u(),_=a("h2"),S=a("a"),$e=a("span"),Ee(G.$$.fragment),Rt=u(),Se=a("span"),Ot=n("Welcome to the \u{1F917} Course!"),it=u(),Ee(M.$$.fragment),nt=u(),g=a("p"),qt=n("This course will teach you about natural language processing (NLP) using libraries from the "),R=a("a"),zt=n("Hugging Face"),Bt=n(" ecosystem \u2014 "),O=a("a"),Wt=n("\u{1F917} Transformers"),Ut=n(", "),q=a("a"),Yt=n("\u{1F917} Datasets"),jt=n(", "),z=a("a"),Jt=n("\u{1F917} Tokenizers"),Kt=n(", and "),B=a("a"),Vt=n("\u{1F917} Accelerate"),Qt=n(" \u2014 as well as the "),W=a("a"),Xt=n("Hugging Face Hub"),Zt=n(". It\u2019s completely free and without ads."),st=u(),E=a("h2"),I=a("a"),Ie=a("span"),Ee(U.$$.fragment),er=u(),De=a("span"),tr=n("What to expect?"),lt=u(),pe=a("p"),rr=n("Here is a brief overview of the course:"),ht=u(),k=a("div"),Y=a("img"),ar=u(),j=a("img"),ct=u(),d=a("ul"),J=a("li"),or=n("Chapters 1 to 4 provide an introduction to the main concepts of the \u{1F917} Transformers library. By the end of this part of the course, you will be familiar with how Transformer models work and will know how to use a model from the "),K=a("a"),ir=n("Hugging Face Hub"),nr=n(", fine-tune it on a dataset, and share your results on the Hub!"),sr=u(),Fe=a("li"),lr=n("Chapters 5 to 8 teach the basics of \u{1F917} Datasets and \u{1F917} Tokenizers before diving into classic NLP tasks. By the end of this part, you will be able to tackle the most common NLP problems by yourself."),hr=u(),xe=a("li"),cr=n("Chapters 9 to 12 go beyond NLP, and explore how Transformer models can be used tackle tasks in speech processing and computer vision. Along the way, you\u2019ll learn how to build and share demos of your models, and optimize them for production environments. By the end of this part, you will be ready to apply \u{1F917} Transformers to (almost) any machine learning problem!"),ut=u(),de=a("p"),ur=n("This course:"),ft=u(),m=a("ul"),Ce=a("li"),fr=n("Requires a good knowledge of Python"),gr=u(),w=a("li"),pr=n("Is better taken after an introductory deep learning course, such as "),V=a("a"),dr=n("fast.ai\u2019s"),mr=u(),Q=a("a"),wr=n("Practical Deep Learning for Coders"),vr=n(" or one of the programs developed by "),X=a("a"),yr=n("DeepLearning.AI"),br=u(),P=a("li"),_r=n("Does not expect prior "),Z=a("a"),Er=n("PyTorch"),kr=n(" or "),ee=a("a"),Pr=n("TensorFlow"),Lr=n(" knowledge, though some familiarity with either of those will help"),gt=u(),D=a("p"),Ar=n("After you\u2019ve completed this course, we recommend checking out DeepLearning.AI\u2019s "),te=a("a"),Hr=n("Natural Language Processing Specialization"),Tr=n(", which covers a wide range of traditional NLP models like naive Bayes and LSTMs that are well worth knowing about!"),pt=u(),L=a("h2"),F=a("a"),Ge=a("span"),Ee(re.$$.fragment),Nr=u(),Me=a("span"),$r=n("Who are we?"),dt=u(),me=a("p"),Sr=n("About the authors:"),mt=u(),A=a("p"),Re=a("strong"),Ir=n("Abubakar Abid"),Dr=n(" completed his PhD at Stanford in applied machine learning. During his PhD, he founded "),ae=a("a"),Fr=n("Gradio"),xr=n(", an open-source Python library that has been used to build over 600,000 machine learning demos. Gradio was acquired by Hugging Face, which is where Abubakar now serves as a machine learning team lead."),wt=u(),oe=a("p"),Oe=a("strong"),Cr=n("Matthew Carrigan"),Gr=n(" is a Machine Learning Engineer at Hugging Face. He lives in Dublin, Ireland and previously worked as an ML engineer at Parse.ly and before that as a post-doctoral researcher at Trinity College Dublin. He does not believe we\u2019re going to get to AGI by scaling existing architectures, but has high hopes for robot immortality regardless."),vt=u(),ie=a("p"),qe=a("strong"),Mr=n("Lysandre Debut"),Rr=n(" is a Machine Learning Engineer at Hugging Face and has been working on the \u{1F917} Transformers library since the very early development stages. His aim is to make NLP accessible for everyone by developing tools with a very simple API."),yt=u(),H=a("p"),ze=a("strong"),Or=n("Sylvain Gugger"),qr=n(" is a Research Engineer at Hugging Face and one of the core maintainers of the \u{1F917} Transformers library. Previously he was a Research Scientist at fast.ai, and he co-wrote "),Be=a("em"),ne=a("a"),zr=n("Deep Learning for Coders with fastai and PyTorch"),Br=n(" with Jeremy Howard. The main focus of his research is on making deep learning more accessible, by designing and improving techniques that allow models to train fast on limited resources."),bt=u(),se=a("p"),We=a("strong"),Wr=n("Dawood Khan"),Ur=n(" is a Machine Learning Engineer at Hugging Face. He\u2019s from NYC and graduated from New York University studying Computer Science. After working as an iOS Engineer for a few years, Dawood quit to start Gradio with his fellow co-founders. Gradio was eventually acquired by Hugging Face."),_t=u(),le=a("p"),Ue=a("strong"),Yr=n("Merve Noyan"),jr=n(" is a developer advocate at Hugging Face, working on developing tools and building content around them to democratize machine learning for everyone."),Et=u(),he=a("p"),Ye=a("strong"),Jr=n("Lucile Saulnier"),Kr=n(" is a machine learning engineer at Hugging Face, developing and supporting the use of open source tools. She is also actively involved in many research projects in the field of Natural Language Processing such as collaborative training and BigScience."),kt=u(),T=a("p"),je=a("strong"),Vr=n("Lewis Tunstall"),Qr=n("  is a machine learning engineer at Hugging Face, focused on developing open-source tools and making them accessible to the wider community. He is also a co-author of the O\u2019Reilly book "),ce=a("a"),Xr=n("Natural Language Processing with Transformers"),Zr=n("."),Pt=u(),N=a("p"),Je=a("strong"),ea=n("Leandro von Werra"),ta=n("  is a machine learning engineer in the open-source team at Hugging Face and also a co-author of the O\u2019Reilly book "),ue=a("a"),ra=n("Natural Language Processing with Transformers"),aa=n(". He has several years of industry experience bringing NLP projects to production by working across the whole machine learning stack.."),Lt=u(),we=a("p"),oa=n("Are you ready to roll? In this chapter, you will learn:"),At=u(),v=a("ul"),fe=a("li"),ia=n("How to use the "),Ke=a("code"),na=n("pipeline()"),sa=n(" function to solve NLP tasks such as text generation and classification"),la=u(),Ve=a("li"),ha=n("About the Transformer architecture"),ca=u(),Qe=a("li"),ua=n("How to distinguish between encoder, decoder, and encoder-decoder architectures and use cases"),this.h()},l(e){const h=bo('[data-svelte="svelte-1phssyn"]',document.head);y=o(h,"META",{name:!0,content:!0}),h.forEach(r),rt=f(e),b=o(e,"H1",{class:!0});var Tt=i(b);$=o(Tt,"A",{id:!0,class:!0,href:!0});var ba=i($);Te=o(ba,"SPAN",{});var _a=i(Te);ke(x.$$.fragment,_a),_a.forEach(r),ba.forEach(r),Gt=f(Tt),Ne=o(Tt,"SPAN",{});var Ea=i(Ne);Mt=s(Ea,"Introduction"),Ea.forEach(r),Tt.forEach(r),at=f(e),ke(C.$$.fragment,e),ot=f(e),_=o(e,"H2",{class:!0});var Nt=i(_);S=o(Nt,"A",{id:!0,class:!0,href:!0});var ka=i(S);$e=o(ka,"SPAN",{});var Pa=i($e);ke(G.$$.fragment,Pa),Pa.forEach(r),ka.forEach(r),Rt=f(Nt),Se=o(Nt,"SPAN",{});var La=i(Se);Ot=s(La,"Welcome to the \u{1F917} Course!"),La.forEach(r),Nt.forEach(r),it=f(e),ke(M.$$.fragment,e),nt=f(e),g=o(e,"P",{});var p=i(g);qt=s(p,"This course will teach you about natural language processing (NLP) using libraries from the "),R=o(p,"A",{href:!0,rel:!0});var Aa=i(R);zt=s(Aa,"Hugging Face"),Aa.forEach(r),Bt=s(p," ecosystem \u2014 "),O=o(p,"A",{href:!0,rel:!0});var Ha=i(O);Wt=s(Ha,"\u{1F917} Transformers"),Ha.forEach(r),Ut=s(p,", "),q=o(p,"A",{href:!0,rel:!0});var Ta=i(q);Yt=s(Ta,"\u{1F917} Datasets"),Ta.forEach(r),jt=s(p,", "),z=o(p,"A",{href:!0,rel:!0});var Na=i(z);Jt=s(Na,"\u{1F917} Tokenizers"),Na.forEach(r),Kt=s(p,", and "),B=o(p,"A",{href:!0,rel:!0});var $a=i(B);Vt=s($a,"\u{1F917} Accelerate"),$a.forEach(r),Qt=s(p," \u2014 as well as the "),W=o(p,"A",{href:!0,rel:!0});var Sa=i(W);Xt=s(Sa,"Hugging Face Hub"),Sa.forEach(r),Zt=s(p,". It\u2019s completely free and without ads."),p.forEach(r),st=f(e),E=o(e,"H2",{class:!0});var $t=i(E);I=o($t,"A",{id:!0,class:!0,href:!0});var Ia=i(I);Ie=o(Ia,"SPAN",{});var Da=i(Ie);ke(U.$$.fragment,Da),Da.forEach(r),Ia.forEach(r),er=f($t),De=o($t,"SPAN",{});var Fa=i(De);tr=s(Fa,"What to expect?"),Fa.forEach(r),$t.forEach(r),lt=f(e),pe=o(e,"P",{});var xa=i(pe);rr=s(xa,"Here is a brief overview of the course:"),xa.forEach(r),ht=f(e),k=o(e,"DIV",{class:!0});var St=i(k);Y=o(St,"IMG",{class:!0,src:!0,alt:!0}),ar=f(St),j=o(St,"IMG",{class:!0,src:!0,alt:!0}),St.forEach(r),ct=f(e),d=o(e,"UL",{});var ve=i(d);J=o(ve,"LI",{});var It=i(J);or=s(It,"Chapters 1 to 4 provide an introduction to the main concepts of the \u{1F917} Transformers library. By the end of this part of the course, you will be familiar with how Transformer models work and will know how to use a model from the "),K=o(It,"A",{href:!0,rel:!0});var Ca=i(K);ir=s(Ca,"Hugging Face Hub"),Ca.forEach(r),nr=s(It,", fine-tune it on a dataset, and share your results on the Hub!"),It.forEach(r),sr=f(ve),Fe=o(ve,"LI",{});var Ga=i(Fe);lr=s(Ga,"Chapters 5 to 8 teach the basics of \u{1F917} Datasets and \u{1F917} Tokenizers before diving into classic NLP tasks. By the end of this part, you will be able to tackle the most common NLP problems by yourself."),Ga.forEach(r),hr=f(ve),xe=o(ve,"LI",{});var Ma=i(xe);cr=s(Ma,"Chapters 9 to 12 go beyond NLP, and explore how Transformer models can be used tackle tasks in speech processing and computer vision. Along the way, you\u2019ll learn how to build and share demos of your models, and optimize them for production environments. By the end of this part, you will be ready to apply \u{1F917} Transformers to (almost) any machine learning problem!"),Ma.forEach(r),ve.forEach(r),ut=f(e),de=o(e,"P",{});var Ra=i(de);ur=s(Ra,"This course:"),Ra.forEach(r),ft=f(e),m=o(e,"UL",{});var ye=i(m);Ce=o(ye,"LI",{});var Oa=i(Ce);fr=s(Oa,"Requires a good knowledge of Python"),Oa.forEach(r),gr=f(ye),w=o(ye,"LI",{});var ge=i(w);pr=s(ge,"Is better taken after an introductory deep learning course, such as "),V=o(ge,"A",{href:!0,rel:!0});var qa=i(V);dr=s(qa,"fast.ai\u2019s"),qa.forEach(r),mr=f(ge),Q=o(ge,"A",{href:!0,rel:!0});var za=i(Q);wr=s(za,"Practical Deep Learning for Coders"),za.forEach(r),vr=s(ge," or one of the programs developed by "),X=o(ge,"A",{href:!0,rel:!0});var Ba=i(X);yr=s(Ba,"DeepLearning.AI"),Ba.forEach(r),ge.forEach(r),br=f(ye),P=o(ye,"LI",{});var be=i(P);_r=s(be,"Does not expect prior "),Z=o(be,"A",{href:!0,rel:!0});var Wa=i(Z);Er=s(Wa,"PyTorch"),Wa.forEach(r),kr=s(be," or "),ee=o(be,"A",{href:!0,rel:!0});var Ua=i(ee);Pr=s(Ua,"TensorFlow"),Ua.forEach(r),Lr=s(be," knowledge, though some familiarity with either of those will help"),be.forEach(r),ye.forEach(r),gt=f(e),D=o(e,"P",{});var Dt=i(D);Ar=s(Dt,"After you\u2019ve completed this course, we recommend checking out DeepLearning.AI\u2019s "),te=o(Dt,"A",{href:!0,rel:!0});var Ya=i(te);Hr=s(Ya,"Natural Language Processing Specialization"),Ya.forEach(r),Tr=s(Dt,", which covers a wide range of traditional NLP models like naive Bayes and LSTMs that are well worth knowing about!"),Dt.forEach(r),pt=f(e),L=o(e,"H2",{class:!0});var Ft=i(L);F=o(Ft,"A",{id:!0,class:!0,href:!0});var ja=i(F);Ge=o(ja,"SPAN",{});var Ja=i(Ge);ke(re.$$.fragment,Ja),Ja.forEach(r),ja.forEach(r),Nr=f(Ft),Me=o(Ft,"SPAN",{});var Ka=i(Me);$r=s(Ka,"Who are we?"),Ka.forEach(r),Ft.forEach(r),dt=f(e),me=o(e,"P",{});var Va=i(me);Sr=s(Va,"About the authors:"),Va.forEach(r),mt=f(e),A=o(e,"P",{});var Xe=i(A);Re=o(Xe,"STRONG",{});var Qa=i(Re);Ir=s(Qa,"Abubakar Abid"),Qa.forEach(r),Dr=s(Xe," completed his PhD at Stanford in applied machine learning. During his PhD, he founded "),ae=o(Xe,"A",{href:!0,rel:!0});var Xa=i(ae);Fr=s(Xa,"Gradio"),Xa.forEach(r),xr=s(Xe,", an open-source Python library that has been used to build over 600,000 machine learning demos. Gradio was acquired by Hugging Face, which is where Abubakar now serves as a machine learning team lead."),Xe.forEach(r),wt=f(e),oe=o(e,"P",{});var fa=i(oe);Oe=o(fa,"STRONG",{});var Za=i(Oe);Cr=s(Za,"Matthew Carrigan"),Za.forEach(r),Gr=s(fa," is a Machine Learning Engineer at Hugging Face. He lives in Dublin, Ireland and previously worked as an ML engineer at Parse.ly and before that as a post-doctoral researcher at Trinity College Dublin. He does not believe we\u2019re going to get to AGI by scaling existing architectures, but has high hopes for robot immortality regardless."),fa.forEach(r),vt=f(e),ie=o(e,"P",{});var ga=i(ie);qe=o(ga,"STRONG",{});var eo=i(qe);Mr=s(eo,"Lysandre Debut"),eo.forEach(r),Rr=s(ga," is a Machine Learning Engineer at Hugging Face and has been working on the \u{1F917} Transformers library since the very early development stages. His aim is to make NLP accessible for everyone by developing tools with a very simple API."),ga.forEach(r),yt=f(e),H=o(e,"P",{});var Ze=i(H);ze=o(Ze,"STRONG",{});var to=i(ze);Or=s(to,"Sylvain Gugger"),to.forEach(r),qr=s(Ze," is a Research Engineer at Hugging Face and one of the core maintainers of the \u{1F917} Transformers library. Previously he was a Research Scientist at fast.ai, and he co-wrote "),Be=o(Ze,"EM",{});var ro=i(Be);ne=o(ro,"A",{href:!0,rel:!0});var ao=i(ne);zr=s(ao,"Deep Learning for Coders with fastai and PyTorch"),ao.forEach(r),ro.forEach(r),Br=s(Ze," with Jeremy Howard. The main focus of his research is on making deep learning more accessible, by designing and improving techniques that allow models to train fast on limited resources."),Ze.forEach(r),bt=f(e),se=o(e,"P",{});var pa=i(se);We=o(pa,"STRONG",{});var oo=i(We);Wr=s(oo,"Dawood Khan"),oo.forEach(r),Ur=s(pa," is a Machine Learning Engineer at Hugging Face. He\u2019s from NYC and graduated from New York University studying Computer Science. After working as an iOS Engineer for a few years, Dawood quit to start Gradio with his fellow co-founders. Gradio was eventually acquired by Hugging Face."),pa.forEach(r),_t=f(e),le=o(e,"P",{});var da=i(le);Ue=o(da,"STRONG",{});var io=i(Ue);Yr=s(io,"Merve Noyan"),io.forEach(r),jr=s(da," is a developer advocate at Hugging Face, working on developing tools and building content around them to democratize machine learning for everyone."),da.forEach(r),Et=f(e),he=o(e,"P",{});var ma=i(he);Ye=o(ma,"STRONG",{});var no=i(Ye);Jr=s(no,"Lucile Saulnier"),no.forEach(r),Kr=s(ma," is a machine learning engineer at Hugging Face, developing and supporting the use of open source tools. She is also actively involved in many research projects in the field of Natural Language Processing such as collaborative training and BigScience."),ma.forEach(r),kt=f(e),T=o(e,"P",{});var et=i(T);je=o(et,"STRONG",{});var so=i(je);Vr=s(so,"Lewis Tunstall"),so.forEach(r),Qr=s(et,"  is a machine learning engineer at Hugging Face, focused on developing open-source tools and making them accessible to the wider community. He is also a co-author of the O\u2019Reilly book "),ce=o(et,"A",{href:!0,rel:!0});var lo=i(ce);Xr=s(lo,"Natural Language Processing with Transformers"),lo.forEach(r),Zr=s(et,"."),et.forEach(r),Pt=f(e),N=o(e,"P",{});var tt=i(N);Je=o(tt,"STRONG",{});var ho=i(Je);ea=s(ho,"Leandro von Werra"),ho.forEach(r),ta=s(tt,"  is a machine learning engineer in the open-source team at Hugging Face and also a co-author of the O\u2019Reilly book "),ue=o(tt,"A",{href:!0,rel:!0});var co=i(ue);ra=s(co,"Natural Language Processing with Transformers"),co.forEach(r),aa=s(tt,". He has several years of industry experience bringing NLP projects to production by working across the whole machine learning stack.."),tt.forEach(r),Lt=f(e),we=o(e,"P",{});var uo=i(we);oa=s(uo,"Are you ready to roll? In this chapter, you will learn:"),uo.forEach(r),At=f(e),v=o(e,"UL",{});var _e=i(v);fe=o(_e,"LI",{});var xt=i(fe);ia=s(xt,"How to use the "),Ke=o(xt,"CODE",{});var fo=i(Ke);na=s(fo,"pipeline()"),fo.forEach(r),sa=s(xt," function to solve NLP tasks such as text generation and classification"),xt.forEach(r),la=f(_e),Ve=o(_e,"LI",{});var go=i(Ve);ha=s(go,"About the Transformer architecture"),go.forEach(r),ca=f(_e),Qe=o(_e,"LI",{});var po=i(Qe);ua=s(po,"How to distinguish between encoder, decoder, and encoder-decoder architectures and use cases"),po.forEach(r),_e.forEach(r),this.h()},h(){l(y,"name","hf:doc:metadata"),l(y,"content",JSON.stringify(Ao)),l($,"id","introduction"),l($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l($,"href","#introduction"),l(b,"class","relative group"),l(S,"id","welcome-to-the-course"),l(S,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(S,"href","#welcome-to-the-course"),l(_,"class","relative group"),l(R,"href","https://huggingface.co/"),l(R,"rel","nofollow"),l(O,"href","https://github.com/huggingface/transformers"),l(O,"rel","nofollow"),l(q,"href","https://github.com/huggingface/datasets"),l(q,"rel","nofollow"),l(z,"href","https://github.com/huggingface/tokenizers"),l(z,"rel","nofollow"),l(B,"href","https://github.com/huggingface/accelerate"),l(B,"rel","nofollow"),l(W,"href","https://huggingface.co/models"),l(W,"rel","nofollow"),l(I,"id","what-to-expect"),l(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(I,"href","#what-to-expect"),l(E,"class","relative group"),l(Y,"class","block dark:hidden"),mo(Y.src,va="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter1/summary.svg")||l(Y,"src",va),l(Y,"alt","Brief overview of the chapters of the course."),l(j,"class","hidden dark:block"),mo(j.src,ya="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter1/summary-dark.svg")||l(j,"src",ya),l(j,"alt","Brief overview of the chapters of the course."),l(k,"class","flex justify-center"),l(K,"href","https://huggingface.co/models"),l(K,"rel","nofollow"),l(V,"href","https://www.fast.ai/"),l(V,"rel","nofollow"),l(Q,"href","https://course.fast.ai/"),l(Q,"rel","nofollow"),l(X,"href","https://www.deeplearning.ai/"),l(X,"rel","nofollow"),l(Z,"href","https://pytorch.org/"),l(Z,"rel","nofollow"),l(ee,"href","https://www.tensorflow.org/"),l(ee,"rel","nofollow"),l(te,"href","https://www.coursera.org/specializations/natural-language-processing?utm_source=deeplearning-ai&utm_medium=institutions&utm_campaign=20211011-nlp-2-hugging_face-page-nlp-refresh"),l(te,"rel","nofollow"),l(F,"id","who-are-we"),l(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(F,"href","#who-are-we"),l(L,"class","relative group"),l(ae,"href","https://github.com/gradio-app/gradio"),l(ae,"rel","nofollow"),l(ne,"href","https://learning.oreilly.com/library/view/deep-learning-for/9781492045519/"),l(ne,"rel","nofollow"),l(ce,"href","https://www.oreilly.com/library/view/natural-language-processing/9781098103231/"),l(ce,"rel","nofollow"),l(ue,"href","https://www.oreilly.com/library/view/natural-language-processing/9781098103231/"),l(ue,"rel","nofollow")},m(e,h){t(document.head,y),c(e,rt,h),c(e,b,h),t(b,$),t($,Te),Pe(x,Te,null),t(b,Gt),t(b,Ne),t(Ne,Mt),c(e,at,h),Pe(C,e,h),c(e,ot,h),c(e,_,h),t(_,S),t(S,$e),Pe(G,$e,null),t(_,Rt),t(_,Se),t(Se,Ot),c(e,it,h),Pe(M,e,h),c(e,nt,h),c(e,g,h),t(g,qt),t(g,R),t(R,zt),t(g,Bt),t(g,O),t(O,Wt),t(g,Ut),t(g,q),t(q,Yt),t(g,jt),t(g,z),t(z,Jt),t(g,Kt),t(g,B),t(B,Vt),t(g,Qt),t(g,W),t(W,Xt),t(g,Zt),c(e,st,h),c(e,E,h),t(E,I),t(I,Ie),Pe(U,Ie,null),t(E,er),t(E,De),t(De,tr),c(e,lt,h),c(e,pe,h),t(pe,rr),c(e,ht,h),c(e,k,h),t(k,Y),t(k,ar),t(k,j),c(e,ct,h),c(e,d,h),t(d,J),t(J,or),t(J,K),t(K,ir),t(J,nr),t(d,sr),t(d,Fe),t(Fe,lr),t(d,hr),t(d,xe),t(xe,cr),c(e,ut,h),c(e,de,h),t(de,ur),c(e,ft,h),c(e,m,h),t(m,Ce),t(Ce,fr),t(m,gr),t(m,w),t(w,pr),t(w,V),t(V,dr),t(w,mr),t(w,Q),t(Q,wr),t(w,vr),t(w,X),t(X,yr),t(m,br),t(m,P),t(P,_r),t(P,Z),t(Z,Er),t(P,kr),t(P,ee),t(ee,Pr),t(P,Lr),c(e,gt,h),c(e,D,h),t(D,Ar),t(D,te),t(te,Hr),t(D,Tr),c(e,pt,h),c(e,L,h),t(L,F),t(F,Ge),Pe(re,Ge,null),t(L,Nr),t(L,Me),t(Me,$r),c(e,dt,h),c(e,me,h),t(me,Sr),c(e,mt,h),c(e,A,h),t(A,Re),t(Re,Ir),t(A,Dr),t(A,ae),t(ae,Fr),t(A,xr),c(e,wt,h),c(e,oe,h),t(oe,Oe),t(Oe,Cr),t(oe,Gr),c(e,vt,h),c(e,ie,h),t(ie,qe),t(qe,Mr),t(ie,Rr),c(e,yt,h),c(e,H,h),t(H,ze),t(ze,Or),t(H,qr),t(H,Be),t(Be,ne),t(ne,zr),t(H,Br),c(e,bt,h),c(e,se,h),t(se,We),t(We,Wr),t(se,Ur),c(e,_t,h),c(e,le,h),t(le,Ue),t(Ue,Yr),t(le,jr),c(e,Et,h),c(e,he,h),t(he,Ye),t(Ye,Jr),t(he,Kr),c(e,kt,h),c(e,T,h),t(T,je),t(je,Vr),t(T,Qr),t(T,ce),t(ce,Xr),t(T,Zr),c(e,Pt,h),c(e,N,h),t(N,Je),t(Je,ea),t(N,ta),t(N,ue),t(ue,ra),t(N,aa),c(e,Lt,h),c(e,we,h),t(we,oa),c(e,At,h),c(e,v,h),t(v,fe),t(fe,ia),t(fe,Ke),t(Ke,na),t(fe,sa),t(v,la),t(v,Ve),t(Ve,ha),t(v,ca),t(v,Qe),t(Qe,ua),Ht=!0},p:_o,i(e){Ht||(Le(x.$$.fragment,e),Le(C.$$.fragment,e),Le(G.$$.fragment,e),Le(M.$$.fragment,e),Le(U.$$.fragment,e),Le(re.$$.fragment,e),Ht=!0)},o(e){Ae(x.$$.fragment,e),Ae(C.$$.fragment,e),Ae(G.$$.fragment,e),Ae(M.$$.fragment,e),Ae(U.$$.fragment,e),Ae(re.$$.fragment,e),Ht=!1},d(e){r(y),e&&r(rt),e&&r(b),He(x),e&&r(at),He(C,e),e&&r(ot),e&&r(_),He(G),e&&r(it),He(M,e),e&&r(nt),e&&r(g),e&&r(st),e&&r(E),He(U),e&&r(lt),e&&r(pe),e&&r(ht),e&&r(k),e&&r(ct),e&&r(d),e&&r(ut),e&&r(de),e&&r(ft),e&&r(m),e&&r(gt),e&&r(D),e&&r(pt),e&&r(L),He(re),e&&r(dt),e&&r(me),e&&r(mt),e&&r(A),e&&r(wt),e&&r(oe),e&&r(vt),e&&r(ie),e&&r(yt),e&&r(H),e&&r(bt),e&&r(se),e&&r(_t),e&&r(le),e&&r(Et),e&&r(he),e&&r(kt),e&&r(T),e&&r(Pt),e&&r(N),e&&r(Lt),e&&r(we),e&&r(At),e&&r(v)}}}const Ao={local:"introduction",sections:[{local:"welcome-to-the-course",title:"Welcome to the \u{1F917} Course!"},{local:"what-to-expect",title:"What to expect?"},{local:"who-are-we",title:"Who are we?"}],title:"Introduction"};function Ho(wa){return Eo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Io extends wo{constructor(y){super();vo(this,y,Ho,Lo,yo,{})}}export{Io as default,Ao as metadata};
