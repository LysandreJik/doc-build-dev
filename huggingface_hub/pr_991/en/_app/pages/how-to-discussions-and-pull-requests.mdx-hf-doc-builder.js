import{S as Qi,i as Xi,s as Zi,e as l,k as h,w as D,t as a,M as el,c as n,d as t,m as p,a as r,x as $,h as i,b as u,G as s,g as c,y as k,L as sl,q as P,o as H,B as R,v as tl}from"../chunks/vendor-hf-doc-builder.js";import{I as ds}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as gs}from"../chunks/CodeBlock-hf-doc-builder.js";function al(Ba){let x,ms,T,O,Fe,K,Qs,Ye,Xs,vs,w,Zs,Be,et,st,Q,tt,at,bs,C,N,ze,X,it,Ge,lt,ws,W,nt,Je,rt,ot,Es,Z,qs,b,Ke,ut,ct,ee,ht,pt,ce,ft,_t,ys,se,As,g,dt,he,gt,mt,pe,vt,bt,fe,wt,Et,js,te,Ds,d,_e,qt,yt,de,At,jt,ge,Dt,$t,Qe,kt,Pt,$s,E,Ht,Xe,Rt,xt,Ze,Tt,Ct,ks,I,V,es,ae,It,ss,St,Ps,q,Lt,me,Mt,Ot,ie,Nt,Wt,Hs,f,Vt,ve,Ut,Ft,ts,Yt,Bt,as,zt,Gt,be,Jt,Kt,Rs,m,is,we,Qt,Xt,ls,Ee,Zt,ea,ns,qe,sa,ta,rs,os,aa,xs,le,Ts,v,ia,ye,la,na,Ae,ra,oa,us,ua,ca,Cs,ne,Is,U,ha,je,pa,fa,Ss,_,De,$e,_a,da,ga,ke,Pe,ma,va,ba,He,Re,wa,Ea,qa,xe,Te,ya,Aa,ja,Ce,Ie,Da,$a,Ls,F,ka,Se,Pa,Ha,Ms,S,Y,cs,re,Ra,hs,xa,Os,Le,ps,Ta,Ns,L,B,fs,oe,Ca,_s,Ia,Ws,y,Sa,Me,La,Ma,Oe,Oa,Na,Vs;return K=new ds({}),X=new ds({}),Z=new gs({props:{code:`from huggingface_hub import get_repo_discussions
for discussion in get_repo_discussions(repo_id="bigscience/bloom-1b3"):
    print(f"{discussion.num} - {discussion.title}, pr: {discussion.is_pull_request}")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">for</span> discussion <span class="hljs-keyword">in</span> get_repo_discussions(repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{discussion.num}</span> - <span class="hljs-subst">{discussion.title}</span>, pr: <span class="hljs-subst">{discussion.is_pull_request}</span>&quot;</span>)

<span class="hljs-comment"># 11 - Add Flax weights, pr: True</span>
<span class="hljs-comment"># 10 - Update README.md, pr: True</span>
<span class="hljs-comment"># 9 - Training languages in the model card, pr: True</span>
<span class="hljs-comment"># 8 - Update tokenizer_config.json, pr: True</span>
<span class="hljs-comment"># 7 - Slurm training script, pr: False</span>
[...]`}}),se=new gs({props:{code:`from huggingface_hub import get_repo_discussions
discussions_list = list(get_repo_discussions(repo_id="bert-base-uncased"))`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_repo_discussions
<span class="hljs-meta">&gt;&gt;&gt; </span>discussions_list = <span class="hljs-built_in">list</span>(get_repo_discussions(repo_id=<span class="hljs-string">&quot;bert-base-uncased&quot;</span>))`}}),te=new gs({props:{code:`from huggingface_hub import get_discussion_details

get_discussion_details(
    repo_id="bigscience/bloom-1b3",
    discussion_num=2
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_discussion_details

<span class="hljs-meta">&gt;&gt;&gt; </span>get_discussion_details(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;bigscience/bloom-1b3&quot;</span>,
<span class="hljs-meta">... </span>    discussion_num=<span class="hljs-number">2</span>
<span class="hljs-meta">... </span>)
DiscussionWithDetails(
    num=<span class="hljs-number">2</span>,
    author=<span class="hljs-string">&#x27;cakiki&#x27;</span>,
    title=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>,
    status=<span class="hljs-string">&#x27;open&#x27;</span>,
    is_pull_request=<span class="hljs-literal">True</span>,
    events=[
        DiscussionComment(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;comment&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, ...),
        DiscussionCommit(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;commit&#x27;</span>, author=<span class="hljs-string">&#x27;cakiki&#x27;</span>, summary=<span class="hljs-string">&#x27;Update VRAM memory for the V100s&#x27;</span>, oid=<span class="hljs-string">&#x27;1256f9d9a33fa8887e1c1bf0e09b4713da96773a&#x27;</span>, ...),
    ],
    conflicting_files=[],
    target_branch=<span class="hljs-string">&#x27;refs/heads/main&#x27;</span>,
    merge_commit_oid=<span class="hljs-literal">None</span>,
    diff=<span class="hljs-string">&#x27;diff --git a/README.md b/README.md\\nindex a6ae3b9294edf8d0eda0d67c7780a10241242a7e..3a1814f212bc3f0d3cc8f74bdbd316de4ae7b9e3 100644\\n--- a/README.md\\n+++ b/README.md\\n@@ -132,7 +132,7 [...]&#x27;</span>,
)`}}),ae=new ds({}),le=new gs({props:{code:`from huggingface_hub import metadata_update

metadata_update(
    repo_id="username/repo_name",
    metadata={"tags": ["computer-vision", "awesome-model"]},
    create_pr=True,
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> metadata_update

<span class="hljs-meta">&gt;&gt;&gt; </span>metadata_update(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo_name&quot;</span>,
<span class="hljs-meta">... </span>    metadata={<span class="hljs-string">&quot;tags&quot;</span>: [<span class="hljs-string">&quot;computer-vision&quot;</span>, <span class="hljs-string">&quot;awesome-model&quot;</span>]},
<span class="hljs-meta">... </span>    create_pr=<span class="hljs-literal">True</span>,
<span class="hljs-meta">... </span>)`}}),ne=new gs({props:{code:`from huggingface_hub import create_discussion, create_pull_request

create_discussion(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)

create_pull_request(
    repo_id="username/repo-name",
    title="Hi from the huggingface_hub library!",
    token="<insert your access token here>",
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_discussion, create_pull_request

<span class="hljs-meta">&gt;&gt;&gt; </span>create_discussion(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(...)

<span class="hljs-meta">&gt;&gt;&gt; </span>create_pull_request(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;username/repo-name&quot;</span>,
<span class="hljs-meta">... </span>    title=<span class="hljs-string">&quot;Hi from the huggingface_hub library!&quot;</span>,
<span class="hljs-meta">... </span>    token=<span class="hljs-string">&quot;&lt;insert your access token here&gt;&quot;</span>,
<span class="hljs-meta">... </span>)
DiscussionWithDetails(..., is_pull_request=<span class="hljs-literal">True</span>)`}}),re=new ds({}),oe=new ds({}),{c(){x=l("meta"),ms=h(),T=l("h1"),O=l("a"),Fe=l("span"),D(K.$$.fragment),Qs=h(),Ye=l("span"),Xs=a("Interact with Discussions and Pull Requests"),vs=h(),w=l("p"),Zs=a("The "),Be=l("code"),et=a("huggingface_hub"),st=a(` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=l("a"),tt=a("the dedicated documentation page"),at=a(`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),bs=h(),C=l("h2"),N=l("a"),ze=l("span"),D(X.$$.fragment),it=h(),Ge=l("span"),lt=a("Retrieve Discussions and Pull Requests from the Hub"),ws=h(),W=l("p"),nt=a("The "),Je=l("code"),rt=a("HfApi"),ot=a(" class allows you to retrieve Discussions and Pull Requests on a given repo:"),Es=h(),D(Z.$$.fragment),qs=h(),b=l("p"),Ke=l("code"),ut=a("HfApi.get_repo_discussions"),ct=a(" returns a "),ee=l("a"),ht=a("generator"),pt=a(` that yields
`),ce=l("a"),ft=a("Discussion"),_t=a(" objects. To get all the Discussions in a single list, run:"),ys=h(),D(se.$$.fragment),As=h(),g=l("p"),dt=a("The "),he=l("a"),gt=a("Discussion"),mt=a(" object returned by "),pe=l("a"),vt=a("HfApi.get_repo_discussions()"),bt=a(` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=l("a"),wt=a("HfApi.get_discussion_details()"),Et=a(":"),js=h(),D(te.$$.fragment),Ds=h(),d=l("p"),_e=l("a"),qt=a("HfApi.get_discussion_details()"),yt=a(" returns a "),de=l("a"),At=a("DiscussionWithDetails"),jt=a(" object, which is a subclass of "),ge=l("a"),Dt=a("Discussion"),$t=a(`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Qe=l("code"),kt=a("DiscussionWithDetails.events"),Pt=a("."),$s=h(),E=l("p"),Ht=a("In case of a Pull Request, you can retrieve the raw git diff with "),Xe=l("code"),Rt=a("DiscussionWithDetails.diff"),xt=a(`. All the commits of the
Pull Request are listed in `),Ze=l("code"),Tt=a("DiscussionWithDetails.events"),Ct=a("."),ks=h(),I=l("h2"),V=l("a"),es=l("span"),D(ae.$$.fragment),It=h(),ss=l("span"),St=a("Create and edit a Discussion or Pull Request programmatically"),Ps=h(),q=l("p"),Lt=a("The "),me=l("a"),Mt=a("HfApi"),Ot=a(` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=l("a"),Nt=a("access token"),Wt=a(` to create and edit Discussions
or Pull Requests.`),Hs=h(),f=l("p"),Vt=a("The simplest way to propose changes on a repo on the Hub is via the "),ve=l("a"),Ut=a("create_commit()"),Ft=a(` API: just
set the `),ts=l("code"),Yt=a("create_pr"),Bt=a(" parameter to "),as=l("code"),zt=a("True"),Gt=a(". This parameter is also available on other methods that wrap "),be=l("a"),Jt=a("create_commit()"),Kt=a(":"),Rs=h(),m=l("ul"),is=l("li"),we=l("a"),Qt=a("upload_file()"),Xt=h(),ls=l("li"),Ee=l("a"),Zt=a("upload_folder()"),ea=h(),ns=l("li"),qe=l("a"),sa=a("delete_file()"),ta=h(),rs=l("li"),os=l("code"),aa=a("metadata_update()"),xs=h(),D(le.$$.fragment),Ts=h(),v=l("p"),ia=a("You can also use "),ye=l("a"),la=a("HfApi.create_discussion()"),na=a(" (respectively "),Ae=l("a"),ra=a("HfApi.create_pull_request()"),oa=a(`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),us=l("code"),ua=a('"draft"'),ca=a(" mode."),Cs=h(),D(ne.$$.fragment),Is=h(),U=l("p"),ha=a("Managing Pull Requests and Discussions can be done entirely with the "),je=l("a"),pa=a("HfApi"),fa=a(" class. For example:"),Ss=h(),_=l("ul"),De=l("li"),$e=l("a"),_a=a("comment_discussion()"),da=a(" to add comments"),ga=h(),ke=l("li"),Pe=l("a"),ma=a("edit_discussion_comment()"),va=a(" to edit comments"),ba=h(),He=l("li"),Re=l("a"),wa=a("rename_discussion()"),Ea=a(" to rename a Discussion or Pull Request"),qa=h(),xe=l("li"),Te=l("a"),ya=a("change_discussion_status()"),Aa=a(" to open or close a Discussion / Pull Request"),ja=h(),Ce=l("li"),Ie=l("a"),Da=a("merge_pull_request()"),$a=a(" to merge a Pull Request"),Ls=h(),F=l("p"),ka=a("Visit the "),Se=l("a"),Pa=a("HfApi"),Ha=a(" documentation page for an exhaustive reference of all available methods."),Ms=h(),S=l("h2"),Y=l("a"),cs=l("span"),D(re.$$.fragment),Ra=h(),hs=l("span"),xa=a("Push changes to a Pull Request"),Os=h(),Le=l("p"),ps=l("em"),Ta=a("Coming soon !"),Ns=h(),L=l("h2"),B=l("a"),fs=l("span"),D(oe.$$.fragment),Ca=h(),_s=l("span"),Ia=a("See also"),Ws=h(),y=l("p"),Sa=a("For a more detailed reference, visit the "),Me=l("a"),La=a("community"),Ma=a(" and the "),Oe=l("a"),Oa=a("hf_api"),Na=a(" documentation page."),this.h()},l(e){const o=el('[data-svelte="svelte-1phssyn"]',document.head);x=n(o,"META",{name:!0,content:!0}),o.forEach(t),ms=p(e),T=n(e,"H1",{class:!0});var Us=r(T);O=n(Us,"A",{id:!0,class:!0,href:!0});var za=r(O);Fe=n(za,"SPAN",{});var Ga=r(Fe);$(K.$$.fragment,Ga),Ga.forEach(t),za.forEach(t),Qs=p(Us),Ye=n(Us,"SPAN",{});var Ja=r(Ye);Xs=i(Ja,"Interact with Discussions and Pull Requests"),Ja.forEach(t),Us.forEach(t),vs=p(e),w=n(e,"P",{});var Ne=r(w);Zs=i(Ne,"The "),Be=n(Ne,"CODE",{});var Ka=r(Be);et=i(Ka,"huggingface_hub"),Ka.forEach(t),st=i(Ne,` library provides a Python interface to interact with Pull Requests and Discussions on the Hub.
Visit `),Q=n(Ne,"A",{href:!0,rel:!0});var Qa=r(Q);tt=i(Qa,"the dedicated documentation page"),Qa.forEach(t),at=i(Ne,`
for a deeper view of what Discussions and Pull Requests on the Hub are, and how they work under the hood.`),Ne.forEach(t),bs=p(e),C=n(e,"H2",{class:!0});var Fs=r(C);N=n(Fs,"A",{id:!0,class:!0,href:!0});var Xa=r(N);ze=n(Xa,"SPAN",{});var Za=r(ze);$(X.$$.fragment,Za),Za.forEach(t),Xa.forEach(t),it=p(Fs),Ge=n(Fs,"SPAN",{});var ei=r(Ge);lt=i(ei,"Retrieve Discussions and Pull Requests from the Hub"),ei.forEach(t),Fs.forEach(t),ws=p(e),W=n(e,"P",{});var Ys=r(W);nt=i(Ys,"The "),Je=n(Ys,"CODE",{});var si=r(Je);rt=i(si,"HfApi"),si.forEach(t),ot=i(Ys," class allows you to retrieve Discussions and Pull Requests on a given repo:"),Ys.forEach(t),Es=p(e),$(Z.$$.fragment,e),qs=p(e),b=n(e,"P",{});var ue=r(b);Ke=n(ue,"CODE",{});var ti=r(Ke);ut=i(ti,"HfApi.get_repo_discussions"),ti.forEach(t),ct=i(ue," returns a "),ee=n(ue,"A",{href:!0,rel:!0});var ai=r(ee);ht=i(ai,"generator"),ai.forEach(t),pt=i(ue,` that yields
`),ce=n(ue,"A",{href:!0});var ii=r(ce);ft=i(ii,"Discussion"),ii.forEach(t),_t=i(ue," objects. To get all the Discussions in a single list, run:"),ue.forEach(t),ys=p(e),$(se.$$.fragment,e),As=p(e),g=n(e,"P",{});var z=r(g);dt=i(z,"The "),he=n(z,"A",{href:!0});var li=r(he);gt=i(li,"Discussion"),li.forEach(t),mt=i(z," object returned by "),pe=n(z,"A",{href:!0});var ni=r(pe);vt=i(ni,"HfApi.get_repo_discussions()"),ni.forEach(t),bt=i(z,` contains high-level overview of the
Discussion or Pull Request. You can also get more detailed information using `),fe=n(z,"A",{href:!0});var ri=r(fe);wt=i(ri,"HfApi.get_discussion_details()"),ri.forEach(t),Et=i(z,":"),z.forEach(t),js=p(e),$(te.$$.fragment,e),Ds=p(e),d=n(e,"P",{});var M=r(d);_e=n(M,"A",{href:!0});var oi=r(_e);qt=i(oi,"HfApi.get_discussion_details()"),oi.forEach(t),yt=i(M," returns a "),de=n(M,"A",{href:!0});var ui=r(de);At=i(ui,"DiscussionWithDetails"),ui.forEach(t),jt=i(M," object, which is a subclass of "),ge=n(M,"A",{href:!0});var ci=r(ge);Dt=i(ci,"Discussion"),ci.forEach(t),$t=i(M,`
with more detailed information about the Discussion or Pull Request. Information includes all the comments, status changes,
and renames of the Discussion via `),Qe=n(M,"CODE",{});var hi=r(Qe);kt=i(hi,"DiscussionWithDetails.events"),hi.forEach(t),Pt=i(M,"."),M.forEach(t),$s=p(e),E=n(e,"P",{});var We=r(E);Ht=i(We,"In case of a Pull Request, you can retrieve the raw git diff with "),Xe=n(We,"CODE",{});var pi=r(Xe);Rt=i(pi,"DiscussionWithDetails.diff"),pi.forEach(t),xt=i(We,`. All the commits of the
Pull Request are listed in `),Ze=n(We,"CODE",{});var fi=r(Ze);Tt=i(fi,"DiscussionWithDetails.events"),fi.forEach(t),Ct=i(We,"."),We.forEach(t),ks=p(e),I=n(e,"H2",{class:!0});var Bs=r(I);V=n(Bs,"A",{id:!0,class:!0,href:!0});var _i=r(V);es=n(_i,"SPAN",{});var di=r(es);$(ae.$$.fragment,di),di.forEach(t),_i.forEach(t),It=p(Bs),ss=n(Bs,"SPAN",{});var gi=r(ss);St=i(gi,"Create and edit a Discussion or Pull Request programmatically"),gi.forEach(t),Bs.forEach(t),Ps=p(e),q=n(e,"P",{});var Ve=r(q);Lt=i(Ve,"The "),me=n(Ve,"A",{href:!0});var mi=r(me);Mt=i(mi,"HfApi"),mi.forEach(t),Ot=i(Ve,` class also offers ways to create and edit Discussions and Pull Requests.
You will need an `),ie=n(Ve,"A",{href:!0,rel:!0});var vi=r(ie);Nt=i(vi,"access token"),vi.forEach(t),Wt=i(Ve,` to create and edit Discussions
or Pull Requests.`),Ve.forEach(t),Hs=p(e),f=n(e,"P",{});var A=r(f);Vt=i(A,"The simplest way to propose changes on a repo on the Hub is via the "),ve=n(A,"A",{href:!0});var bi=r(ve);Ut=i(bi,"create_commit()"),bi.forEach(t),Ft=i(A,` API: just
set the `),ts=n(A,"CODE",{});var wi=r(ts);Yt=i(wi,"create_pr"),wi.forEach(t),Bt=i(A," parameter to "),as=n(A,"CODE",{});var Ei=r(as);zt=i(Ei,"True"),Ei.forEach(t),Gt=i(A,". This parameter is also available on other methods that wrap "),be=n(A,"A",{href:!0});var qi=r(be);Jt=i(qi,"create_commit()"),qi.forEach(t),Kt=i(A,":"),A.forEach(t),Rs=p(e),m=n(e,"UL",{});var G=r(m);is=n(G,"LI",{});var yi=r(is);we=n(yi,"A",{href:!0});var Ai=r(we);Qt=i(Ai,"upload_file()"),Ai.forEach(t),yi.forEach(t),Xt=p(G),ls=n(G,"LI",{});var ji=r(ls);Ee=n(ji,"A",{href:!0});var Di=r(Ee);Zt=i(Di,"upload_folder()"),Di.forEach(t),ji.forEach(t),ea=p(G),ns=n(G,"LI",{});var $i=r(ns);qe=n($i,"A",{href:!0});var ki=r(qe);sa=i(ki,"delete_file()"),ki.forEach(t),$i.forEach(t),ta=p(G),rs=n(G,"LI",{});var Pi=r(rs);os=n(Pi,"CODE",{});var Hi=r(os);aa=i(Hi,"metadata_update()"),Hi.forEach(t),Pi.forEach(t),G.forEach(t),xs=p(e),$(le.$$.fragment,e),Ts=p(e),v=n(e,"P",{});var J=r(v);ia=i(J,"You can also use "),ye=n(J,"A",{href:!0});var Ri=r(ye);la=i(Ri,"HfApi.create_discussion()"),Ri.forEach(t),na=i(J," (respectively "),Ae=n(J,"A",{href:!0});var xi=r(Ae);ra=i(xi,"HfApi.create_pull_request()"),xi.forEach(t),oa=i(J,`) to create a Discussion (respectively a Pull Request) on a repo.
Opening a Pull Request this way can be useful if you need to work on changes locally. Pull Requests opened this way will be in `),us=n(J,"CODE",{});var Ti=r(us);ua=i(Ti,'"draft"'),Ti.forEach(t),ca=i(J," mode."),J.forEach(t),Cs=p(e),$(ne.$$.fragment,e),Is=p(e),U=n(e,"P",{});var zs=r(U);ha=i(zs,"Managing Pull Requests and Discussions can be done entirely with the "),je=n(zs,"A",{href:!0});var Ci=r(je);pa=i(Ci,"HfApi"),Ci.forEach(t),fa=i(zs," class. For example:"),zs.forEach(t),Ss=p(e),_=n(e,"UL",{});var j=r(_);De=n(j,"LI",{});var Wa=r(De);$e=n(Wa,"A",{href:!0});var Ii=r($e);_a=i(Ii,"comment_discussion()"),Ii.forEach(t),da=i(Wa," to add comments"),Wa.forEach(t),ga=p(j),ke=n(j,"LI",{});var Va=r(ke);Pe=n(Va,"A",{href:!0});var Si=r(Pe);ma=i(Si,"edit_discussion_comment()"),Si.forEach(t),va=i(Va," to edit comments"),Va.forEach(t),ba=p(j),He=n(j,"LI",{});var Ua=r(He);Re=n(Ua,"A",{href:!0});var Li=r(Re);wa=i(Li,"rename_discussion()"),Li.forEach(t),Ea=i(Ua," to rename a Discussion or Pull Request"),Ua.forEach(t),qa=p(j),xe=n(j,"LI",{});var Fa=r(xe);Te=n(Fa,"A",{href:!0});var Mi=r(Te);ya=i(Mi,"change_discussion_status()"),Mi.forEach(t),Aa=i(Fa," to open or close a Discussion / Pull Request"),Fa.forEach(t),ja=p(j),Ce=n(j,"LI",{});var Ya=r(Ce);Ie=n(Ya,"A",{href:!0});var Oi=r(Ie);Da=i(Oi,"merge_pull_request()"),Oi.forEach(t),$a=i(Ya," to merge a Pull Request"),Ya.forEach(t),j.forEach(t),Ls=p(e),F=n(e,"P",{});var Gs=r(F);ka=i(Gs,"Visit the "),Se=n(Gs,"A",{href:!0});var Ni=r(Se);Pa=i(Ni,"HfApi"),Ni.forEach(t),Ha=i(Gs," documentation page for an exhaustive reference of all available methods."),Gs.forEach(t),Ms=p(e),S=n(e,"H2",{class:!0});var Js=r(S);Y=n(Js,"A",{id:!0,class:!0,href:!0});var Wi=r(Y);cs=n(Wi,"SPAN",{});var Vi=r(cs);$(re.$$.fragment,Vi),Vi.forEach(t),Wi.forEach(t),Ra=p(Js),hs=n(Js,"SPAN",{});var Ui=r(hs);xa=i(Ui,"Push changes to a Pull Request"),Ui.forEach(t),Js.forEach(t),Os=p(e),Le=n(e,"P",{});var Fi=r(Le);ps=n(Fi,"EM",{});var Yi=r(ps);Ta=i(Yi,"Coming soon !"),Yi.forEach(t),Fi.forEach(t),Ns=p(e),L=n(e,"H2",{class:!0});var Ks=r(L);B=n(Ks,"A",{id:!0,class:!0,href:!0});var Bi=r(B);fs=n(Bi,"SPAN",{});var zi=r(fs);$(oe.$$.fragment,zi),zi.forEach(t),Bi.forEach(t),Ca=p(Ks),_s=n(Ks,"SPAN",{});var Gi=r(_s);Ia=i(Gi,"See also"),Gi.forEach(t),Ks.forEach(t),Ws=p(e),y=n(e,"P",{});var Ue=r(y);Sa=i(Ue,"For a more detailed reference, visit the "),Me=n(Ue,"A",{href:!0});var Ji=r(Me);La=i(Ji,"community"),Ji.forEach(t),Ma=i(Ue," and the "),Oe=n(Ue,"A",{href:!0});var Ki=r(Oe);Oa=i(Ki,"hf_api"),Ki.forEach(t),Na=i(Ue," documentation page."),Ue.forEach(t),this.h()},h(){u(x,"name","hf:doc:metadata"),u(x,"content",JSON.stringify(il)),u(O,"id","interact-with-discussions-and-pull-requests"),u(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(O,"href","#interact-with-discussions-and-pull-requests"),u(T,"class","relative group"),u(Q,"href","https://huggingface.co/docs/hub/repositories-pull-requests-discussions"),u(Q,"rel","nofollow"),u(N,"id","retrieve-discussions-and-pull-requests-from-the-hub"),u(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(N,"href","#retrieve-discussions-and-pull-requests-from-the-hub"),u(C,"class","relative group"),u(ee,"href","https://docs.python.org/3.7/howto/functional.html#generators"),u(ee,"rel","nofollow"),u(ce,"href","/docs/huggingface_hub/pr_991/en/package_reference/community#huggingface_hub.Discussion"),u(he,"href","/docs/huggingface_hub/pr_991/en/package_reference/community#huggingface_hub.Discussion"),u(pe,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.get_repo_discussions"),u(fe,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(_e,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.get_discussion_details"),u(de,"href","/docs/huggingface_hub/pr_991/en/package_reference/community#huggingface_hub.DiscussionWithDetails"),u(ge,"href","/docs/huggingface_hub/pr_991/en/package_reference/community#huggingface_hub.Discussion"),u(V,"id","create-and-edit-a-discussion-or-pull-request-programmatically"),u(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(V,"href","#create-and-edit-a-discussion-or-pull-request-programmatically"),u(I,"class","relative group"),u(me,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi"),u(ie,"href","https://huggingface.co/docs/hub/security-tokens"),u(ie,"rel","nofollow"),u(ve,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(be,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.create_commit"),u(we,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),u(Ee,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.upload_folder"),u(qe,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.delete_file"),u(ye,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.create_discussion"),u(Ae,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.create_pull_request"),u(je,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi"),u($e,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.comment_discussion"),u(Pe,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.edit_discussion_comment"),u(Re,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.rename_discussion"),u(Te,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.change_discussion_status"),u(Ie,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi.merge_pull_request"),u(Se,"href","/docs/huggingface_hub/pr_991/en/package_reference/hf_api#huggingface_hub.HfApi"),u(Y,"id","push-changes-to-a-pull-request"),u(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Y,"href","#push-changes-to-a-pull-request"),u(S,"class","relative group"),u(B,"id","see-also"),u(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(B,"href","#see-also"),u(L,"class","relative group"),u(Me,"href","/source/package_reference/community"),u(Oe,"href","/source/package_reference/hf_api")},m(e,o){s(document.head,x),c(e,ms,o),c(e,T,o),s(T,O),s(O,Fe),k(K,Fe,null),s(T,Qs),s(T,Ye),s(Ye,Xs),c(e,vs,o),c(e,w,o),s(w,Zs),s(w,Be),s(Be,et),s(w,st),s(w,Q),s(Q,tt),s(w,at),c(e,bs,o),c(e,C,o),s(C,N),s(N,ze),k(X,ze,null),s(C,it),s(C,Ge),s(Ge,lt),c(e,ws,o),c(e,W,o),s(W,nt),s(W,Je),s(Je,rt),s(W,ot),c(e,Es,o),k(Z,e,o),c(e,qs,o),c(e,b,o),s(b,Ke),s(Ke,ut),s(b,ct),s(b,ee),s(ee,ht),s(b,pt),s(b,ce),s(ce,ft),s(b,_t),c(e,ys,o),k(se,e,o),c(e,As,o),c(e,g,o),s(g,dt),s(g,he),s(he,gt),s(g,mt),s(g,pe),s(pe,vt),s(g,bt),s(g,fe),s(fe,wt),s(g,Et),c(e,js,o),k(te,e,o),c(e,Ds,o),c(e,d,o),s(d,_e),s(_e,qt),s(d,yt),s(d,de),s(de,At),s(d,jt),s(d,ge),s(ge,Dt),s(d,$t),s(d,Qe),s(Qe,kt),s(d,Pt),c(e,$s,o),c(e,E,o),s(E,Ht),s(E,Xe),s(Xe,Rt),s(E,xt),s(E,Ze),s(Ze,Tt),s(E,Ct),c(e,ks,o),c(e,I,o),s(I,V),s(V,es),k(ae,es,null),s(I,It),s(I,ss),s(ss,St),c(e,Ps,o),c(e,q,o),s(q,Lt),s(q,me),s(me,Mt),s(q,Ot),s(q,ie),s(ie,Nt),s(q,Wt),c(e,Hs,o),c(e,f,o),s(f,Vt),s(f,ve),s(ve,Ut),s(f,Ft),s(f,ts),s(ts,Yt),s(f,Bt),s(f,as),s(as,zt),s(f,Gt),s(f,be),s(be,Jt),s(f,Kt),c(e,Rs,o),c(e,m,o),s(m,is),s(is,we),s(we,Qt),s(m,Xt),s(m,ls),s(ls,Ee),s(Ee,Zt),s(m,ea),s(m,ns),s(ns,qe),s(qe,sa),s(m,ta),s(m,rs),s(rs,os),s(os,aa),c(e,xs,o),k(le,e,o),c(e,Ts,o),c(e,v,o),s(v,ia),s(v,ye),s(ye,la),s(v,na),s(v,Ae),s(Ae,ra),s(v,oa),s(v,us),s(us,ua),s(v,ca),c(e,Cs,o),k(ne,e,o),c(e,Is,o),c(e,U,o),s(U,ha),s(U,je),s(je,pa),s(U,fa),c(e,Ss,o),c(e,_,o),s(_,De),s(De,$e),s($e,_a),s(De,da),s(_,ga),s(_,ke),s(ke,Pe),s(Pe,ma),s(ke,va),s(_,ba),s(_,He),s(He,Re),s(Re,wa),s(He,Ea),s(_,qa),s(_,xe),s(xe,Te),s(Te,ya),s(xe,Aa),s(_,ja),s(_,Ce),s(Ce,Ie),s(Ie,Da),s(Ce,$a),c(e,Ls,o),c(e,F,o),s(F,ka),s(F,Se),s(Se,Pa),s(F,Ha),c(e,Ms,o),c(e,S,o),s(S,Y),s(Y,cs),k(re,cs,null),s(S,Ra),s(S,hs),s(hs,xa),c(e,Os,o),c(e,Le,o),s(Le,ps),s(ps,Ta),c(e,Ns,o),c(e,L,o),s(L,B),s(B,fs),k(oe,fs,null),s(L,Ca),s(L,_s),s(_s,Ia),c(e,Ws,o),c(e,y,o),s(y,Sa),s(y,Me),s(Me,La),s(y,Ma),s(y,Oe),s(Oe,Oa),s(y,Na),Vs=!0},p:sl,i(e){Vs||(P(K.$$.fragment,e),P(X.$$.fragment,e),P(Z.$$.fragment,e),P(se.$$.fragment,e),P(te.$$.fragment,e),P(ae.$$.fragment,e),P(le.$$.fragment,e),P(ne.$$.fragment,e),P(re.$$.fragment,e),P(oe.$$.fragment,e),Vs=!0)},o(e){H(K.$$.fragment,e),H(X.$$.fragment,e),H(Z.$$.fragment,e),H(se.$$.fragment,e),H(te.$$.fragment,e),H(ae.$$.fragment,e),H(le.$$.fragment,e),H(ne.$$.fragment,e),H(re.$$.fragment,e),H(oe.$$.fragment,e),Vs=!1},d(e){t(x),e&&t(ms),e&&t(T),R(K),e&&t(vs),e&&t(w),e&&t(bs),e&&t(C),R(X),e&&t(ws),e&&t(W),e&&t(Es),R(Z,e),e&&t(qs),e&&t(b),e&&t(ys),R(se,e),e&&t(As),e&&t(g),e&&t(js),R(te,e),e&&t(Ds),e&&t(d),e&&t($s),e&&t(E),e&&t(ks),e&&t(I),R(ae),e&&t(Ps),e&&t(q),e&&t(Hs),e&&t(f),e&&t(Rs),e&&t(m),e&&t(xs),R(le,e),e&&t(Ts),e&&t(v),e&&t(Cs),R(ne,e),e&&t(Is),e&&t(U),e&&t(Ss),e&&t(_),e&&t(Ls),e&&t(F),e&&t(Ms),e&&t(S),R(re),e&&t(Os),e&&t(Le),e&&t(Ns),e&&t(L),R(oe),e&&t(Ws),e&&t(y)}}}const il={local:"interact-with-discussions-and-pull-requests",sections:[{local:"retrieve-discussions-and-pull-requests-from-the-hub",title:"Retrieve Discussions and Pull Requests from the Hub"},{local:"create-and-edit-a-discussion-or-pull-request-programmatically",title:"Create and edit a Discussion or Pull Request programmatically"},{local:"push-changes-to-a-pull-request",title:"Push changes to a Pull Request"},{local:"see-also",title:"See also"}],title:"Interact with Discussions and Pull Requests "};function ll(Ba){return tl(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ul extends Qi{constructor(x){super();Xi(this,x,ll,al,Zi,{})}}export{ul as default,il as metadata};
