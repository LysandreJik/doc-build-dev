import{S as Ka,i as Qa,s as Xa,e as r,k as u,w as p,t as h,N as Za,c as a,d as t,m as c,a as l,x as d,h as f,b as i,P as b,G as s,g as n,y as m,L as ei,q as g,o as v,B as _,v as ti}from"../chunks/vendor-hf-doc-builder.js";import{I as $}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Is}from"../chunks/CodeBlock-hf-doc-builder.js";function si(Hr){let w,yt,k,C,Ue,se,Ns,Ve,xs,wt,W,Rs,Fe,Ss,Gs,kt,ke,Ms,Et,y,re,Ds,Te,js,Hs,Ls,Ye,Os,Cs,Je,Ws,Pt,E,B,ze,ae,Bs,Ke,Us,qt,P,Ee,Lr,Vs,Pe,Or,At,q,U,Qe,ie,Fs,Xe,Ts,It,A,qe,Cr,Ys,Ae,Wr,Nt,I,V,Ze,le,Js,et,zs,xt,Ie,Ks,Rt,N,Ne,Br,Qs,xe,Ur,St,x,F,tt,oe,Xs,st,Zs,Gt,Re,er,Mt,R,Se,Vr,tr,Ge,Fr,Dt,S,Me,Tr,sr,De,Yr,jt,je,rr,Ht,G,He,Jr,ar,Le,zr,Lt,M,T,rt,ne,ir,at,lr,Ot,Oe,or,Ct,ue,Wt,D,Y,it,ce,nr,lt,ur,Bt,Ce,cr,Ut,j,J,ot,he,hr,nt,fr,Vt,z,pr,fe,dr,mr,Ft,H,K,ut,pe,gr,ct,vr,Tt,L,Q,ht,de,_r,ft,br,Yt,X,$r,pt,yr,wr,Jt,me,ge,kr,Er,zt,Z,Pr,dt,qr,Ar,Kt,O,ee,mt,ve,Ir,gt,Nr,Qt,te,xr,vt,Rr,Sr,Xt,We,_t,Gr,Zt,_e,es,be,bt,Mr,ts,$e,ss,ye,$t,Dr,rs,we,as;return se=new $({}),ae=new $({}),ie=new $({}),le=new $({}),oe=new $({}),ne=new $({}),ue=new Is({props:{code:`git fetch origin refs/pr/42:pr/42
git checkout pr/42
# Do your changes
git add .
git commit -m "Add your change"
git push origin pr/42:refs/pr/42`,highlighted:`git fetch origin refs/pr/42:<span class="hljs-built_in">pr</span>/42
git checkout <span class="hljs-built_in">pr</span>/42
<span class="hljs-comment"># Do your changes</span>
git add .
git commit -m <span class="hljs-string">&quot;Add your change&quot;</span>
git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42`}}),ce=new $({}),he=new $({}),pe=new $({}),de=new $({}),ve=new $({}),_e=new Is({props:{code:"git fetch refs/pr/*:refs/remotes/origin/pr/*",highlighted:"git fetch refs/pr/*:refs/remotes/origin/pr/*"}}),$e=new Is({props:{code:`git checkout pr/{PR_NUMBER}
# for example: git checkout pr/42`,highlighted:`git checkout <span class="hljs-built_in">pr</span>/{PR_NUMBER}
<span class="hljs-comment"># for example: git checkout pr/42</span>`}}),we=new Is({props:{code:`git push origin pr/{PR_NUMBER}:refs/pr/{PR_NUMBER}
# for example: git push origin pr/42:refs/pr/42`,highlighted:`git push origin <span class="hljs-built_in">pr</span>/{PR_NUMBER}:refs/pr/{PR_NUMBER}
<span class="hljs-comment"># for example: git push origin pr/42:refs/pr/42</span>`}}),{c(){w=r("meta"),yt=u(),k=r("h1"),C=r("a"),Ue=r("span"),p(se.$$.fragment),Ns=u(),Ve=r("span"),xs=h("Pull requests and Discussions"),wt=u(),W=r("p"),Rs=h("We just enabled "),Fe=r("strong"),Ss=h("community contributions to repos"),Gs=h(", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),kt=u(),ke=r("p"),Ms=h("At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),Et=u(),y=r("ul"),re=r("li"),Ds=h("no forks are involved: contributors push to a special "),Te=r("code"),js=h("ref"),Hs=h(" branch directly on the source repo."),Ls=u(),Ye=r("li"),Os=h("there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Cs=u(),Je=r("li"),Ws=h("they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),Pt=u(),E=r("h2"),B=r("a"),ze=r("span"),p(ae.$$.fragment),Bs=u(),Ke=r("span"),Us=h("List"),qt=u(),P=r("div"),Ee=r("img"),Vs=u(),Pe=r("img"),At=u(),q=r("h2"),U=r("a"),Qe=r("span"),p(ie.$$.fragment),Fs=u(),Xe=r("span"),Ts=h("View"),It=u(),A=r("div"),qe=r("img"),Ys=u(),Ae=r("img"),Nt=u(),I=r("h2"),V=r("a"),Ze=r("span"),p(le.$$.fragment),Js=u(),et=r("span"),zs=h("Editing a Discussion / Pull request title"),xt=u(),Ie=r("p"),Ks=h("If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),Rt=u(),N=r("div"),Ne=r("img"),Qs=u(),xe=r("img"),St=u(),x=r("h2"),F=r("a"),tt=r("span"),p(oe.$$.fragment),Xs=u(),st=r("span"),Zs=h("Comment edition and moderation"),Gt=u(),Re=r("p"),er=h("If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),Mt=u(),R=r("div"),Se=r("img"),tr=u(),Ge=r("img"),Dt=u(),S=r("div"),Me=r("img"),sr=u(),De=r("img"),jt=u(),je=r("p"),rr=h("You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),Ht=u(),G=r("div"),He=r("img"),ar=u(),Le=r("img"),Lt=u(),M=r("h2"),T=r("a"),rt=r("span"),p(ne.$$.fragment),ir=u(),at=r("span"),lr=h("How do I manage Pull requests locally?"),Ot=u(),Oe=r("p"),or=h("Let\u2019s assume your PR number is 42."),Ct=u(),p(ue.$$.fragment),Wt=u(),D=r("h3"),Y=r("a"),it=r("span"),p(ce.$$.fragment),nr=u(),lt=r("span"),ur=h("Draft mode"),Bt=u(),Ce=r("p"),cr=h("Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),Ut=u(),j=r("h2"),J=r("a"),ot=r("span"),p(he.$$.fragment),hr=u(),nt=r("span"),fr=h("Programmatic access"),Vt=u(),z=r("p"),pr=h("Coming soon in "),fe=r("a"),dr=h("https://github.com/huggingface/huggingface_hub"),mr=h(" \u{1F525}\u{1F525}"),Ft=u(),H=r("h1"),K=r("a"),ut=r("span"),p(pe.$$.fragment),gr=u(),ct=r("span"),vr=h("Pull requests advanced usage"),Tt=u(),L=r("h2"),Q=r("a"),ht=r("span"),p(de.$$.fragment),_r=u(),ft=r("span"),br=h("Where in the git repo are changes stored?"),Yt=u(),X=r("p"),$r=h("Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),pt=r("code"),yr=h("refs"),wr=h(" that are stored directly on the source repo."),Jt=u(),me=r("p"),ge=r("a"),kr=h("Git References"),Er=h(" are the internal machinery of git which already stores tags and branches."),zt=u(),Z=r("p"),Pr=h("The advantage of using custom refs (like "),dt=r("code"),qr=h("refs/pr/42"),Ar=h(" for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),Kt=u(),O=r("h2"),ee=r("a"),mt=r("span"),p(ve.$$.fragment),Ir=u(),gt=r("span"),Nr=h("Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Qt=u(),te=r("p"),xr=h("You can tweak your local "),vt=r("strong"),Rr=h("refspec"),Sr=h(" to fetch all Pull requests:"),Xt=u(),We=r("ol"),_t=r("li"),Gr=h("Fetch"),Zt=u(),p(_e.$$.fragment),es=u(),be=r("ol"),bt=r("li"),Mr=h("create a local branch tracking the ref"),ts=u(),p($e.$$.fragment),ss=u(),ye=r("ol"),$t=r("li"),Dr=h("IF you make local changes, to push to the PR ref:"),rs=u(),p(we.$$.fragment),this.h()},l(e){const o=Za('[data-svelte="svelte-1phssyn"]',document.head);w=a(o,"META",{name:!0,content:!0}),o.forEach(t),yt=c(e),k=a(e,"H1",{class:!0});var is=l(k);C=a(is,"A",{id:!0,class:!0,href:!0});var Kr=l(C);Ue=a(Kr,"SPAN",{});var Qr=l(Ue);d(se.$$.fragment,Qr),Qr.forEach(t),Kr.forEach(t),Ns=c(is),Ve=a(is,"SPAN",{});var Xr=l(Ve);xs=f(Xr,"Pull requests and Discussions"),Xr.forEach(t),is.forEach(t),wt=c(e),W=a(e,"P",{});var ls=l(W);Rs=f(ls,"We just enabled "),Fe=a(ls,"STRONG",{});var Zr=l(Fe);Ss=f(Zr,"community contributions to repos"),Zr.forEach(t),Gs=f(ls,", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),ls.forEach(t),kt=c(e),ke=a(e,"P",{});var ea=l(ke);Ms=f(ea,"At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),ea.forEach(t),Et=c(e),y=a(e,"UL",{});var Be=l(y);re=a(Be,"LI",{});var os=l(re);Ds=f(os,"no forks are involved: contributors push to a special "),Te=a(os,"CODE",{});var ta=l(Te);js=f(ta,"ref"),ta.forEach(t),Hs=f(os," branch directly on the source repo."),os.forEach(t),Ls=c(Be),Ye=a(Be,"LI",{});var sa=l(Ye);Os=f(sa,"there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),sa.forEach(t),Cs=c(Be),Je=a(Be,"LI",{});var ra=l(Je);Ws=f(ra,"they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),ra.forEach(t),Be.forEach(t),Pt=c(e),E=a(e,"H2",{class:!0});var ns=l(E);B=a(ns,"A",{id:!0,class:!0,href:!0});var aa=l(B);ze=a(aa,"SPAN",{});var ia=l(ze);d(ae.$$.fragment,ia),ia.forEach(t),aa.forEach(t),Bs=c(ns),Ke=a(ns,"SPAN",{});var la=l(Ke);Us=f(la,"List"),la.forEach(t),ns.forEach(t),qt=c(e),P=a(e,"DIV",{class:!0});var us=l(P);Ee=a(us,"IMG",{class:!0,src:!0}),Vs=c(us),Pe=a(us,"IMG",{class:!0,src:!0}),us.forEach(t),At=c(e),q=a(e,"H2",{class:!0});var cs=l(q);U=a(cs,"A",{id:!0,class:!0,href:!0});var oa=l(U);Qe=a(oa,"SPAN",{});var na=l(Qe);d(ie.$$.fragment,na),na.forEach(t),oa.forEach(t),Fs=c(cs),Xe=a(cs,"SPAN",{});var ua=l(Xe);Ts=f(ua,"View"),ua.forEach(t),cs.forEach(t),It=c(e),A=a(e,"DIV",{class:!0});var hs=l(A);qe=a(hs,"IMG",{class:!0,src:!0}),Ys=c(hs),Ae=a(hs,"IMG",{class:!0,src:!0}),hs.forEach(t),Nt=c(e),I=a(e,"H2",{class:!0});var fs=l(I);V=a(fs,"A",{id:!0,class:!0,href:!0});var ca=l(V);Ze=a(ca,"SPAN",{});var ha=l(Ze);d(le.$$.fragment,ha),ha.forEach(t),ca.forEach(t),Js=c(fs),et=a(fs,"SPAN",{});var fa=l(et);zs=f(fa,"Editing a Discussion / Pull request title"),fa.forEach(t),fs.forEach(t),xt=c(e),Ie=a(e,"P",{});var pa=l(Ie);Ks=f(pa,"If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),pa.forEach(t),Rt=c(e),N=a(e,"DIV",{class:!0});var ps=l(N);Ne=a(ps,"IMG",{class:!0,src:!0}),Qs=c(ps),xe=a(ps,"IMG",{class:!0,src:!0}),ps.forEach(t),St=c(e),x=a(e,"H2",{class:!0});var ds=l(x);F=a(ds,"A",{id:!0,class:!0,href:!0});var da=l(F);tt=a(da,"SPAN",{});var ma=l(tt);d(oe.$$.fragment,ma),ma.forEach(t),da.forEach(t),Xs=c(ds),st=a(ds,"SPAN",{});var ga=l(st);Zs=f(ga,"Comment edition and moderation"),ga.forEach(t),ds.forEach(t),Gt=c(e),Re=a(e,"P",{});var va=l(Re);er=f(va,"If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),va.forEach(t),Mt=c(e),R=a(e,"DIV",{class:!0});var ms=l(R);Se=a(ms,"IMG",{class:!0,src:!0}),tr=c(ms),Ge=a(ms,"IMG",{class:!0,src:!0}),ms.forEach(t),Dt=c(e),S=a(e,"DIV",{class:!0});var gs=l(S);Me=a(gs,"IMG",{class:!0,src:!0}),sr=c(gs),De=a(gs,"IMG",{class:!0,src:!0}),gs.forEach(t),jt=c(e),je=a(e,"P",{});var _a=l(je);rr=f(_a,"You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),_a.forEach(t),Ht=c(e),G=a(e,"DIV",{class:!0});var vs=l(G);He=a(vs,"IMG",{class:!0,src:!0}),ar=c(vs),Le=a(vs,"IMG",{class:!0,src:!0}),vs.forEach(t),Lt=c(e),M=a(e,"H2",{class:!0});var _s=l(M);T=a(_s,"A",{id:!0,class:!0,href:!0});var ba=l(T);rt=a(ba,"SPAN",{});var $a=l(rt);d(ne.$$.fragment,$a),$a.forEach(t),ba.forEach(t),ir=c(_s),at=a(_s,"SPAN",{});var ya=l(at);lr=f(ya,"How do I manage Pull requests locally?"),ya.forEach(t),_s.forEach(t),Ot=c(e),Oe=a(e,"P",{});var wa=l(Oe);or=f(wa,"Let\u2019s assume your PR number is 42."),wa.forEach(t),Ct=c(e),d(ue.$$.fragment,e),Wt=c(e),D=a(e,"H3",{class:!0});var bs=l(D);Y=a(bs,"A",{id:!0,class:!0,href:!0});var ka=l(Y);it=a(ka,"SPAN",{});var Ea=l(it);d(ce.$$.fragment,Ea),Ea.forEach(t),ka.forEach(t),nr=c(bs),lt=a(bs,"SPAN",{});var Pa=l(lt);ur=f(Pa,"Draft mode"),Pa.forEach(t),bs.forEach(t),Bt=c(e),Ce=a(e,"P",{});var qa=l(Ce);cr=f(qa,"Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),qa.forEach(t),Ut=c(e),j=a(e,"H2",{class:!0});var $s=l(j);J=a($s,"A",{id:!0,class:!0,href:!0});var Aa=l(J);ot=a(Aa,"SPAN",{});var Ia=l(ot);d(he.$$.fragment,Ia),Ia.forEach(t),Aa.forEach(t),hr=c($s),nt=a($s,"SPAN",{});var Na=l(nt);fr=f(Na,"Programmatic access"),Na.forEach(t),$s.forEach(t),Vt=c(e),z=a(e,"P",{});var ys=l(z);pr=f(ys,"Coming soon in "),fe=a(ys,"A",{href:!0,rel:!0});var xa=l(fe);dr=f(xa,"https://github.com/huggingface/huggingface_hub"),xa.forEach(t),mr=f(ys," \u{1F525}\u{1F525}"),ys.forEach(t),Ft=c(e),H=a(e,"H1",{class:!0});var ws=l(H);K=a(ws,"A",{id:!0,class:!0,href:!0});var Ra=l(K);ut=a(Ra,"SPAN",{});var Sa=l(ut);d(pe.$$.fragment,Sa),Sa.forEach(t),Ra.forEach(t),gr=c(ws),ct=a(ws,"SPAN",{});var Ga=l(ct);vr=f(Ga,"Pull requests advanced usage"),Ga.forEach(t),ws.forEach(t),Tt=c(e),L=a(e,"H2",{class:!0});var ks=l(L);Q=a(ks,"A",{id:!0,class:!0,href:!0});var Ma=l(Q);ht=a(Ma,"SPAN",{});var Da=l(ht);d(de.$$.fragment,Da),Da.forEach(t),Ma.forEach(t),_r=c(ks),ft=a(ks,"SPAN",{});var ja=l(ft);br=f(ja,"Where in the git repo are changes stored?"),ja.forEach(t),ks.forEach(t),Yt=c(e),X=a(e,"P",{});var Es=l(X);$r=f(Es,"Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),pt=a(Es,"CODE",{});var Ha=l(pt);yr=f(Ha,"refs"),Ha.forEach(t),wr=f(Es," that are stored directly on the source repo."),Es.forEach(t),Jt=c(e),me=a(e,"P",{});var jr=l(me);ge=a(jr,"A",{href:!0,rel:!0});var La=l(ge);kr=f(La,"Git References"),La.forEach(t),Er=f(jr," are the internal machinery of git which already stores tags and branches."),jr.forEach(t),zt=c(e),Z=a(e,"P",{});var Ps=l(Z);Pr=f(Ps,"The advantage of using custom refs (like "),dt=a(Ps,"CODE",{});var Oa=l(dt);qr=f(Oa,"refs/pr/42"),Oa.forEach(t),Ar=f(Ps," for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),Ps.forEach(t),Kt=c(e),O=a(e,"H2",{class:!0});var qs=l(O);ee=a(qs,"A",{id:!0,class:!0,href:!0});var Ca=l(ee);mt=a(Ca,"SPAN",{});var Wa=l(mt);d(ve.$$.fragment,Wa),Wa.forEach(t),Ca.forEach(t),Ir=c(qs),gt=a(qs,"SPAN",{});var Ba=l(gt);Nr=f(Ba,"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Ba.forEach(t),qs.forEach(t),Qt=c(e),te=a(e,"P",{});var As=l(te);xr=f(As,"You can tweak your local "),vt=a(As,"STRONG",{});var Ua=l(vt);Rr=f(Ua,"refspec"),Ua.forEach(t),Sr=f(As," to fetch all Pull requests:"),As.forEach(t),Xt=c(e),We=a(e,"OL",{});var Va=l(We);_t=a(Va,"LI",{});var Fa=l(_t);Gr=f(Fa,"Fetch"),Fa.forEach(t),Va.forEach(t),Zt=c(e),d(_e.$$.fragment,e),es=c(e),be=a(e,"OL",{start:!0});var Ta=l(be);bt=a(Ta,"LI",{});var Ya=l(bt);Mr=f(Ya,"create a local branch tracking the ref"),Ya.forEach(t),Ta.forEach(t),ts=c(e),d($e.$$.fragment,e),ss=c(e),ye=a(e,"OL",{start:!0});var Ja=l(ye);$t=a(Ja,"LI",{});var za=l($t);Dr=f(za,"IF you make local changes, to push to the PR ref:"),za.forEach(t),Ja.forEach(t),rs=c(e),d(we.$$.fragment,e),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(ri)),i(C,"id","pull-requests-and-discussions"),i(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(C,"href","#pull-requests-and-discussions"),i(k,"class","relative group"),i(B,"id","list"),i(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(B,"href","#list"),i(E,"class","relative group"),i(Ee,"class","block dark:hidden"),b(Ee.src,Lr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list.png")||i(Ee,"src",Lr),i(Pe,"class","hidden dark:block"),b(Pe.src,Or="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list-dark.png")||i(Pe,"src",Or),i(P,"class","flex justify-center"),i(U,"id","view"),i(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(U,"href","#view"),i(q,"class","relative group"),i(qe,"class","block dark:hidden"),b(qe.src,Cr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view.png")||i(qe,"src",Cr),i(Ae,"class","hidden dark:block"),b(Ae.src,Wr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view-dark.png")||i(Ae,"src",Wr),i(A,"class","flex justify-center"),i(V,"id","editing-a-discussion-pull-request-title"),i(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(V,"href","#editing-a-discussion-pull-request-title"),i(I,"class","relative group"),i(Ne,"class","block dark:hidden"),b(Ne.src,Br="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title.PNG")||i(Ne,"src",Br),i(xe,"class","hidden dark:block"),b(xe.src,Ur="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title-dark.PNG")||i(xe,"src",Ur),i(N,"class","flex justify-center"),i(F,"id","comment-edition-and-moderation"),i(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(F,"href","#comment-edition-and-moderation"),i(x,"class","relative group"),i(Se,"class","block dark:hidden"),b(Se.src,Vr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu.png")||i(Se,"src",Vr),i(Ge,"class","hidden dark:block"),b(Ge.src,Fr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-dark.png")||i(Ge,"src",Fr),i(R,"class","flex justify-center"),i(Me,"class","block dark:hidden"),b(Me.src,Tr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit.png")||i(Me,"src",Tr),i(De,"class","hidden dark:block"),b(De.src,Yr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit-dark.png")||i(De,"src",Yr),i(S,"class","flex justify-center"),i(He,"class","block dark:hidden"),b(He.src,Jr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden.png")||i(He,"src",Jr),i(Le,"class","hidden dark:block"),b(Le.src,zr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden-dark.png")||i(Le,"src",zr),i(G,"class","flex justify-center"),i(T,"id","how-do-i-manage-pull-requests-locally"),i(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(T,"href","#how-do-i-manage-pull-requests-locally"),i(M,"class","relative group"),i(Y,"id","draft-mode"),i(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Y,"href","#draft-mode"),i(D,"class","relative group"),i(J,"id","programmatic-access"),i(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(J,"href","#programmatic-access"),i(j,"class","relative group"),i(fe,"href","https://github.com/huggingface/huggingface_hub"),i(fe,"rel","nofollow"),i(K,"id","pull-requests-advanced-usage"),i(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(K,"href","#pull-requests-advanced-usage"),i(H,"class","relative group"),i(Q,"id","where-in-the-git-repo-are-changes-stored"),i(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Q,"href","#where-in-the-git-repo-are-changes-stored"),i(L,"class","relative group"),i(ge,"href","https://git-scm.com/book/en/v2/Git-Internals-Git-References"),i(ge,"rel","nofollow"),i(ee,"id","fetching-all-pull-requests-for-git-magicians"),i(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ee,"href","#fetching-all-pull-requests-for-git-magicians"),i(O,"class","relative group"),i(be,"start","2"),i(ye,"start","3")},m(e,o){s(document.head,w),n(e,yt,o),n(e,k,o),s(k,C),s(C,Ue),m(se,Ue,null),s(k,Ns),s(k,Ve),s(Ve,xs),n(e,wt,o),n(e,W,o),s(W,Rs),s(W,Fe),s(Fe,Ss),s(W,Gs),n(e,kt,o),n(e,ke,o),s(ke,Ms),n(e,Et,o),n(e,y,o),s(y,re),s(re,Ds),s(re,Te),s(Te,js),s(re,Hs),s(y,Ls),s(y,Ye),s(Ye,Os),s(y,Cs),s(y,Je),s(Je,Ws),n(e,Pt,o),n(e,E,o),s(E,B),s(B,ze),m(ae,ze,null),s(E,Bs),s(E,Ke),s(Ke,Us),n(e,qt,o),n(e,P,o),s(P,Ee),s(P,Vs),s(P,Pe),n(e,At,o),n(e,q,o),s(q,U),s(U,Qe),m(ie,Qe,null),s(q,Fs),s(q,Xe),s(Xe,Ts),n(e,It,o),n(e,A,o),s(A,qe),s(A,Ys),s(A,Ae),n(e,Nt,o),n(e,I,o),s(I,V),s(V,Ze),m(le,Ze,null),s(I,Js),s(I,et),s(et,zs),n(e,xt,o),n(e,Ie,o),s(Ie,Ks),n(e,Rt,o),n(e,N,o),s(N,Ne),s(N,Qs),s(N,xe),n(e,St,o),n(e,x,o),s(x,F),s(F,tt),m(oe,tt,null),s(x,Xs),s(x,st),s(st,Zs),n(e,Gt,o),n(e,Re,o),s(Re,er),n(e,Mt,o),n(e,R,o),s(R,Se),s(R,tr),s(R,Ge),n(e,Dt,o),n(e,S,o),s(S,Me),s(S,sr),s(S,De),n(e,jt,o),n(e,je,o),s(je,rr),n(e,Ht,o),n(e,G,o),s(G,He),s(G,ar),s(G,Le),n(e,Lt,o),n(e,M,o),s(M,T),s(T,rt),m(ne,rt,null),s(M,ir),s(M,at),s(at,lr),n(e,Ot,o),n(e,Oe,o),s(Oe,or),n(e,Ct,o),m(ue,e,o),n(e,Wt,o),n(e,D,o),s(D,Y),s(Y,it),m(ce,it,null),s(D,nr),s(D,lt),s(lt,ur),n(e,Bt,o),n(e,Ce,o),s(Ce,cr),n(e,Ut,o),n(e,j,o),s(j,J),s(J,ot),m(he,ot,null),s(j,hr),s(j,nt),s(nt,fr),n(e,Vt,o),n(e,z,o),s(z,pr),s(z,fe),s(fe,dr),s(z,mr),n(e,Ft,o),n(e,H,o),s(H,K),s(K,ut),m(pe,ut,null),s(H,gr),s(H,ct),s(ct,vr),n(e,Tt,o),n(e,L,o),s(L,Q),s(Q,ht),m(de,ht,null),s(L,_r),s(L,ft),s(ft,br),n(e,Yt,o),n(e,X,o),s(X,$r),s(X,pt),s(pt,yr),s(X,wr),n(e,Jt,o),n(e,me,o),s(me,ge),s(ge,kr),s(me,Er),n(e,zt,o),n(e,Z,o),s(Z,Pr),s(Z,dt),s(dt,qr),s(Z,Ar),n(e,Kt,o),n(e,O,o),s(O,ee),s(ee,mt),m(ve,mt,null),s(O,Ir),s(O,gt),s(gt,Nr),n(e,Qt,o),n(e,te,o),s(te,xr),s(te,vt),s(vt,Rr),s(te,Sr),n(e,Xt,o),n(e,We,o),s(We,_t),s(_t,Gr),n(e,Zt,o),m(_e,e,o),n(e,es,o),n(e,be,o),s(be,bt),s(bt,Mr),n(e,ts,o),m($e,e,o),n(e,ss,o),n(e,ye,o),s(ye,$t),s($t,Dr),n(e,rs,o),m(we,e,o),as=!0},p:ei,i(e){as||(g(se.$$.fragment,e),g(ae.$$.fragment,e),g(ie.$$.fragment,e),g(le.$$.fragment,e),g(oe.$$.fragment,e),g(ne.$$.fragment,e),g(ue.$$.fragment,e),g(ce.$$.fragment,e),g(he.$$.fragment,e),g(pe.$$.fragment,e),g(de.$$.fragment,e),g(ve.$$.fragment,e),g(_e.$$.fragment,e),g($e.$$.fragment,e),g(we.$$.fragment,e),as=!0)},o(e){v(se.$$.fragment,e),v(ae.$$.fragment,e),v(ie.$$.fragment,e),v(le.$$.fragment,e),v(oe.$$.fragment,e),v(ne.$$.fragment,e),v(ue.$$.fragment,e),v(ce.$$.fragment,e),v(he.$$.fragment,e),v(pe.$$.fragment,e),v(de.$$.fragment,e),v(ve.$$.fragment,e),v(_e.$$.fragment,e),v($e.$$.fragment,e),v(we.$$.fragment,e),as=!1},d(e){t(w),e&&t(yt),e&&t(k),_(se),e&&t(wt),e&&t(W),e&&t(kt),e&&t(ke),e&&t(Et),e&&t(y),e&&t(Pt),e&&t(E),_(ae),e&&t(qt),e&&t(P),e&&t(At),e&&t(q),_(ie),e&&t(It),e&&t(A),e&&t(Nt),e&&t(I),_(le),e&&t(xt),e&&t(Ie),e&&t(Rt),e&&t(N),e&&t(St),e&&t(x),_(oe),e&&t(Gt),e&&t(Re),e&&t(Mt),e&&t(R),e&&t(Dt),e&&t(S),e&&t(jt),e&&t(je),e&&t(Ht),e&&t(G),e&&t(Lt),e&&t(M),_(ne),e&&t(Ot),e&&t(Oe),e&&t(Ct),_(ue,e),e&&t(Wt),e&&t(D),_(ce),e&&t(Bt),e&&t(Ce),e&&t(Ut),e&&t(j),_(he),e&&t(Vt),e&&t(z),e&&t(Ft),e&&t(H),_(pe),e&&t(Tt),e&&t(L),_(de),e&&t(Yt),e&&t(X),e&&t(Jt),e&&t(me),e&&t(zt),e&&t(Z),e&&t(Kt),e&&t(O),_(ve),e&&t(Qt),e&&t(te),e&&t(Xt),e&&t(We),e&&t(Zt),_(_e,e),e&&t(es),e&&t(be),e&&t(ts),_($e,e),e&&t(ss),e&&t(ye),e&&t(rs),_(we,e)}}}const ri={local:"pull-requests-advanced-usage",sections:[{local:"where-in-the-git-repo-are-changes-stored",title:"Where in the git repo are changes stored?"},{local:"fetching-all-pull-requests-for-git-magicians",title:"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"}],title:"Pull requests advanced usage"};function ai(Hr){return ti(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ni extends Ka{constructor(w){super();Qa(this,w,ai,si,Xa,{})}}export{ni as default,ri as metadata};
