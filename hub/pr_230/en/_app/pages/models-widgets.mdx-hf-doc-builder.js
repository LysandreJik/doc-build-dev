import{S as tn,i as an,s as sn,e as s,k as p,w as x,t as r,N as ln,c as l,d as a,m as h,a as o,x as k,h as i,b as n,P as en,G as e,g as f,y as $,L as on,q as j,o as A,B as C,v as rn}from"../chunks/vendor-hf-doc-builder.js";import{I as dt}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as mt}from"../chunks/CodeBlock-hf-doc-builder.js";function nn(cr){let P,wa,O,M,ut,se,ys,gt,bs,va,D,R,wt,le,xs,vt,ks,_a,Qe,$s,Ea,Xe,js,ya,v,F,oe,As,Cs,re,Is,Ps,Os,ie,ne,Ds,Ss,ce,qs,Hs,z,fe,Ts,Ls,pe,Ns,Ws,Ms,Y,he,Rs,Fs,de,zs,Ys,ba,B,Bs,me,Gs,Us,xa,S,G,_t,ue,Js,Et,Ks,ka,u,Vs,yt,Qs,Xs,bt,Zs,el,xt,tl,al,kt,sl,ll,$t,ol,rl,$a,w,il,jt,nl,cl,Ze,fl,pl,At,hl,dl,Ct,ml,ul,ja,g,gl,It,wl,vl,Pt,_l,El,Ot,yl,bl,Dt,xl,kl,ge,$l,jl,Aa,et,q,Al,St,Cl,Il,tt,Pl,Ol,Ca,H,U,qt,we,Dl,Ht,Sl,Ia,at,ql,Pa,ve,Oa,_,Hl,Tt,Tl,Ll,Lt,Nl,Wl,Nt,Ml,Rl,Da,T,_e,fr,Fl,Ee,pr,Sa,ye,qa,E,zl,st,Yl,Bl,Wt,Gl,Ul,Mt,Jl,Kl,Ha,lt,Vl,Ta,be,La,ot,Ql,Na,xe,Wa,J,Xl,ke,Zl,eo,Ma,L,K,Rt,$e,to,Ft,ao,Ra,V,so,je,lo,oo,Fa,rt,ro,za,d,Ae,zt,io,no,Ce,Yt,co,fo,Ie,Bt,po,ho,Pe,Gt,mo,uo,Oe,Ut,go,wo,De,Jt,vo,_o,Se,Kt,Eo,yo,qe,Vt,bo,xo,He,Qt,ko,$o,Te,Xt,jo,Ao,Le,Zt,Co,Io,Ne,ea,Po,Oo,We,ta,Do,So,Me,aa,qo,Ho,Re,sa,To,Lo,Fe,la,No,Wo,N,oa,Mo,Ro,ra,Fo,zo,ze,ia,Yo,Bo,Ye,na,Go,Uo,Be,ca,Jo,Ko,Ge,fa,Vo,Qo,it,pa,Xo,Ya,W,Q,ha,Ue,Zo,da,er,Ba,X,tr,Je,ar,sr,Ga,nt,lr,Ua,Ke,Ja,ct,or,Ka,Ve,Va,Z,rr,ft,ir,nr,Qa;return se=new dt({}),le=new dt({}),ue=new dt({}),we=new dt({}),ve=new mt({props:{code:`widget:
- text: "Jens Peter Hansen kommer fra Danmark"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Jens Peter Hansen kommer fra Danmark&quot;</span>`}}),ye=new mt({props:{code:`widget:
- text: "Is this review positive or negative? Review: Best cast iron skillet you will ever buy."
  example_title: "Sentiment analysis"
- text: "Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ..."
  example_title: "Coreference resolution"
- text: "On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ..."
  example_title: "Logic puzzles"
- text: "The two men running to become New York City's next mayor will face off in their first debate Wednesday night ..."
  example_title: "Reading comprehension"`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Is this review positive or negative? Review: Best cast iron skillet you will ever buy.&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Sentiment analysis&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Barack Obama nominated Hilary Clinton as his secretary of state on Monday. He chose her because she had ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Coreference resolution&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;On a shelf, there are five books: a gray book, a red book, a purple book, a blue book, and a black book ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Logic puzzles&quot;</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;The two men running to become New York City&#x27;s next mayor will face off in their first debate Wednesday night ...&quot;</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">&quot;Reading comprehension&quot;</span>`}}),be=new mt({props:{code:`widget:
- src: https://example.org/somewhere/speech_samples/sample1.flac
  example_title: Speech sample 1
- src: https://example.org/somewhere/speech_samples/sample2.flac
  example_title: Speech sample 2`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">1</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://example.org/somewhere/speech_samples/sample2.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Speech</span> <span class="hljs-string">sample</span> <span class="hljs-number">2</span>`}}),xe=new mt({props:{code:`widget:
- src: https://huggingface.co/username/model_repo/resolve/main/sample1.flac
  example_title: Custom Speech Sample 1`,highlighted:`<span class="hljs-attr">widget:</span>
<span class="hljs-bullet">-</span> <span class="hljs-attr">src:</span> <span class="hljs-string">https://huggingface.co/username/model_repo/resolve/main/sample1.flac</span>
  <span class="hljs-attr">example_title:</span> <span class="hljs-string">Custom</span> <span class="hljs-string">Speech</span> <span class="hljs-string">Sample</span> <span class="hljs-number">1</span>`}}),$e=new dt({}),Ue=new dt({}),Ke=new mt({props:{code:`inference:
  parameters:
    aggregation_strategy: "none"`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">aggregation_strategy:</span> <span class="hljs-string">&quot;none&quot;</span>`}}),Ve=new mt({props:{code:`inference:
  parameters:
    temperature: 0.7`,highlighted:`<span class="hljs-attr">inference:</span>
  <span class="hljs-attr">parameters:</span>
    <span class="hljs-attr">temperature:</span> <span class="hljs-number">0.7</span>`}}),{c(){P=s("meta"),wa=p(),O=s("h1"),M=s("a"),ut=s("span"),x(se.$$.fragment),ys=p(),gt=s("span"),bs=r("Widgets"),va=p(),D=s("h2"),R=s("a"),wt=s("span"),x(le.$$.fragment),xs=p(),vt=s("span"),ks=r("What's a widget?"),_a=p(),Qe=s("p"),$s=r("Many model repos have a widget that allows anyone to run inferences directly in the browser!"),Ea=p(),Xe=s("p"),js=r("Here are some examples:"),ya=p(),v=s("ul"),F=s("li"),oe=s("a"),As=r("Named Entity Recognition"),Cs=r(" using "),re=s("a"),Is=r("spaCy"),Ps=r("."),Os=p(),ie=s("li"),ne=s("a"),Ds=r("Image Classification"),Ss=r(" using "),ce=s("a"),qs=r("\u{1F917} Transformers"),Hs=p(),z=s("li"),fe=s("a"),Ts=r("Text to Speech"),Ls=r(" using "),pe=s("a"),Ns=r("ESPnet"),Ws=r("."),Ms=p(),Y=s("li"),he=s("a"),Rs=r("Sentence Similarity"),Fs=r(" using "),de=s("a"),zs=r("Sentence Transformers"),Ys=r("."),ba=p(),B=s("p"),Bs=r("You can try out all the widgets "),me=s("a"),Gs=r("here"),Us=r("."),xa=p(),S=s("h2"),G=s("a"),_t=s("span"),x(ue.$$.fragment),Js=p(),Et=s("span"),Ks=r("Enabling a widget"),ka=p(),u=s("p"),Vs=r("A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),yt=s("code"),Qs=r("text-classification"),Xs=r(", "),bt=s("code"),Zs=r("token-classification"),el=r(", "),xt=s("code"),tl=r("translation"),al=r(", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),kt=s("code"),sl=r("pipeline_tag"),ll=r(". We choose to expose "),$t=s("strong"),ol=r("only one"),rl=r(" widget per model for simplicity."),$a=p(),w=s("p"),il=r("For most use cases, we determine the model type from the tags. For example, if there is "),jt=s("code"),nl=r("tag: text-classification"),cl=r(" in the "),Ze=s("a"),fl=r("model card metadata"),pl=r(", the inferred "),At=s("code"),hl=r("pipeline_tag"),dl=r(" will be "),Ct=s("code"),ml=r("text-classification"),ul=r("."),ja=p(),g=s("p"),gl=r("For some libraries, such as \u{1F917}  "),It=s("code"),wl=r("Transformers"),vl=r(", the model type might be inferred automatically based from configuration files ("),Pt=s("code"),_l=r("config.json"),El=r("). The architecture can determine the type: for example, "),Ot=s("code"),yl=r("AutoModelForTokenClassification"),bl=r(" corresponds to "),Dt=s("code"),xl=r("token-classification"),kl=r(". If you\u2019re interested in this, you can see pseudo-code in "),ge=s("a"),$l=r("this gist"),jl=r("."),Aa=p(),et=s("p"),q=s("strong"),Al=r("You can always manually override your pipeline type with "),St=s("code"),Cl=r("pipeline_tag: xxx"),Il=r(" in your "),tt=s("a"),Pl=r("model card metadata"),Ol=r("."),Ca=p(),H=s("h3"),U=s("a"),qt=s("span"),x(we.$$.fragment),Dl=p(),Ht=s("span"),Sl=r("How can I control my model's widget example input?"),Ia=p(),at=s("p"),ql=r("You can specify the widget input in the model card metadata section:"),Pa=p(),x(ve.$$.fragment),Oa=p(),_=s("p"),Hl=r("You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),Tt=s("code"),Tl=r("Example 1"),Ll=r(", "),Lt=s("code"),Nl=r("Example 2"),Wl=r(", etc. Optionally, you can supply "),Nt=s("code"),Ml=r("example_title"),Rl=r(" as well."),Da=p(),T=s("div"),_e=s("img"),Fl=p(),Ee=s("img"),Sa=p(),x(ye.$$.fragment),qa=p(),E=s("p"),zl=r("Moreover, you can specify non-text example inputs in the model card metadata. Refer "),st=s("a"),Yl=r("here"),Bl=r(" for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Wt=s("code"),Gl=r("src"),Ul=r(" rather than "),Mt=s("code"),Jl=r("text"),Kl=r("."),Ha=p(),lt=s("p"),Vl=r("For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),Ta=p(),x(be.$$.fragment),La=p(),ot=s("p"),Ql=r(`Note that you can also include example files in your model repository and use
them as:`),Na=p(),x(xe.$$.fragment),Wa=p(),J=s("p"),Xl=r("We provide example inputs for some languages and most widget types in "),ke=s("a"),Zl=r("the DefaultWidget.ts file"),eo=r(". If some examples are missing, we welcome PRs from the community to add them!"),Ma=p(),L=s("h2"),K=s("a"),Rt=s("span"),x($e.$$.fragment),to=p(),Ft=s("span"),ao=r("What are all the possible task/widget types?"),Ra=p(),V=s("p"),so=r("You can find all the supported tasks "),je=s("a"),lo=r("here"),oo=r("."),Fa=p(),rt=s("p"),ro=r("Here are some links to examples:"),za=p(),d=s("ul"),Ae=s("li"),zt=s("code"),io=r("text-classification"),no=r(", for instance "),Ce=s("a"),Yt=s("code"),co=r("roberta-large-mnli"),fo=p(),Ie=s("li"),Bt=s("code"),po=r("token-classification"),ho=r(", for instance "),Pe=s("a"),Gt=s("code"),mo=r("dbmdz/bert-large-cased-finetuned-conll03-english"),uo=p(),Oe=s("li"),Ut=s("code"),go=r("question-answering"),wo=r(", for instance "),De=s("a"),Jt=s("code"),vo=r("distilbert-base-uncased-distilled-squad"),_o=p(),Se=s("li"),Kt=s("code"),Eo=r("translation"),yo=r(", for instance "),qe=s("a"),Vt=s("code"),bo=r("t5-base"),xo=p(),He=s("li"),Qt=s("code"),ko=r("summarization"),$o=r(", for instance "),Te=s("a"),Xt=s("code"),jo=r("facebook/bart-large-cnn"),Ao=p(),Le=s("li"),Zt=s("code"),Co=r("conversational"),Io=r(", for instance "),Ne=s("a"),ea=s("code"),Po=r("facebook/blenderbot-400M-distill"),Oo=p(),We=s("li"),ta=s("code"),Do=r("text-generation"),So=r(", for instance "),Me=s("a"),aa=s("code"),qo=r("gpt2"),Ho=p(),Re=s("li"),sa=s("code"),To=r("fill-mask"),Lo=r(", for instance "),Fe=s("a"),la=s("code"),No=r("distilroberta-base"),Wo=p(),N=s("li"),oa=s("code"),Mo=r("zero-shot-classification"),Ro=r(" (implemented on top of a nli "),ra=s("code"),Fo=r("text-classification"),zo=r(" model), for instance "),ze=s("a"),ia=s("code"),Yo=r("facebook/bart-large-mnli"),Bo=p(),Ye=s("li"),na=s("code"),Go=r("table-question-answering"),Uo=r(", for instance "),Be=s("a"),ca=s("code"),Jo=r("google/tapas-base-finetuned-wtq"),Ko=p(),Ge=s("li"),fa=s("code"),Vo=r("sentence-similarity"),Qo=r(", for instance "),it=s("a"),pa=s("code"),Xo=r("osanseviero/full-sentence-distillroberta2"),Ya=p(),W=s("h2"),Q=s("a"),ha=s("span"),x(Ue.$$.fragment),Zo=p(),da=s("span"),er=r("How can I control my model's widget Inference API parameters?"),Ba=p(),X=s("p"),tr=r("Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Je=s("a"),ar=r("here"),sr=r(" for some of the most commonly used parameters associated with each task."),Ga=p(),nt=s("p"),lr=r("For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Ua=p(),x(Ke.$$.fragment),Ja=p(),ct=s("p"),or=r("Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Ka=p(),x(Ve.$$.fragment),Va=p(),Z=s("p"),rr=r("The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),ft=s("a"),ir=r("Inference API documentation"),nr=r("."),this.h()},l(t){const c=ln('[data-svelte="svelte-1phssyn"]',document.head);P=l(c,"META",{name:!0,content:!0}),c.forEach(a),wa=h(t),O=l(t,"H1",{class:!0});var Xa=o(O);M=l(Xa,"A",{id:!0,class:!0,href:!0});var hr=o(M);ut=l(hr,"SPAN",{});var dr=o(ut);k(se.$$.fragment,dr),dr.forEach(a),hr.forEach(a),ys=h(Xa),gt=l(Xa,"SPAN",{});var mr=o(gt);bs=i(mr,"Widgets"),mr.forEach(a),Xa.forEach(a),va=h(t),D=l(t,"H2",{class:!0});var Za=o(D);R=l(Za,"A",{id:!0,class:!0,href:!0});var ur=o(R);wt=l(ur,"SPAN",{});var gr=o(wt);k(le.$$.fragment,gr),gr.forEach(a),ur.forEach(a),xs=h(Za),vt=l(Za,"SPAN",{});var wr=o(vt);ks=i(wr,"What's a widget?"),wr.forEach(a),Za.forEach(a),_a=h(t),Qe=l(t,"P",{});var vr=o(Qe);$s=i(vr,"Many model repos have a widget that allows anyone to run inferences directly in the browser!"),vr.forEach(a),Ea=h(t),Xe=l(t,"P",{});var _r=o(Xe);js=i(_r,"Here are some examples:"),_r.forEach(a),ya=h(t),v=l(t,"UL",{});var ee=o(v);F=l(ee,"LI",{});var ma=o(F);oe=l(ma,"A",{href:!0,rel:!0});var Er=o(oe);As=i(Er,"Named Entity Recognition"),Er.forEach(a),Cs=i(ma," using "),re=l(ma,"A",{href:!0,rel:!0});var yr=o(re);Is=i(yr,"spaCy"),yr.forEach(a),Ps=i(ma,"."),ma.forEach(a),Os=h(ee),ie=l(ee,"LI",{});var es=o(ie);ne=l(es,"A",{href:!0,rel:!0});var br=o(ne);Ds=i(br,"Image Classification"),br.forEach(a),Ss=i(es," using "),ce=l(es,"A",{href:!0,rel:!0});var xr=o(ce);qs=i(xr,"\u{1F917} Transformers"),xr.forEach(a),es.forEach(a),Hs=h(ee),z=l(ee,"LI",{});var ua=o(z);fe=l(ua,"A",{href:!0,rel:!0});var kr=o(fe);Ts=i(kr,"Text to Speech"),kr.forEach(a),Ls=i(ua," using "),pe=l(ua,"A",{href:!0,rel:!0});var $r=o(pe);Ns=i($r,"ESPnet"),$r.forEach(a),Ws=i(ua,"."),ua.forEach(a),Ms=h(ee),Y=l(ee,"LI",{});var ga=o(Y);he=l(ga,"A",{href:!0,rel:!0});var jr=o(he);Rs=i(jr,"Sentence Similarity"),jr.forEach(a),Fs=i(ga," using "),de=l(ga,"A",{href:!0,rel:!0});var Ar=o(de);zs=i(Ar,"Sentence Transformers"),Ar.forEach(a),Ys=i(ga,"."),ga.forEach(a),ee.forEach(a),ba=h(t),B=l(t,"P",{});var ts=o(B);Bs=i(ts,"You can try out all the widgets "),me=l(ts,"A",{href:!0,rel:!0});var Cr=o(me);Gs=i(Cr,"here"),Cr.forEach(a),Us=i(ts,"."),ts.forEach(a),xa=h(t),S=l(t,"H2",{class:!0});var as=o(S);G=l(as,"A",{id:!0,class:!0,href:!0});var Ir=o(G);_t=l(Ir,"SPAN",{});var Pr=o(_t);k(ue.$$.fragment,Pr),Pr.forEach(a),Ir.forEach(a),Js=h(as),Et=l(as,"SPAN",{});var Or=o(Et);Ks=i(Or,"Enabling a widget"),Or.forEach(a),as.forEach(a),ka=h(t),u=l(t,"P",{});var y=o(u);Vs=i(y,"A widget is automatically created for your model when you upload it to the Hub. To determine which pipeline and widget to display ("),yt=l(y,"CODE",{});var Dr=o(yt);Qs=i(Dr,"text-classification"),Dr.forEach(a),Xs=i(y,", "),bt=l(y,"CODE",{});var Sr=o(bt);Zs=i(Sr,"token-classification"),Sr.forEach(a),el=i(y,", "),xt=l(y,"CODE",{});var qr=o(xt);tl=i(qr,"translation"),qr.forEach(a),al=i(y,", etc.), we analyze information in the repo, such as the metadata provided in the model card and configuration files. This information is mapped to a single "),kt=l(y,"CODE",{});var Hr=o(kt);sl=i(Hr,"pipeline_tag"),Hr.forEach(a),ll=i(y,". We choose to expose "),$t=l(y,"STRONG",{});var Tr=o($t);ol=i(Tr,"only one"),Tr.forEach(a),rl=i(y," widget per model for simplicity."),y.forEach(a),$a=h(t),w=l(t,"P",{});var I=o(w);il=i(I,"For most use cases, we determine the model type from the tags. For example, if there is "),jt=l(I,"CODE",{});var Lr=o(jt);nl=i(Lr,"tag: text-classification"),Lr.forEach(a),cl=i(I," in the "),Ze=l(I,"A",{href:!0});var Nr=o(Ze);fl=i(Nr,"model card metadata"),Nr.forEach(a),pl=i(I,", the inferred "),At=l(I,"CODE",{});var Wr=o(At);hl=i(Wr,"pipeline_tag"),Wr.forEach(a),dl=i(I," will be "),Ct=l(I,"CODE",{});var Mr=o(Ct);ml=i(Mr,"text-classification"),Mr.forEach(a),ul=i(I,"."),I.forEach(a),ja=h(t),g=l(t,"P",{});var b=o(g);gl=i(b,"For some libraries, such as \u{1F917}  "),It=l(b,"CODE",{});var Rr=o(It);wl=i(Rr,"Transformers"),Rr.forEach(a),vl=i(b,", the model type might be inferred automatically based from configuration files ("),Pt=l(b,"CODE",{});var Fr=o(Pt);_l=i(Fr,"config.json"),Fr.forEach(a),El=i(b,"). The architecture can determine the type: for example, "),Ot=l(b,"CODE",{});var zr=o(Ot);yl=i(zr,"AutoModelForTokenClassification"),zr.forEach(a),bl=i(b," corresponds to "),Dt=l(b,"CODE",{});var Yr=o(Dt);xl=i(Yr,"token-classification"),Yr.forEach(a),kl=i(b,". If you\u2019re interested in this, you can see pseudo-code in "),ge=l(b,"A",{href:!0,rel:!0});var Br=o(ge);$l=i(Br,"this gist"),Br.forEach(a),jl=i(b,"."),b.forEach(a),Aa=h(t),et=l(t,"P",{});var Gr=o(et);q=l(Gr,"STRONG",{});var pt=o(q);Al=i(pt,"You can always manually override your pipeline type with "),St=l(pt,"CODE",{});var Ur=o(St);Cl=i(Ur,"pipeline_tag: xxx"),Ur.forEach(a),Il=i(pt," in your "),tt=l(pt,"A",{href:!0});var Jr=o(tt);Pl=i(Jr,"model card metadata"),Jr.forEach(a),Ol=i(pt,"."),pt.forEach(a),Gr.forEach(a),Ca=h(t),H=l(t,"H3",{class:!0});var ss=o(H);U=l(ss,"A",{id:!0,class:!0,href:!0});var Kr=o(U);qt=l(Kr,"SPAN",{});var Vr=o(qt);k(we.$$.fragment,Vr),Vr.forEach(a),Kr.forEach(a),Dl=h(ss),Ht=l(ss,"SPAN",{});var Qr=o(Ht);Sl=i(Qr,"How can I control my model's widget example input?"),Qr.forEach(a),ss.forEach(a),Ia=h(t),at=l(t,"P",{});var Xr=o(at);ql=i(Xr,"You can specify the widget input in the model card metadata section:"),Xr.forEach(a),Pa=h(t),k(ve.$$.fragment,t),Oa=h(t),_=l(t,"P",{});var te=o(_);Hl=i(te,"You can provide more than one example input. In the examples dropdown menu of the widget, they will appear as "),Tt=l(te,"CODE",{});var Zr=o(Tt);Tl=i(Zr,"Example 1"),Zr.forEach(a),Ll=i(te,", "),Lt=l(te,"CODE",{});var ei=o(Lt);Nl=i(ei,"Example 2"),ei.forEach(a),Wl=i(te,", etc. Optionally, you can supply "),Nt=l(te,"CODE",{});var ti=o(Nt);Ml=i(ti,"example_title"),ti.forEach(a),Rl=i(te," as well."),te.forEach(a),Da=h(t),T=l(t,"DIV",{class:!0});var ls=o(T);_e=l(ls,"IMG",{class:!0,width:!0,src:!0}),Fl=h(ls),Ee=l(ls,"IMG",{class:!0,width:!0,src:!0}),ls.forEach(a),Sa=h(t),k(ye.$$.fragment,t),qa=h(t),E=l(t,"P",{});var ae=o(E);zl=i(ae,"Moreover, you can specify non-text example inputs in the model card metadata. Refer "),st=l(ae,"A",{href:!0});var ai=o(st);Yl=i(ai,"here"),ai.forEach(a),Bl=i(ae," for a complete list of sample input formats for all widget types. For vision & audio widget types, provide example inputs with "),Wt=l(ae,"CODE",{});var si=o(Wt);Gl=i(si,"src"),si.forEach(a),Ul=i(ae," rather than "),Mt=l(ae,"CODE",{});var li=o(Mt);Jl=i(li,"text"),li.forEach(a),Kl=i(ae,"."),ae.forEach(a),Ha=h(t),lt=l(t,"P",{});var oi=o(lt);Vl=i(oi,"For example, allow users to choose from two sample audio files for automatic speech recognition tasks by:"),oi.forEach(a),Ta=h(t),k(be.$$.fragment,t),La=h(t),ot=l(t,"P",{});var ri=o(ot);Ql=i(ri,`Note that you can also include example files in your model repository and use
them as:`),ri.forEach(a),Na=h(t),k(xe.$$.fragment,t),Wa=h(t),J=l(t,"P",{});var os=o(J);Xl=i(os,"We provide example inputs for some languages and most widget types in "),ke=l(os,"A",{href:!0,rel:!0});var ii=o(ke);Zl=i(ii,"the DefaultWidget.ts file"),ii.forEach(a),eo=i(os,". If some examples are missing, we welcome PRs from the community to add them!"),os.forEach(a),Ma=h(t),L=l(t,"H2",{class:!0});var rs=o(L);K=l(rs,"A",{id:!0,class:!0,href:!0});var ni=o(K);Rt=l(ni,"SPAN",{});var ci=o(Rt);k($e.$$.fragment,ci),ci.forEach(a),ni.forEach(a),to=h(rs),Ft=l(rs,"SPAN",{});var fi=o(Ft);ao=i(fi,"What are all the possible task/widget types?"),fi.forEach(a),rs.forEach(a),Ra=h(t),V=l(t,"P",{});var is=o(V);so=i(is,"You can find all the supported tasks "),je=l(is,"A",{href:!0,rel:!0});var pi=o(je);lo=i(pi,"here"),pi.forEach(a),oo=i(is,"."),is.forEach(a),Fa=h(t),rt=l(t,"P",{});var hi=o(rt);ro=i(hi,"Here are some links to examples:"),hi.forEach(a),za=h(t),d=l(t,"UL",{});var m=o(d);Ae=l(m,"LI",{});var ns=o(Ae);zt=l(ns,"CODE",{});var di=o(zt);io=i(di,"text-classification"),di.forEach(a),no=i(ns,", for instance "),Ce=l(ns,"A",{href:!0,rel:!0});var mi=o(Ce);Yt=l(mi,"CODE",{});var ui=o(Yt);co=i(ui,"roberta-large-mnli"),ui.forEach(a),mi.forEach(a),ns.forEach(a),fo=h(m),Ie=l(m,"LI",{});var cs=o(Ie);Bt=l(cs,"CODE",{});var gi=o(Bt);po=i(gi,"token-classification"),gi.forEach(a),ho=i(cs,", for instance "),Pe=l(cs,"A",{href:!0,rel:!0});var wi=o(Pe);Gt=l(wi,"CODE",{});var vi=o(Gt);mo=i(vi,"dbmdz/bert-large-cased-finetuned-conll03-english"),vi.forEach(a),wi.forEach(a),cs.forEach(a),uo=h(m),Oe=l(m,"LI",{});var fs=o(Oe);Ut=l(fs,"CODE",{});var _i=o(Ut);go=i(_i,"question-answering"),_i.forEach(a),wo=i(fs,", for instance "),De=l(fs,"A",{href:!0,rel:!0});var Ei=o(De);Jt=l(Ei,"CODE",{});var yi=o(Jt);vo=i(yi,"distilbert-base-uncased-distilled-squad"),yi.forEach(a),Ei.forEach(a),fs.forEach(a),_o=h(m),Se=l(m,"LI",{});var ps=o(Se);Kt=l(ps,"CODE",{});var bi=o(Kt);Eo=i(bi,"translation"),bi.forEach(a),yo=i(ps,", for instance "),qe=l(ps,"A",{href:!0,rel:!0});var xi=o(qe);Vt=l(xi,"CODE",{});var ki=o(Vt);bo=i(ki,"t5-base"),ki.forEach(a),xi.forEach(a),ps.forEach(a),xo=h(m),He=l(m,"LI",{});var hs=o(He);Qt=l(hs,"CODE",{});var $i=o(Qt);ko=i($i,"summarization"),$i.forEach(a),$o=i(hs,", for instance "),Te=l(hs,"A",{href:!0,rel:!0});var ji=o(Te);Xt=l(ji,"CODE",{});var Ai=o(Xt);jo=i(Ai,"facebook/bart-large-cnn"),Ai.forEach(a),ji.forEach(a),hs.forEach(a),Ao=h(m),Le=l(m,"LI",{});var ds=o(Le);Zt=l(ds,"CODE",{});var Ci=o(Zt);Co=i(Ci,"conversational"),Ci.forEach(a),Io=i(ds,", for instance "),Ne=l(ds,"A",{href:!0,rel:!0});var Ii=o(Ne);ea=l(Ii,"CODE",{});var Pi=o(ea);Po=i(Pi,"facebook/blenderbot-400M-distill"),Pi.forEach(a),Ii.forEach(a),ds.forEach(a),Oo=h(m),We=l(m,"LI",{});var ms=o(We);ta=l(ms,"CODE",{});var Oi=o(ta);Do=i(Oi,"text-generation"),Oi.forEach(a),So=i(ms,", for instance "),Me=l(ms,"A",{href:!0,rel:!0});var Di=o(Me);aa=l(Di,"CODE",{});var Si=o(aa);qo=i(Si,"gpt2"),Si.forEach(a),Di.forEach(a),ms.forEach(a),Ho=h(m),Re=l(m,"LI",{});var us=o(Re);sa=l(us,"CODE",{});var qi=o(sa);To=i(qi,"fill-mask"),qi.forEach(a),Lo=i(us,", for instance "),Fe=l(us,"A",{href:!0,rel:!0});var Hi=o(Fe);la=l(Hi,"CODE",{});var Ti=o(la);No=i(Ti,"distilroberta-base"),Ti.forEach(a),Hi.forEach(a),us.forEach(a),Wo=h(m),N=l(m,"LI",{});var ht=o(N);oa=l(ht,"CODE",{});var Li=o(oa);Mo=i(Li,"zero-shot-classification"),Li.forEach(a),Ro=i(ht," (implemented on top of a nli "),ra=l(ht,"CODE",{});var Ni=o(ra);Fo=i(Ni,"text-classification"),Ni.forEach(a),zo=i(ht," model), for instance "),ze=l(ht,"A",{href:!0,rel:!0});var Wi=o(ze);ia=l(Wi,"CODE",{});var Mi=o(ia);Yo=i(Mi,"facebook/bart-large-mnli"),Mi.forEach(a),Wi.forEach(a),ht.forEach(a),Bo=h(m),Ye=l(m,"LI",{});var gs=o(Ye);na=l(gs,"CODE",{});var Ri=o(na);Go=i(Ri,"table-question-answering"),Ri.forEach(a),Uo=i(gs,", for instance "),Be=l(gs,"A",{href:!0,rel:!0});var Fi=o(Be);ca=l(Fi,"CODE",{});var zi=o(ca);Jo=i(zi,"google/tapas-base-finetuned-wtq"),zi.forEach(a),Fi.forEach(a),gs.forEach(a),Ko=h(m),Ge=l(m,"LI",{});var ws=o(Ge);fa=l(ws,"CODE",{});var Yi=o(fa);Vo=i(Yi,"sentence-similarity"),Yi.forEach(a),Qo=i(ws,", for instance "),it=l(ws,"A",{href:!0});var Bi=o(it);pa=l(Bi,"CODE",{});var Gi=o(pa);Xo=i(Gi,"osanseviero/full-sentence-distillroberta2"),Gi.forEach(a),Bi.forEach(a),ws.forEach(a),m.forEach(a),Ya=h(t),W=l(t,"H2",{class:!0});var vs=o(W);Q=l(vs,"A",{id:!0,class:!0,href:!0});var Ui=o(Q);ha=l(Ui,"SPAN",{});var Ji=o(ha);k(Ue.$$.fragment,Ji),Ji.forEach(a),Ui.forEach(a),Zo=h(vs),da=l(vs,"SPAN",{});var Ki=o(da);er=i(Ki,"How can I control my model's widget Inference API parameters?"),Ki.forEach(a),vs.forEach(a),Ba=h(t),X=l(t,"P",{});var _s=o(X);tr=i(_s,"Generally, the Inference API for a model uses the default pipeline settings associated with each task. But if you\u2019d like to change the pipeline\u2019s default settings and specify additional inference parameters, you can configure the parameters directly through the model card metadata. Refer "),Je=l(_s,"A",{href:!0,rel:!0});var Vi=o(Je);ar=i(Vi,"here"),Vi.forEach(a),sr=i(_s," for some of the most commonly used parameters associated with each task."),_s.forEach(a),Ga=h(t),nt=l(t,"P",{});var Qi=o(nt);lr=i(Qi,"For example, if you want to specify an aggregation strategy for a NER task in the widget:"),Qi.forEach(a),Ua=h(t),k(Ke.$$.fragment,t),Ja=h(t),ct=l(t,"P",{});var Xi=o(ct);or=i(Xi,"Or if you\u2019d like to change the temperature for a summarization task in the widget:"),Xi.forEach(a),Ka=h(t),k(Ve.$$.fragment,t),Va=h(t),Z=l(t,"P",{});var Es=o(Z);rr=i(Es,"The Inference API allows you to send HTTP requests to models in the Hugging Face Hub, and it\u2019s 2x to 10x faster than the widgets! \u26A1\u26A1 Learn more about it by reading the "),ft=l(Es,"A",{href:!0});var Zi=o(ft);ir=i(Zi,"Inference API documentation"),Zi.forEach(a),nr=i(Es,"."),Es.forEach(a),this.h()},h(){n(P,"name","hf:doc:metadata"),n(P,"content",JSON.stringify(cn)),n(M,"id","widgets"),n(M,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(M,"href","#widgets"),n(O,"class","relative group"),n(R,"id","whats-a-widget"),n(R,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(R,"href","#whats-a-widget"),n(D,"class","relative group"),n(oe,"href","https://huggingface.co/spacy/en_core_web_sm?text=My+name+is+Sarah+and+I+live+in+London"),n(oe,"rel","nofollow"),n(re,"href","https://spacy.io/"),n(re,"rel","nofollow"),n(ne,"href","https://huggingface.co/google/vit-base-patch16-224"),n(ne,"rel","nofollow"),n(ce,"href","https://github.com/huggingface/transformers"),n(ce,"rel","nofollow"),n(fe,"href","https://huggingface.co/julien-c/ljspeech_tts_train_tacotron2_raw_phn_tacotron_g2p_en_no_space_train"),n(fe,"rel","nofollow"),n(pe,"href","https://github.com/espnet/espnet"),n(pe,"rel","nofollow"),n(he,"href","https://huggingface.co/osanseviero/full-sentence-distillroberta3"),n(he,"rel","nofollow"),n(de,"href","https://github.com/UKPLab/sentence-transformers"),n(de,"rel","nofollow"),n(me,"href","https://huggingface-widgets.netlify.app/"),n(me,"rel","nofollow"),n(G,"id","enabling-a-widget"),n(G,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(G,"href","#enabling-a-widget"),n(S,"class","relative group"),n(Ze,"href","./models-cards"),n(ge,"href","https://gist.github.com/julien-c/857ba86a6c6a895ecd90e7f7cab48046"),n(ge,"rel","nofollow"),n(tt,"href","./models-cards#model-card-metadata"),n(U,"id","how-can-i-control-my-models-widget-example-input"),n(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(U,"href","#how-can-i-control-my-models-widget-example-input"),n(H,"class","relative group"),n(_e,"class","block dark:hidden"),n(_e,"width","500"),en(_e.src,fr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples.gif")||n(_e,"src",fr),n(Ee,"class","hidden dark:block"),n(Ee,"width","500"),en(Ee.src,pr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/widget_input_examples-dark.gif")||n(Ee,"src",pr),n(T,"class","flex justify-center"),n(st,"href","./models-widgets-examples"),n(ke,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/DefaultWidget.ts"),n(ke,"rel","nofollow"),n(K,"id","what-are-all-the-possible-taskwidget-types"),n(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(K,"href","#what-are-all-the-possible-taskwidget-types"),n(L,"class","relative group"),n(je,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Types.ts"),n(je,"rel","nofollow"),n(Ce,"href","https://huggingface.co/roberta-large-mnli"),n(Ce,"rel","nofollow"),n(Pe,"href","https://huggingface.co/dbmdz/bert-large-cased-finetuned-conll03-english"),n(Pe,"rel","nofollow"),n(De,"href","https://huggingface.co/distilbert-base-uncased-distilled-squad"),n(De,"rel","nofollow"),n(qe,"href","https://huggingface.co/t5-base"),n(qe,"rel","nofollow"),n(Te,"href","https://huggingface.co/facebook/bart-large-cnn"),n(Te,"rel","nofollow"),n(Ne,"href","https://huggingface.co/facebook/blenderbot-400M-distill"),n(Ne,"rel","nofollow"),n(Me,"href","https://huggingface.co/gpt2"),n(Me,"rel","nofollow"),n(Fe,"href","https://huggingface.co/distilroberta-base"),n(Fe,"rel","nofollow"),n(ze,"href","https://huggingface.co/facebook/bart-large-mnli"),n(ze,"rel","nofollow"),n(Be,"href","https://huggingface.co/google/tapas-base-finetuned-wtq"),n(Be,"rel","nofollow"),n(it,"href","/osanseviero/full-sentence-distillroberta2"),n(Q,"id","how-can-i-control-my-models-widget-inference-api-parameters"),n(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),n(Q,"href","#how-can-i-control-my-models-widget-inference-api-parameters"),n(W,"class","relative group"),n(Je,"href","https://huggingface.co/docs/api-inference/detailed_parameters"),n(Je,"rel","nofollow"),n(ft,"href","./models-inference")},m(t,c){e(document.head,P),f(t,wa,c),f(t,O,c),e(O,M),e(M,ut),$(se,ut,null),e(O,ys),e(O,gt),e(gt,bs),f(t,va,c),f(t,D,c),e(D,R),e(R,wt),$(le,wt,null),e(D,xs),e(D,vt),e(vt,ks),f(t,_a,c),f(t,Qe,c),e(Qe,$s),f(t,Ea,c),f(t,Xe,c),e(Xe,js),f(t,ya,c),f(t,v,c),e(v,F),e(F,oe),e(oe,As),e(F,Cs),e(F,re),e(re,Is),e(F,Ps),e(v,Os),e(v,ie),e(ie,ne),e(ne,Ds),e(ie,Ss),e(ie,ce),e(ce,qs),e(v,Hs),e(v,z),e(z,fe),e(fe,Ts),e(z,Ls),e(z,pe),e(pe,Ns),e(z,Ws),e(v,Ms),e(v,Y),e(Y,he),e(he,Rs),e(Y,Fs),e(Y,de),e(de,zs),e(Y,Ys),f(t,ba,c),f(t,B,c),e(B,Bs),e(B,me),e(me,Gs),e(B,Us),f(t,xa,c),f(t,S,c),e(S,G),e(G,_t),$(ue,_t,null),e(S,Js),e(S,Et),e(Et,Ks),f(t,ka,c),f(t,u,c),e(u,Vs),e(u,yt),e(yt,Qs),e(u,Xs),e(u,bt),e(bt,Zs),e(u,el),e(u,xt),e(xt,tl),e(u,al),e(u,kt),e(kt,sl),e(u,ll),e(u,$t),e($t,ol),e(u,rl),f(t,$a,c),f(t,w,c),e(w,il),e(w,jt),e(jt,nl),e(w,cl),e(w,Ze),e(Ze,fl),e(w,pl),e(w,At),e(At,hl),e(w,dl),e(w,Ct),e(Ct,ml),e(w,ul),f(t,ja,c),f(t,g,c),e(g,gl),e(g,It),e(It,wl),e(g,vl),e(g,Pt),e(Pt,_l),e(g,El),e(g,Ot),e(Ot,yl),e(g,bl),e(g,Dt),e(Dt,xl),e(g,kl),e(g,ge),e(ge,$l),e(g,jl),f(t,Aa,c),f(t,et,c),e(et,q),e(q,Al),e(q,St),e(St,Cl),e(q,Il),e(q,tt),e(tt,Pl),e(q,Ol),f(t,Ca,c),f(t,H,c),e(H,U),e(U,qt),$(we,qt,null),e(H,Dl),e(H,Ht),e(Ht,Sl),f(t,Ia,c),f(t,at,c),e(at,ql),f(t,Pa,c),$(ve,t,c),f(t,Oa,c),f(t,_,c),e(_,Hl),e(_,Tt),e(Tt,Tl),e(_,Ll),e(_,Lt),e(Lt,Nl),e(_,Wl),e(_,Nt),e(Nt,Ml),e(_,Rl),f(t,Da,c),f(t,T,c),e(T,_e),e(T,Fl),e(T,Ee),f(t,Sa,c),$(ye,t,c),f(t,qa,c),f(t,E,c),e(E,zl),e(E,st),e(st,Yl),e(E,Bl),e(E,Wt),e(Wt,Gl),e(E,Ul),e(E,Mt),e(Mt,Jl),e(E,Kl),f(t,Ha,c),f(t,lt,c),e(lt,Vl),f(t,Ta,c),$(be,t,c),f(t,La,c),f(t,ot,c),e(ot,Ql),f(t,Na,c),$(xe,t,c),f(t,Wa,c),f(t,J,c),e(J,Xl),e(J,ke),e(ke,Zl),e(J,eo),f(t,Ma,c),f(t,L,c),e(L,K),e(K,Rt),$($e,Rt,null),e(L,to),e(L,Ft),e(Ft,ao),f(t,Ra,c),f(t,V,c),e(V,so),e(V,je),e(je,lo),e(V,oo),f(t,Fa,c),f(t,rt,c),e(rt,ro),f(t,za,c),f(t,d,c),e(d,Ae),e(Ae,zt),e(zt,io),e(Ae,no),e(Ae,Ce),e(Ce,Yt),e(Yt,co),e(d,fo),e(d,Ie),e(Ie,Bt),e(Bt,po),e(Ie,ho),e(Ie,Pe),e(Pe,Gt),e(Gt,mo),e(d,uo),e(d,Oe),e(Oe,Ut),e(Ut,go),e(Oe,wo),e(Oe,De),e(De,Jt),e(Jt,vo),e(d,_o),e(d,Se),e(Se,Kt),e(Kt,Eo),e(Se,yo),e(Se,qe),e(qe,Vt),e(Vt,bo),e(d,xo),e(d,He),e(He,Qt),e(Qt,ko),e(He,$o),e(He,Te),e(Te,Xt),e(Xt,jo),e(d,Ao),e(d,Le),e(Le,Zt),e(Zt,Co),e(Le,Io),e(Le,Ne),e(Ne,ea),e(ea,Po),e(d,Oo),e(d,We),e(We,ta),e(ta,Do),e(We,So),e(We,Me),e(Me,aa),e(aa,qo),e(d,Ho),e(d,Re),e(Re,sa),e(sa,To),e(Re,Lo),e(Re,Fe),e(Fe,la),e(la,No),e(d,Wo),e(d,N),e(N,oa),e(oa,Mo),e(N,Ro),e(N,ra),e(ra,Fo),e(N,zo),e(N,ze),e(ze,ia),e(ia,Yo),e(d,Bo),e(d,Ye),e(Ye,na),e(na,Go),e(Ye,Uo),e(Ye,Be),e(Be,ca),e(ca,Jo),e(d,Ko),e(d,Ge),e(Ge,fa),e(fa,Vo),e(Ge,Qo),e(Ge,it),e(it,pa),e(pa,Xo),f(t,Ya,c),f(t,W,c),e(W,Q),e(Q,ha),$(Ue,ha,null),e(W,Zo),e(W,da),e(da,er),f(t,Ba,c),f(t,X,c),e(X,tr),e(X,Je),e(Je,ar),e(X,sr),f(t,Ga,c),f(t,nt,c),e(nt,lr),f(t,Ua,c),$(Ke,t,c),f(t,Ja,c),f(t,ct,c),e(ct,or),f(t,Ka,c),$(Ve,t,c),f(t,Va,c),f(t,Z,c),e(Z,rr),e(Z,ft),e(ft,ir),e(Z,nr),Qa=!0},p:on,i(t){Qa||(j(se.$$.fragment,t),j(le.$$.fragment,t),j(ue.$$.fragment,t),j(we.$$.fragment,t),j(ve.$$.fragment,t),j(ye.$$.fragment,t),j(be.$$.fragment,t),j(xe.$$.fragment,t),j($e.$$.fragment,t),j(Ue.$$.fragment,t),j(Ke.$$.fragment,t),j(Ve.$$.fragment,t),Qa=!0)},o(t){A(se.$$.fragment,t),A(le.$$.fragment,t),A(ue.$$.fragment,t),A(we.$$.fragment,t),A(ve.$$.fragment,t),A(ye.$$.fragment,t),A(be.$$.fragment,t),A(xe.$$.fragment,t),A($e.$$.fragment,t),A(Ue.$$.fragment,t),A(Ke.$$.fragment,t),A(Ve.$$.fragment,t),Qa=!1},d(t){a(P),t&&a(wa),t&&a(O),C(se),t&&a(va),t&&a(D),C(le),t&&a(_a),t&&a(Qe),t&&a(Ea),t&&a(Xe),t&&a(ya),t&&a(v),t&&a(ba),t&&a(B),t&&a(xa),t&&a(S),C(ue),t&&a(ka),t&&a(u),t&&a($a),t&&a(w),t&&a(ja),t&&a(g),t&&a(Aa),t&&a(et),t&&a(Ca),t&&a(H),C(we),t&&a(Ia),t&&a(at),t&&a(Pa),C(ve,t),t&&a(Oa),t&&a(_),t&&a(Da),t&&a(T),t&&a(Sa),C(ye,t),t&&a(qa),t&&a(E),t&&a(Ha),t&&a(lt),t&&a(Ta),C(be,t),t&&a(La),t&&a(ot),t&&a(Na),C(xe,t),t&&a(Wa),t&&a(J),t&&a(Ma),t&&a(L),C($e),t&&a(Ra),t&&a(V),t&&a(Fa),t&&a(rt),t&&a(za),t&&a(d),t&&a(Ya),t&&a(W),C(Ue),t&&a(Ba),t&&a(X),t&&a(Ga),t&&a(nt),t&&a(Ua),C(Ke,t),t&&a(Ja),t&&a(ct),t&&a(Ka),C(Ve,t),t&&a(Va),t&&a(Z)}}}const cn={local:"widgets",sections:[{local:"whats-a-widget",title:"What's a widget?"},{local:"enabling-a-widget",sections:[{local:"how-can-i-control-my-models-widget-example-input",title:"How can I control my model's widget example input?"}],title:"Enabling a widget"},{local:"what-are-all-the-possible-taskwidget-types",title:"What are all the possible task/widget types?"},{local:"how-can-i-control-my-models-widget-inference-api-parameters",title:"How can I control my model's widget Inference API parameters?"}],title:"Widgets"};function fn(cr){return rn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class mn extends tn{constructor(P){super();an(this,P,fn,nn,sn,{})}}export{mn as default,cn as metadata};
