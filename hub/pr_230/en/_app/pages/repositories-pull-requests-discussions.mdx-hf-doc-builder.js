import{S as xa,i as Ra,s as Sa,e as r,k as u,w as p,t as h,N as Ga,c as a,d as t,m as c,a as o,x as d,h as f,b as i,P as b,G as s,g as n,y as m,L as Ma,q as v,o as g,B as _,v as Da}from"../chunks/vendor-hf-doc-builder.js";import{I as $}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as gs}from"../chunks/CodeBlock-hf-doc-builder.js";function ja($r){let w,dt,k,O,He,Z,_s,Oe,bs,mt,C,ys,Ce,$s,ws,vt,_e,ks,gt,y,ee,Es,We,Ps,qs,As,Be,Is,Ns,Ue,xs,_t,E,W,Ve,te,Rs,Fe,Ss,bt,P,be,wr,Gs,ye,kr,yt,q,B,Te,se,Ms,Ye,Ds,$t,A,$e,Er,js,we,Pr,wt,I,U,Je,re,Ls,ze,Hs,kt,ke,Os,Et,N,Ee,qr,Cs,Pe,Ar,Pt,x,V,Ke,ae,Ws,Qe,Bs,qt,qe,Us,At,R,Ae,Ir,Vs,Ie,Nr,It,S,Ne,xr,Fs,xe,Rr,Nt,Re,Ts,xt,G,Se,Sr,Ys,Ge,Gr,Rt,M,F,Xe,ie,Js,Ze,zs,St,Me,Ks,Gt,le,Mt,D,T,et,oe,Qs,tt,Xs,Dt,De,Zs,jt,j,Y,st,ne,er,rt,tr,Lt,L,J,at,ue,sr,it,rr,Ht,z,ar,lt,ir,lr,Ot,ce,he,or,nr,Ct,K,ur,ot,cr,hr,Wt,H,Q,nt,fe,fr,ut,pr,Bt,X,dr,ct,mr,vr,Ut,je,ht,gr,Vt,pe,Ft,de,ft,_r,Tt,me,Yt,ve,pt,br,Jt,ge,zt;return Z=new $({}),te=new $({}),se=new $({}),re=new $({}),ae=new $({}),ie=new $({}),le=new gs({props:{code:`git fetch origin refs/pr/42:pr/42
git checkout pr/42
# Do your changes
git add .
git commit -m "Add your change"
git push origin pr/42:refs/pr/42`,highlighted:`git fetch origin refs/pr/42:<span class="hljs-built_in">pr</span>/42
git checkout <span class="hljs-built_in">pr</span>/42
<span class="hljs-comment"># Do your changes</span>
git add .
git commit -m <span class="hljs-string">&quot;Add your change&quot;</span>
git push origin <span class="hljs-built_in">pr</span>/42:refs/pr/42`}}),oe=new $({}),ne=new $({}),ue=new $({}),fe=new $({}),pe=new gs({props:{code:"git fetch refs/pr/*:refs/remotes/origin/pr/*",highlighted:"git fetch refs/pr/*:refs/remotes/origin/pr/*"}}),me=new gs({props:{code:`git checkout pr/{PR_NUMBER}
# for example: git checkout pr/42`,highlighted:`git checkout <span class="hljs-built_in">pr</span>/{PR_NUMBER}
<span class="hljs-comment"># for example: git checkout pr/42</span>`}}),ge=new gs({props:{code:`git push origin pr/{PR_NUMBER}:refs/pr/{PR_NUMBER}
# for example: git push origin pr/42:refs/pr/42`,highlighted:`git push origin <span class="hljs-built_in">pr</span>/{PR_NUMBER}:refs/pr/{PR_NUMBER}
<span class="hljs-comment"># for example: git push origin pr/42:refs/pr/42</span>`}}),{c(){w=r("meta"),dt=u(),k=r("h1"),O=r("a"),He=r("span"),p(Z.$$.fragment),_s=u(),Oe=r("span"),bs=h("Pull requests and Discussions"),mt=u(),C=r("p"),ys=h("We just enabled "),Ce=r("strong"),$s=h("community contributions to repos"),ws=h(", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),vt=u(),_e=r("p"),ks=h("At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),gt=u(),y=r("ul"),ee=r("li"),Es=h("no forks are involved: contributors push to a special "),We=r("code"),Ps=h("ref"),qs=h(" branch directly on the source repo."),As=u(),Be=r("li"),Is=h("there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Ns=u(),Ue=r("li"),xs=h("they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),_t=u(),E=r("h2"),W=r("a"),Ve=r("span"),p(te.$$.fragment),Rs=u(),Fe=r("span"),Ss=h("List"),bt=u(),P=r("div"),be=r("img"),Gs=u(),ye=r("img"),yt=u(),q=r("h2"),B=r("a"),Te=r("span"),p(se.$$.fragment),Ms=u(),Ye=r("span"),Ds=h("View"),$t=u(),A=r("div"),$e=r("img"),js=u(),we=r("img"),wt=u(),I=r("h2"),U=r("a"),Je=r("span"),p(re.$$.fragment),Ls=u(),ze=r("span"),Hs=h("Editing a Discussion / Pull request title"),kt=u(),ke=r("p"),Os=h("If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),Et=u(),N=r("div"),Ee=r("img"),Cs=u(),Pe=r("img"),Pt=u(),x=r("h2"),V=r("a"),Ke=r("span"),p(ae.$$.fragment),Ws=u(),Qe=r("span"),Bs=h("Comment edition and moderation"),qt=u(),qe=r("p"),Us=h("If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),At=u(),R=r("div"),Ae=r("img"),Vs=u(),Ie=r("img"),It=u(),S=r("div"),Ne=r("img"),Fs=u(),xe=r("img"),Nt=u(),Re=r("p"),Ts=h("You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),xt=u(),G=r("div"),Se=r("img"),Ys=u(),Ge=r("img"),Rt=u(),M=r("h2"),F=r("a"),Xe=r("span"),p(ie.$$.fragment),Js=u(),Ze=r("span"),zs=h("How do I manage Pull requests locally?"),St=u(),Me=r("p"),Ks=h("Let\u2019s assume your PR number is 42."),Gt=u(),p(le.$$.fragment),Mt=u(),D=r("h3"),T=r("a"),et=r("span"),p(oe.$$.fragment),Qs=u(),tt=r("span"),Xs=h("Draft mode"),Dt=u(),De=r("p"),Zs=h("Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),jt=u(),j=r("h1"),Y=r("a"),st=r("span"),p(ne.$$.fragment),er=u(),rt=r("span"),tr=h("Pull requests advanced usage"),Lt=u(),L=r("h2"),J=r("a"),at=r("span"),p(ue.$$.fragment),sr=u(),it=r("span"),rr=h("Where in the git repo are changes stored?"),Ht=u(),z=r("p"),ar=h("Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),lt=r("code"),ir=h("refs"),lr=h(" that are stored directly on the source repo."),Ot=u(),ce=r("p"),he=r("a"),or=h("Git References"),nr=h(" are the internal machinery of git which already stores tags and branches."),Ct=u(),K=r("p"),ur=h("The advantage of using custom refs (like "),ot=r("code"),cr=h("refs/pr/42"),hr=h(" for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),Wt=u(),H=r("h2"),Q=r("a"),nt=r("span"),p(fe.$$.fragment),fr=u(),ut=r("span"),pr=h("Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),Bt=u(),X=r("p"),dr=h("You can tweak your local "),ct=r("strong"),mr=h("refspec"),vr=h(" to fetch all Pull requests:"),Ut=u(),je=r("ol"),ht=r("li"),gr=h("Fetch"),Vt=u(),p(pe.$$.fragment),Ft=u(),de=r("ol"),ft=r("li"),_r=h("create a local branch tracking the ref"),Tt=u(),p(me.$$.fragment),Yt=u(),ve=r("ol"),pt=r("li"),br=h("IF you make local changes, to push to the PR ref:"),Jt=u(),p(ge.$$.fragment),this.h()},l(e){const l=Ga('[data-svelte="svelte-1phssyn"]',document.head);w=a(l,"META",{name:!0,content:!0}),l.forEach(t),dt=c(e),k=a(e,"H1",{class:!0});var Kt=o(k);O=a(Kt,"A",{id:!0,class:!0,href:!0});var Mr=o(O);He=a(Mr,"SPAN",{});var Dr=o(He);d(Z.$$.fragment,Dr),Dr.forEach(t),Mr.forEach(t),_s=c(Kt),Oe=a(Kt,"SPAN",{});var jr=o(Oe);bs=f(jr,"Pull requests and Discussions"),jr.forEach(t),Kt.forEach(t),mt=c(e),C=a(e,"P",{});var Qt=o(C);ys=f(Qt,"We just enabled "),Ce=a(Qt,"STRONG",{});var Lr=o(Ce);$s=f(Lr,"community contributions to repos"),Lr.forEach(t),ws=f(Qt,", a feature called \u2018Hub Pull requests and Discussions\u2019. Pull requests and discussions work the same for all the repo types."),Qt.forEach(t),vt=c(e),_e=a(e,"P",{});var Hr=o(_e);ks=f(Hr,"At a high level, the aim is to build a simpler version of other git hosts\u2019 (like GitHub\u2019s) PRs and Issues:"),Hr.forEach(t),gt=c(e),y=a(e,"UL",{});var Le=o(y);ee=a(Le,"LI",{});var Xt=o(ee);Es=f(Xt,"no forks are involved: contributors push to a special "),We=a(Xt,"CODE",{});var Or=o(We);Ps=f(Or,"ref"),Or.forEach(t),qs=f(Xt," branch directly on the source repo."),Xt.forEach(t),As=c(Le),Be=a(Le,"LI",{});var Cr=o(Be);Is=f(Cr,"there\u2019s no hard distinction between discussions and PRs: they are essentially the same so they are displayed in the same lists."),Cr.forEach(t),Ns=c(Le),Ue=a(Le,"LI",{});var Wr=o(Ue);xs=f(Wr,"they are streamlined for ML (i.e. models/datasets/spaces repos), not arbitrary repos."),Wr.forEach(t),Le.forEach(t),_t=c(e),E=a(e,"H2",{class:!0});var Zt=o(E);W=a(Zt,"A",{id:!0,class:!0,href:!0});var Br=o(W);Ve=a(Br,"SPAN",{});var Ur=o(Ve);d(te.$$.fragment,Ur),Ur.forEach(t),Br.forEach(t),Rs=c(Zt),Fe=a(Zt,"SPAN",{});var Vr=o(Fe);Ss=f(Vr,"List"),Vr.forEach(t),Zt.forEach(t),bt=c(e),P=a(e,"DIV",{class:!0});var es=o(P);be=a(es,"IMG",{class:!0,src:!0}),Gs=c(es),ye=a(es,"IMG",{class:!0,src:!0}),es.forEach(t),yt=c(e),q=a(e,"H2",{class:!0});var ts=o(q);B=a(ts,"A",{id:!0,class:!0,href:!0});var Fr=o(B);Te=a(Fr,"SPAN",{});var Tr=o(Te);d(se.$$.fragment,Tr),Tr.forEach(t),Fr.forEach(t),Ms=c(ts),Ye=a(ts,"SPAN",{});var Yr=o(Ye);Ds=f(Yr,"View"),Yr.forEach(t),ts.forEach(t),$t=c(e),A=a(e,"DIV",{class:!0});var ss=o(A);$e=a(ss,"IMG",{class:!0,src:!0}),js=c(ss),we=a(ss,"IMG",{class:!0,src:!0}),ss.forEach(t),wt=c(e),I=a(e,"H2",{class:!0});var rs=o(I);U=a(rs,"A",{id:!0,class:!0,href:!0});var Jr=o(U);Je=a(Jr,"SPAN",{});var zr=o(Je);d(re.$$.fragment,zr),zr.forEach(t),Jr.forEach(t),Ls=c(rs),ze=a(rs,"SPAN",{});var Kr=o(ze);Hs=f(Kr,"Editing a Discussion / Pull request title"),Kr.forEach(t),rs.forEach(t),kt=c(e),ke=a(e,"P",{});var Qr=o(ke);Os=f(Qr,"If you opened a PR or discussion, are the author of the repository, or have write access to it, you can edit the discussion title by clicking on the pencil button."),Qr.forEach(t),Et=c(e),N=a(e,"DIV",{class:!0});var as=o(N);Ee=a(as,"IMG",{class:!0,src:!0}),Cs=c(as),Pe=a(as,"IMG",{class:!0,src:!0}),as.forEach(t),Pt=c(e),x=a(e,"H2",{class:!0});var is=o(x);V=a(is,"A",{id:!0,class:!0,href:!0});var Xr=o(V);Ke=a(Xr,"SPAN",{});var Zr=o(Ke);d(ae.$$.fragment,Zr),Zr.forEach(t),Xr.forEach(t),Ws=c(is),Qe=a(is,"SPAN",{});var ea=o(Qe);Bs=f(ea,"Comment edition and moderation"),ea.forEach(t),is.forEach(t),qt=c(e),qe=a(e,"P",{});var ta=o(qe);Us=f(ta,"If you wrote a comment or have write access to the repository, you can edit the content of the comment from the contextual menu in the top-right corner of the comment box."),ta.forEach(t),At=c(e),R=a(e,"DIV",{class:!0});var ls=o(R);Ae=a(ls,"IMG",{class:!0,src:!0}),Vs=c(ls),Ie=a(ls,"IMG",{class:!0,src:!0}),ls.forEach(t),It=c(e),S=a(e,"DIV",{class:!0});var os=o(S);Ne=a(os,"IMG",{class:!0,src:!0}),Fs=c(os),xe=a(os,"IMG",{class:!0,src:!0}),os.forEach(t),Nt=c(e),Re=a(e,"P",{});var sa=o(Re);Ts=f(sa,"You can also hide a comment. Hiding a comment is irreversible, and nobody will be able to see its content nor edit it anymore."),sa.forEach(t),xt=c(e),G=a(e,"DIV",{class:!0});var ns=o(G);Se=a(ns,"IMG",{class:!0,src:!0}),Ys=c(ns),Ge=a(ns,"IMG",{class:!0,src:!0}),ns.forEach(t),Rt=c(e),M=a(e,"H2",{class:!0});var us=o(M);F=a(us,"A",{id:!0,class:!0,href:!0});var ra=o(F);Xe=a(ra,"SPAN",{});var aa=o(Xe);d(ie.$$.fragment,aa),aa.forEach(t),ra.forEach(t),Js=c(us),Ze=a(us,"SPAN",{});var ia=o(Ze);zs=f(ia,"How do I manage Pull requests locally?"),ia.forEach(t),us.forEach(t),St=c(e),Me=a(e,"P",{});var la=o(Me);Ks=f(la,"Let\u2019s assume your PR number is 42."),la.forEach(t),Gt=c(e),d(le.$$.fragment,e),Mt=c(e),D=a(e,"H3",{class:!0});var cs=o(D);T=a(cs,"A",{id:!0,class:!0,href:!0});var oa=o(T);et=a(oa,"SPAN",{});var na=o(et);d(oe.$$.fragment,na),na.forEach(t),oa.forEach(t),Qs=c(cs),tt=a(cs,"SPAN",{});var ua=o(tt);Xs=f(ua,"Draft mode"),ua.forEach(t),cs.forEach(t),Dt=c(e),De=a(e,"P",{});var ca=o(De);Zs=f(ca,"Draft mode is the default status when opening a new Pull request from scratch in \u201CAdvanced mode\u201D. With this status, other contributors know that your Pull request is under work and it cannot be merged. When your branch is ready, just hit the \u201CPublish\u201D button to change the status of the Pull request to \u201COpen\u201D. Note that once published you cannot go back to draft mode."),ca.forEach(t),jt=c(e),j=a(e,"H1",{class:!0});var hs=o(j);Y=a(hs,"A",{id:!0,class:!0,href:!0});var ha=o(Y);st=a(ha,"SPAN",{});var fa=o(st);d(ne.$$.fragment,fa),fa.forEach(t),ha.forEach(t),er=c(hs),rt=a(hs,"SPAN",{});var pa=o(rt);tr=f(pa,"Pull requests advanced usage"),pa.forEach(t),hs.forEach(t),Lt=c(e),L=a(e,"H2",{class:!0});var fs=o(L);J=a(fs,"A",{id:!0,class:!0,href:!0});var da=o(J);at=a(da,"SPAN",{});var ma=o(at);d(ue.$$.fragment,ma),ma.forEach(t),da.forEach(t),sr=c(fs),it=a(fs,"SPAN",{});var va=o(it);rr=f(va,"Where in the git repo are changes stored?"),va.forEach(t),fs.forEach(t),Ht=c(e),z=a(e,"P",{});var ps=o(z);ar=f(ps,"Our Pull requests do not use forks and branches, but instead custom \u201Cbranches\u201D called "),lt=a(ps,"CODE",{});var ga=o(lt);ir=f(ga,"refs"),ga.forEach(t),lr=f(ps," that are stored directly on the source repo."),ps.forEach(t),Ot=c(e),ce=a(e,"P",{});var yr=o(ce);he=a(yr,"A",{href:!0,rel:!0});var _a=o(he);or=f(_a,"Git References"),_a.forEach(t),nr=f(yr," are the internal machinery of git which already stores tags and branches."),yr.forEach(t),Ct=c(e),K=a(e,"P",{});var ds=o(K);ur=f(ds,"The advantage of using custom refs (like "),ot=a(ds,"CODE",{});var ba=o(ot);cr=f(ba,"refs/pr/42"),ba.forEach(t),hr=f(ds," for instance) instead of branches is that they\u2019re not fetched (by default) by people (including the repo \u201Cowner\u201D) cloning the repo, but they can still be fetched on demand."),ds.forEach(t),Wt=c(e),H=a(e,"H2",{class:!0});var ms=o(H);Q=a(ms,"A",{id:!0,class:!0,href:!0});var ya=o(Q);nt=a(ya,"SPAN",{});var $a=o(nt);d(fe.$$.fragment,$a),$a.forEach(t),ya.forEach(t),fr=c(ms),ut=a(ms,"SPAN",{});var wa=o(ut);pr=f(wa,"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"),wa.forEach(t),ms.forEach(t),Bt=c(e),X=a(e,"P",{});var vs=o(X);dr=f(vs,"You can tweak your local "),ct=a(vs,"STRONG",{});var ka=o(ct);mr=f(ka,"refspec"),ka.forEach(t),vr=f(vs," to fetch all Pull requests:"),vs.forEach(t),Ut=c(e),je=a(e,"OL",{});var Ea=o(je);ht=a(Ea,"LI",{});var Pa=o(ht);gr=f(Pa,"Fetch"),Pa.forEach(t),Ea.forEach(t),Vt=c(e),d(pe.$$.fragment,e),Ft=c(e),de=a(e,"OL",{start:!0});var qa=o(de);ft=a(qa,"LI",{});var Aa=o(ft);_r=f(Aa,"create a local branch tracking the ref"),Aa.forEach(t),qa.forEach(t),Tt=c(e),d(me.$$.fragment,e),Yt=c(e),ve=a(e,"OL",{start:!0});var Ia=o(ve);pt=a(Ia,"LI",{});var Na=o(pt);br=f(Na,"IF you make local changes, to push to the PR ref:"),Na.forEach(t),Ia.forEach(t),Jt=c(e),d(ge.$$.fragment,e),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(La)),i(O,"id","pull-requests-and-discussions"),i(O,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(O,"href","#pull-requests-and-discussions"),i(k,"class","relative group"),i(W,"id","list"),i(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(W,"href","#list"),i(E,"class","relative group"),i(be,"class","block dark:hidden"),b(be.src,wr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list.png")||i(be,"src",wr),i(ye,"class","hidden dark:block"),b(ye.src,kr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-list-dark.png")||i(ye,"src",kr),i(P,"class","flex justify-center"),i(B,"id","view"),i(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(B,"href","#view"),i(q,"class","relative group"),i($e,"class","block dark:hidden"),b($e.src,Er="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view.png")||i($e,"src",Er),i(we,"class","hidden dark:block"),b(we.src,Pr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-view-dark.png")||i(we,"src",Pr),i(A,"class","flex justify-center"),i(U,"id","editing-a-discussion-pull-request-title"),i(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(U,"href","#editing-a-discussion-pull-request-title"),i(I,"class","relative group"),i(Ee,"class","block dark:hidden"),b(Ee.src,qr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title.PNG")||i(Ee,"src",qr),i(Pe,"class","hidden dark:block"),b(Pe.src,Ar="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-edit-title-dark.PNG")||i(Pe,"src",Ar),i(N,"class","flex justify-center"),i(V,"id","comment-edition-and-moderation"),i(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(V,"href","#comment-edition-and-moderation"),i(x,"class","relative group"),i(Ae,"class","block dark:hidden"),b(Ae.src,Ir="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu.png")||i(Ae,"src",Ir),i(Ie,"class","hidden dark:block"),b(Ie.src,Nr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-dark.png")||i(Ie,"src",Nr),i(R,"class","flex justify-center"),i(Ne,"class","block dark:hidden"),b(Ne.src,xr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit.png")||i(Ne,"src",xr),i(xe,"class","hidden dark:block"),b(xe.src,Rr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-menu-edit-dark.png")||i(xe,"src",Rr),i(S,"class","flex justify-center"),i(Se,"class","block dark:hidden"),b(Se.src,Sr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden.png")||i(Se,"src",Sr),i(Ge,"class","hidden dark:block"),b(Ge.src,Gr="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/hub/discussions-comment-hidden-dark.png")||i(Ge,"src",Gr),i(G,"class","flex justify-center"),i(F,"id","how-do-i-manage-pull-requests-locally"),i(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(F,"href","#how-do-i-manage-pull-requests-locally"),i(M,"class","relative group"),i(T,"id","draft-mode"),i(T,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(T,"href","#draft-mode"),i(D,"class","relative group"),i(Y,"id","pull-requests-advanced-usage"),i(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Y,"href","#pull-requests-advanced-usage"),i(j,"class","relative group"),i(J,"id","where-in-the-git-repo-are-changes-stored"),i(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(J,"href","#where-in-the-git-repo-are-changes-stored"),i(L,"class","relative group"),i(he,"href","https://git-scm.com/book/en/v2/Git-Internals-Git-References"),i(he,"rel","nofollow"),i(Q,"id","fetching-all-pull-requests-for-git-magicians"),i(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Q,"href","#fetching-all-pull-requests-for-git-magicians"),i(H,"class","relative group"),i(de,"start","2"),i(ve,"start","3")},m(e,l){s(document.head,w),n(e,dt,l),n(e,k,l),s(k,O),s(O,He),m(Z,He,null),s(k,_s),s(k,Oe),s(Oe,bs),n(e,mt,l),n(e,C,l),s(C,ys),s(C,Ce),s(Ce,$s),s(C,ws),n(e,vt,l),n(e,_e,l),s(_e,ks),n(e,gt,l),n(e,y,l),s(y,ee),s(ee,Es),s(ee,We),s(We,Ps),s(ee,qs),s(y,As),s(y,Be),s(Be,Is),s(y,Ns),s(y,Ue),s(Ue,xs),n(e,_t,l),n(e,E,l),s(E,W),s(W,Ve),m(te,Ve,null),s(E,Rs),s(E,Fe),s(Fe,Ss),n(e,bt,l),n(e,P,l),s(P,be),s(P,Gs),s(P,ye),n(e,yt,l),n(e,q,l),s(q,B),s(B,Te),m(se,Te,null),s(q,Ms),s(q,Ye),s(Ye,Ds),n(e,$t,l),n(e,A,l),s(A,$e),s(A,js),s(A,we),n(e,wt,l),n(e,I,l),s(I,U),s(U,Je),m(re,Je,null),s(I,Ls),s(I,ze),s(ze,Hs),n(e,kt,l),n(e,ke,l),s(ke,Os),n(e,Et,l),n(e,N,l),s(N,Ee),s(N,Cs),s(N,Pe),n(e,Pt,l),n(e,x,l),s(x,V),s(V,Ke),m(ae,Ke,null),s(x,Ws),s(x,Qe),s(Qe,Bs),n(e,qt,l),n(e,qe,l),s(qe,Us),n(e,At,l),n(e,R,l),s(R,Ae),s(R,Vs),s(R,Ie),n(e,It,l),n(e,S,l),s(S,Ne),s(S,Fs),s(S,xe),n(e,Nt,l),n(e,Re,l),s(Re,Ts),n(e,xt,l),n(e,G,l),s(G,Se),s(G,Ys),s(G,Ge),n(e,Rt,l),n(e,M,l),s(M,F),s(F,Xe),m(ie,Xe,null),s(M,Js),s(M,Ze),s(Ze,zs),n(e,St,l),n(e,Me,l),s(Me,Ks),n(e,Gt,l),m(le,e,l),n(e,Mt,l),n(e,D,l),s(D,T),s(T,et),m(oe,et,null),s(D,Qs),s(D,tt),s(tt,Xs),n(e,Dt,l),n(e,De,l),s(De,Zs),n(e,jt,l),n(e,j,l),s(j,Y),s(Y,st),m(ne,st,null),s(j,er),s(j,rt),s(rt,tr),n(e,Lt,l),n(e,L,l),s(L,J),s(J,at),m(ue,at,null),s(L,sr),s(L,it),s(it,rr),n(e,Ht,l),n(e,z,l),s(z,ar),s(z,lt),s(lt,ir),s(z,lr),n(e,Ot,l),n(e,ce,l),s(ce,he),s(he,or),s(ce,nr),n(e,Ct,l),n(e,K,l),s(K,ur),s(K,ot),s(ot,cr),s(K,hr),n(e,Wt,l),n(e,H,l),s(H,Q),s(Q,nt),m(fe,nt,null),s(H,fr),s(H,ut),s(ut,pr),n(e,Bt,l),n(e,X,l),s(X,dr),s(X,ct),s(ct,mr),s(X,vr),n(e,Ut,l),n(e,je,l),s(je,ht),s(ht,gr),n(e,Vt,l),m(pe,e,l),n(e,Ft,l),n(e,de,l),s(de,ft),s(ft,_r),n(e,Tt,l),m(me,e,l),n(e,Yt,l),n(e,ve,l),s(ve,pt),s(pt,br),n(e,Jt,l),m(ge,e,l),zt=!0},p:Ma,i(e){zt||(v(Z.$$.fragment,e),v(te.$$.fragment,e),v(se.$$.fragment,e),v(re.$$.fragment,e),v(ae.$$.fragment,e),v(ie.$$.fragment,e),v(le.$$.fragment,e),v(oe.$$.fragment,e),v(ne.$$.fragment,e),v(ue.$$.fragment,e),v(fe.$$.fragment,e),v(pe.$$.fragment,e),v(me.$$.fragment,e),v(ge.$$.fragment,e),zt=!0)},o(e){g(Z.$$.fragment,e),g(te.$$.fragment,e),g(se.$$.fragment,e),g(re.$$.fragment,e),g(ae.$$.fragment,e),g(ie.$$.fragment,e),g(le.$$.fragment,e),g(oe.$$.fragment,e),g(ne.$$.fragment,e),g(ue.$$.fragment,e),g(fe.$$.fragment,e),g(pe.$$.fragment,e),g(me.$$.fragment,e),g(ge.$$.fragment,e),zt=!1},d(e){t(w),e&&t(dt),e&&t(k),_(Z),e&&t(mt),e&&t(C),e&&t(vt),e&&t(_e),e&&t(gt),e&&t(y),e&&t(_t),e&&t(E),_(te),e&&t(bt),e&&t(P),e&&t(yt),e&&t(q),_(se),e&&t($t),e&&t(A),e&&t(wt),e&&t(I),_(re),e&&t(kt),e&&t(ke),e&&t(Et),e&&t(N),e&&t(Pt),e&&t(x),_(ae),e&&t(qt),e&&t(qe),e&&t(At),e&&t(R),e&&t(It),e&&t(S),e&&t(Nt),e&&t(Re),e&&t(xt),e&&t(G),e&&t(Rt),e&&t(M),_(ie),e&&t(St),e&&t(Me),e&&t(Gt),_(le,e),e&&t(Mt),e&&t(D),_(oe),e&&t(Dt),e&&t(De),e&&t(jt),e&&t(j),_(ne),e&&t(Lt),e&&t(L),_(ue),e&&t(Ht),e&&t(z),e&&t(Ot),e&&t(ce),e&&t(Ct),e&&t(K),e&&t(Wt),e&&t(H),_(fe),e&&t(Bt),e&&t(X),e&&t(Ut),e&&t(je),e&&t(Vt),_(pe,e),e&&t(Ft),e&&t(de),e&&t(Tt),_(me,e),e&&t(Yt),e&&t(ve),e&&t(Jt),_(ge,e)}}}const La={local:"pull-requests-advanced-usage",sections:[{local:"where-in-the-git-repo-are-changes-stored",title:"Where in the git repo are changes stored?"},{local:"fetching-all-pull-requests-for-git-magicians",title:"Fetching all Pull requests: for git magicians \u{1F9D9}\u200D\u2640\uFE0F"}],title:"Pull requests advanced usage"};function Ha($r){return Da(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ba extends xa{constructor(w){super();Ra(this,w,Ha,ja,Sa,{})}}export{Ba as default,La as metadata};
